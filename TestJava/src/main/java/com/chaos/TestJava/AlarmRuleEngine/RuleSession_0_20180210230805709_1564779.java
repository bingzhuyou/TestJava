package com.chaos.TestJava.AlarmRuleEngine;

import java.util.HashMap;
import java.util.Map;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class RuleSession_0_20180210230805709_1564779 extends RuleBaseOP<Map> {
	public static Logger logger = LoggerFactory.getLogger("filterDetails");

	public RuleSession_0_20180210230805709_1564779() {
	}

	public void filter1(String alarmId) {
		if ((c[3] && c[256])) {
			add(740366415);
		}
		if ((c[113] && c[1] && c[20] && c[12] && c[187]) || (c[115] && c[1] && c[20] && c[29] && c[116]) || (c[135]
				&& c[1] && c[139] && c[53] && c[268]) || (c[118] && c[1] && c[20] && c[29] && c[185]) || (c[135] && c[1]
						&& c[20] && c[53] && c[269])) {
			add(1006574551);
		}
		if ((c[85] && c[20] && c[29] && c[132])) {
			add(-624087317);
		}
		if ((c[18] && c[1] && c[287] && c[51]) || (c[18] && c[1] && c[291] && c[51])) {
			add(1544397859);
		}
		if ((c[23] && c[84] && c[62])) {
			add(-1584992757);
		}
		if ((c[8])) {
			add(465227867, -527211851, -157625496);
		}
		if ((c[90])) {
			add(622001306);
		}
		if ((c[9] && c[452] && c[453] && c[29] && c[454]) || (c[9] && c[80] && c[455] && c[29] && c[83]) || (c[9]
				&& c[14] && c[15] && c[16] && c[29] && c[17]) || (c[9] && c[107] && c[108] && c[29]) || (c[9] && c[80]
						&& c[451] && c[29] && c[388]) || (c[9] && c[456] && c[29]) || (c[73] && c[74] && c[75] && c[29]
								&& c[77]) || (c[9] && c[457] && c[161] && c[458] && c[20] && c[29]) || (c[9] && c[459]
										&& c[460] && c[29] && c[276])) {
			add(1787300890);
		}
		if ((c[21])) {
			add(-605024759, 292959418);
		}
		if ((c[9] && c[264]) || (c[9] && c[265] && c[266]) || (c[9] && c[267])) {
			add(401506111);
		}
		if ((c[396] && c[6] && c[397] && c[7] && c[8])) {
			add(-115887250);
		}
		if ((c[285] && c[1] && c[29] && c[286]) || (c[292] && c[1] && c[29] && c[293]) || (c[289] && c[290] && c[1]
				&& c[29]) || (c[295] && c[1] && c[29])) {
			add(-1254089645);
		}
		if ((c[9] && c[156])) {
			add(1979449516);
		}
		if ((c[98] && c[99]) || (c[387])) {
			add(1946892026);
		}
		if ((c[9] && c[526] && c[527]) || (c[9] && c[527])) {
			add(1918734616);
		}
		if ((c[105] && c[287]) || (c[105] && c[304]) || (c[105] && c[291])) {
			add(513318156);
		}
		if ((!c[133] && c[23] && c[28] && c[499] && c[25] && c[8]) || (c[23] && c[28] && c[499] && c[25] && c[62])) {
			add(188468193);
		}
		if ((c[85] && c[20] && c[103] && c[104])) {
			add(1000598086);
		}
		if ((c[255])) {
			add(2080379939);
		}
		if ((c[534])) {
			add(1782010507);
		}
		if ((c[33] && c[38])) {
			add(-1355898583);
		}
		if ((c[3])) {
			add(-482259190);
		}
		if ((c[27] && c[28] && c[29] && c[8])) {
			add(554664165);
		}
		if ((c[92])) {
			add(-176772973);
		}
		if ((c[93])) {
			add(-2104829764);
		}
		if ((c[536] && c[537]) || (!c[22] && c[484] && c[62]) || (c[98] && c[423]) || (c[538] && c[99])) {
			add(-1158156042);
		}
		if ((c[133] && c[27] && c[8] && c[134])) {
			add(1148552891);
		}
		if ((c[3] && c[67])) {
			add(-1967922913);
		}
		if ((c[1] && c[518] && c[103] && c[54])) {
			add(-1168225270);
		}
		if ((c[1] && c[305] && c[51])) {
			add(1090596631);
		}
		if ((c[401] && c[20])) {
			add(1722288004);
		}
		if ((c[3] && c[517])) {
			add(-989850727);
		}
		if ((c[358])) {
			add(1827128023);
		}
		if ((c[188] && c[1])) {
			add(1119551419);
		}
		if ((c[412] && c[413] && c[414] && c[12])) {
			add(-241446333);
		}
		if ((c[85] && c[533] && c[53])) {
			add(186791445);
		}
		if ((c[3] && c[79])) {
			add(733912270);
		}
		if ((c[3] && c[156])) {
			add(-1857461474);
		}
		if ((c[559])) {
			add(-449334834);
		}
		if ((c[9] && c[447] && c[35] && c[1] && c[36])) {
			add(561738332);
		}
		if ((c[370]) || (c[143])) {
			add(-1972885085);
		}
		if ((c[539] && c[1] && c[540] && c[62])) {
			add(277671871);
		}
		if ((c[85] && c[20] && c[12] && c[175])) {
			add(-1415020065);
		}
		if ((c[3] && c[492])) {
			add(-2137894646);
		}
		if ((c[26])) {
			add(-333398733);
		}
		if ((c[191] && c[12])) {
			add(1886111229);
		}
		if ((c[463])) {
			add(1969088798);
		}
		if ((c[0] && c[1] && c[2])) {
			add(-1015035920);
		}
		if ((c[63])) {
			add(-743420037, -338016635);
		}
		if ((!c[22] && c[23] && c[24] && c[25])) {
			add(-403480584);
		}
		if ((c[33] && c[34])) {
			add(1923921239);
		}
		if ((c[111] && c[6] && c[7] && c[8])) {
			add(877872656);
		}
		if ((c[20] && c[29] && c[274]) || (c[275] && c[29] && c[276])) {
			add(663696449);
		}
		if ((c[9] && c[298] && c[1] && c[486] && c[29]) || (c[9] && c[298] && c[1] && c[487] && c[29]) || (c[9]
				&& c[298] && c[1] && c[488] && c[29]) || (c[9] && c[298] && c[1] && c[489] && c[29])) {
			add(-212264053);
		}
		if ((c[3] && c[467])) {
			add(591957295);
		}
		if ((!c[22] && c[23] && c[25] && c[29] && c[62])) {
			add(1769055073);
		}
		if ((c[510])) {
			add(-1148963578);
		}
		if ((c[9] && c[424] && c[80] && c[82] && c[12] && c[13])) {
			add(1392021145);
		}
		if ((c[85] && c[545]) || (c[85] && c[166] && c[20]) || (c[85] && c[169] && c[139] && c[87]) || (c[85] && c[167]
				&& c[139] && c[87]) || (c[85] && c[168] && c[29]) || (c[85] && c[171] && c[172] && c[86] && c[87])
				|| (c[85] && c[546] && c[103]) || (c[85] && c[173] && !c[174] && c[139] && c[12]) || (c[85] && c[170]
						&& c[20] && c[53])) {
			add(-87159994);
		}
		if ((c[9] && c[14] && c[15] && c[16] && c[17])) {
			add(287319051);
		}
		if ((!c[496] && c[44] && c[29] && c[45] && c[46]) || (c[41] && c[42] && c[29]) || (!c[496] && c[44] && c[29]
				&& c[45]) || (c[47] && c[42] && c[29]) || (!c[497] && c[29] && c[45] && c[49])) {
			add(560816833);
		}
		if ((c[473] && c[474] && c[475] && c[434] && c[12])) {
			add(-2144447820);
		}
		if ((c[3] && c[362])) {
			add(1558473823);
		}
		if ((c[555] && c[23] && c[556] && c[484] && c[62])) {
			add(580977461);
		}
		if ((c[9] && c[35] && c[1] && c[36] && c[512]) || (c[513] && c[35])) {
			add(1299929939);
		}
		if ((c[303])) {
			add(2105055914);
		}
		if ((c[1] && c[371] && c[51])) {
			add(795276871);
		}
		if ((c[9] && c[10] && c[11] && c[12] && c[13])) {
			add(-968153975);
		}
		if ((c[495] && c[20])) {
			add(1679170524);
		}
		if ((c[33] && c[448])) {
			add(-1981745401);
		}
		if ((c[149])) {
			add(-1577732444, 1360751267);
		}
		if ((c[85] && c[270] && c[139] && c[53] && c[271])) {
			add(1525101993);
		}
		if ((c[105] && c[71])) {
			add(-1514708988);
		}
		if ((c[423])) {
			add(-1489613003);
		}
		if ((c[422] && c[29])) {
			add(-1619363821);
		}
		if ((c[372] && c[373]) || (c[372] && c[207]) || (c[372] && c[215]) || (c[372] && c[227]) || (c[372] && c[206])
				|| (c[372] && c[233]) || (c[372] && c[194]) || (c[372] && c[204]) || (c[372] && c[217]) || (c[372]
						&& c[246]) || (c[372] && c[197]) || (c[372] && c[374]) || (c[372] && c[229]) || (c[372]
								&& c[213]) || (c[372] && c[192]) || (c[372] && c[224]) || (c[372] && c[252]) || (c[372]
										&& c[212]) || (c[372] && c[218]) || (c[372] && c[219]) || (c[372] && c[223])
				|| (c[372] && c[236]) || (c[372] && c[375]) || (c[372] && c[240]) || (c[372] && c[247]) || (c[372]
						&& c[376]) || (c[372] && c[235]) || (c[372] && c[208]) || (c[372] && c[377]) || (c[372]
								&& c[195]) || (c[372] && c[237]) || (c[372] && c[241]) || (c[372] && c[234]) || (c[372]
										&& c[211]) || (c[372] && c[193]) || (c[372] && c[249]) || (c[372] && c[226])
				|| (c[372] && c[198]) || (c[372] && c[222]) || (c[372] && c[250]) || (c[372] && c[190]) || (c[372]
						&& c[244]) || (c[372] && c[228]) || (c[372] && c[191]) || (c[372] && c[220]) || (c[372]
								&& c[205]) || (c[372] && c[251]) || (c[372] && c[378]) || (c[372] && c[199]) || (c[372]
										&& c[232]) || (c[372] && c[379]) || (c[372] && c[242])) {
			add(1340676462);
		}
		if ((c[9] && c[459] && c[460] && c[276])) {
			add(268245867);
		}
		if ((c[33] && c[91])) {
			add(1451479462);
		}
		if ((c[18] && c[464] && c[1] && c[465] && c[466] && c[62])) {
			add(1467432989);
		}
		if ((c[176] && c[177] && c[12] && c[178])) {
			add(-1652273676);
		}
		if ((c[529] && c[191] && c[149])) {
			add(-196733991);
		}
		if ((c[142] && c[143])) {
			add(-17150655);
		}
		if ((c[1] && c[72] && c[29])) {
			add(1172554487);
		}
		if ((c[525] && c[438] && c[434])) {
			add(1989275913);
		}
		if ((c[152] && c[153] && c[149] && c[154]) || (c[155] && c[156] && c[149] && c[12])) {
			add(1607893854);
		}
		if ((c[259] && c[42]) || (c[260] && c[42])) {
			add(-110264246);
		}
		if ((c[35] && c[1] && c[36] && c[45] && c[359])) {
			add(-411808550);
		}
		if ((c[135] && c[516] && c[478])) {
			add(500329285);
		}
		if ((c[262] && c[263])) {
			add(-1004383993, 1887671084);
		}
		if ((c[28] && c[8])) {
			add(116569173);
		}
		if ((!c[543] && c[544] && c[8])) {
			add(-477713144);
		}
		if ((c[141] && c[87])) {
			add(-1179722952);
		}
		if ((c[98] && c[99])) {
			add(444188748);
		}
		if ((c[18] && c[1] && c[294] && c[29]) || (c[18] && c[1] && c[291] && c[29]) || (c[18] && c[1] && c[287]
				&& c[29]) || (c[18] && c[1] && c[288] && c[29])) {
			add(1400820793);
		}
		if ((c[33] && c[551])) {
			add(-870285473);
		}
		if ((c[66])) {
			add(803000739, 251730273);
		}
		if ((c[406] && c[144])) {
			add(206771840, 1928901114);
		}
		if ((c[18] && c[105] && c[368])) {
			add(1102055303);
		}
		if ((c[261] && c[62])) {
			add(1520891465);
		}
		if ((c[306] && c[191] && c[307]) || (c[306] && c[191] && c[308]) || (c[306] && c[191] && c[309]) || (c[306]
				&& c[191] && c[310]) || (c[306] && c[191] && c[311]) || (c[306] && c[191] && c[312]) || (c[306]
						&& c[191] && c[313]) || (c[306] && c[191] && c[314]) || (c[306] && c[191] && c[315]) || (c[306]
								&& c[191] && c[316]) || (c[306] && c[191] && c[317]) || (c[306] && c[191] && c[318])
				|| (c[306] && c[191] && c[319]) || (c[306] && c[191] && c[320]) || (c[306] && c[191] && c[321])
				|| (c[322] && c[191] && c[323]) || (c[306] && c[191] && c[324]) || (c[306] && c[191] && c[325])
				|| (c[306] && c[191] && c[326]) || (c[306] && c[191] && c[327]) || (c[306] && c[191] && c[328])
				|| (c[322] && c[191] && c[329]) || (c[306] && c[191] && c[330]) || (c[306] && c[191] && c[331])
				|| (c[306] && c[191] && c[332]) || (c[306] && c[191] && c[333]) || (c[306] && c[191] && c[334])
				|| (c[306] && c[191] && c[335]) || (c[306] && c[191] && c[336]) || (c[306] && c[191] && c[337])
				|| (c[306] && c[191] && c[338]) || (c[306] && c[191] && c[339]) || (c[306] && c[191] && c[340])
				|| (c[306] && c[191] && c[341]) || (c[306] && c[191] && c[342]) || (c[306] && c[191] && c[343])
				|| (c[306] && c[191] && c[344]) || (c[306] && c[191] && c[345]) || (c[306] && c[191] && c[346])
				|| (c[306] && c[191] && c[347]) || (c[306] && c[191] && c[348]) || (c[306] && c[191] && c[349])
				|| (c[306] && c[191] && c[350]) || (c[306] && c[191] && c[351]) || (c[306] && c[191] && c[352])
				|| (c[306] && c[191] && c[353]) || (c[306] && c[191] && c[354]) || (c[306] && c[191] && c[355])
				|| (c[306] && c[191] && c[356]) || (c[306] && c[191] && c[357])) {
			add(-818510848);
		}
		if ((c[507])) {
			add(-82979685);
		}
		if ((c[30] && c[31] && c[32] && c[1] && c[29])) {
			add(269194049, 289604005);
		}
		if ((c[1] && c[112])) {
			add(-1540573446);
		}
		if ((c[51] && c[490] && c[62] && c[491])) {
			add(-882752236);
		}
		if ((c[9] && c[457] && c[161] && c[458] && c[20])) {
			add(-531896105);
		}
		if ((c[482]) || (c[483] && c[255])) {
			add(1571781939);
		}
		if ((c[285] && c[286])) {
			add(-726619428);
		}
		if ((c[9] && c[298] && c[299]) || (c[9] && c[298] && c[300]) || (c[9] && c[298] && c[301]) || (c[9]
				&& c[302])) {
			add(-1593649772);
		}
		if ((c[363] && c[51]) || (c[364] && c[51])) {
			add(1657448359);
		}
		if ((c[85] && c[139] && c[53] && c[140])) {
			add(-806374587);
		}
		if ((c[3] && c[106])) {
			add(2028180492);
		}
		if ((c[1] && c[472] && c[51])) {
			add(1523648667);
		}
		if ((c[67])) {
			add(2015632170);
		}
		if ((c[18] && c[1] && c[291] && c[29]) || (c[18] && c[1] && c[287] && c[29]) || (c[18] && c[1] && c[294]
				&& c[29]) || (c[18] && c[1] && c[288] && c[29])) {
			add(611962200);
		}
		if ((c[548]) || (c[549])) {
			add(-1831488106);
		}
		if ((c[501] && c[191] && c[12])) {
			add(-2036440540);
		}
		if ((c[552] && c[445] && c[78])) {
			add(1080984067);
		}
		if ((c[258] && c[20])) {
			add(-1490552397);
		}
		if ((c[9] && c[80] && c[82] && c[12] && c[388])) {
			add(-802058246);
		}
		if ((!c[160] && c[161] && c[143] && c[162])) {
			add(-1145207334);
		}
		if ((c[3] && c[93])) {
			add(488996768);
		}
		if ((c[476] && c[25])) {
			add(884010501);
		}
		if ((c[1] && c[58] && c[29])) {
			add(160365781);
		}
		if ((c[278])) {
			add(-2093692123);
		}
		if ((c[18] && c[105] && c[398] && c[149] && !c[150]) || (c[18] && c[105] && c[399] && c[149] && !c[150])) {
			add(2111741389);
		}
		if ((c[9] && c[35] && c[1] && c[136] && c[137])) {
			add(-1990104971);
		}
		if ((c[3] && !c[146] && c[1] && c[147] && c[282] && c[51] && c[29] && !c[150]) || (!c[146] && c[1] && c[147]
				&& c[145] && c[51] && c[29] && !c[150]) || (c[3] && !c[146] && c[1] && c[147] && c[151] && c[51]
						&& c[29] && !c[150]) || (c[1] && c[281] && c[53] && c[62]) || (c[3] && !c[146] && c[1] && c[147]
								&& c[283] && c[51] && c[29] && c[62] && !c[150])) {
			add(-1625896359);
		}
		if ((c[506] && c[1])) {
			add(-772731286);
		}
		if ((c[1] && c[50] && c[51])) {
			add(634046047);
		}
		if ((c[94] && c[1] && c[29]) || (c[95] && c[1] && c[96] && c[29] && c[97])) {
			add(-532519307);
		}
		if ((c[410] && c[411] && c[53])) {
			add(1626997834);
		}
		if ((c[485])) {
			add(-235708225);
		}
		if ((c[9] && c[505] && c[12])) {
			add(-1863344434);
		}
		if ((c[18] && c[1] && c[368])) {
			add(2068928467);
		}
		if ((c[14] && c[15] && c[16] && c[76] && c[17])) {
			add(-1751969086);
		}
		if ((c[1] && c[402] && c[51])) {
			add(1222910495);
		}
		if ((c[521])) {
			add(-2099677293);
		}
		if ((c[9] && c[80] && c[451] && c[12] && c[388])) {
			add(-2106965531);
		}
		if ((c[9] && c[181] && c[182] && c[29]) || (c[9] && c[18] && c[181] && c[183] && c[29]) || (c[9] && c[181]
				&& c[184] && c[29])) {
			add(2054343680);
		}
		if ((c[138] && c[1])) {
			add(367378862);
		}
		if ((c[9] && c[135] && c[105] && c[117]) || (c[9] && c[118] && c[105] && c[185]) || (c[9] && c[115] && c[105]
				&& c[186]) || (c[9] && c[113] && c[105] && c[187])) {
			add(-2086551691);
		}
		if ((c[400] && c[1] && c[286])) {
			add(-982887137);
		}
		if ((!c[508] && c[509])) {
			add(290611206);
		}
		if ((c[9] && c[11] && c[12] && c[83])) {
			add(1226010364);
		}
		if ((c[3] && c[59] && !c[498] && c[1] && !c[492])) {
			add(-1152478160);
		}
		if ((c[85] && c[139] && c[103] && c[140])) {
			add(1390432819);
		}
		if ((c[1] && c[468] && c[62]) || (c[1] && c[469] && c[62])) {
			add(1508704957);
		}
		if ((c[296] && c[557] && c[275] && c[29])) {
			add(1250573238);
		}
		if ((c[1] && c[72] && c[144]) || (c[1] && c[145]) || (c[18] && !c[146] && c[1] && c[147] && c[148] && c[149]
				&& !c[150]) || (c[18] && !c[146] && c[1] && c[147] && c[151] && c[51] && !c[150])) {
			add(1640223116);
		}
		if ((c[1] && c[547])) {
			add(1747060308);
		}
		if ((c[1] && c[52] && c[53] && c[54])) {
			add(2035078574);
		}
		if ((c[73] && c[74] && c[75] && c[77])) {
			add(1370471759);
		}
		if ((!c[409])) {
			add(1047381589);
		}
		if ((c[33] && c[57])) {
			add(-1159738794);
		}
		if ((c[18] && !c[146] && c[1] && c[147] && c[151] && c[51] && c[29] && !c[150]) || (c[18] && !c[146] && c[1]
				&& c[147] && c[462] && c[51] && c[29] && !c[150])) {
			add(-2142951454);
		}
		if ((c[9] && c[107] && c[108])) {
			add(-1302017350);
		}
		if ((c[55])) {
			add(2036639783);
		}
		if ((c[94] && c[1]) || (c[95] && c[1] && c[96] && c[12] && c[97])) {
			add(-1250452984);
		}
		if ((c[9] && c[35] && c[1] && c[69] && c[524])) {
			add(997522223);
		}
		if ((c[163] && c[28] && c[164] && c[62])) {
			add(1297841730);
		}
		if ((c[9] && c[479])) {
			add(-157924511);
		}
		if ((c[3] && c[4])) {
			add(334151303, 1492381791);
		}
		if ((c[406] && c[144]) || (c[407] && c[53] && c[144])) {
			add(283692336);
		}
		if ((c[369] && c[78])) {
			add(151925189);
		}
		if ((c[1] && c[541])) {
			add(962494698);
		}
		if ((c[85] && c[20] && c[53] && c[550])) {
			add(1203949469);
		}
		if ((c[419])) {
			add(121681985);
		}
		if ((c[523] && !c[108] && c[29] && c[62])) {
			add(-83539219);
		}
		if ((c[85] && c[383] && c[29])) {
			add(1036329795);
		}
		if ((c[18] && c[1] && c[368] && c[51])) {
			add(1246398826);
		}
		if ((c[3] && c[481])) {
			add(407993737);
		}
		if ((c[437] && c[438])) {
			add(-73199163);
		}
	}
	// filter1 endss

	public void filter2(String alarmId) {
		if ((c[1] && c[535] && c[29] && c[54])) {
			add(-1956553585);
		}
		if ((!c[146] && c[1] && c[147] && c[145] && c[51] && c[29] && !c[150]) || (c[1] && c[281] && c[53] && c[62])
				|| (c[3] && !c[146] && c[1] && c[147] && c[151] && c[51] && !c[150]) || (c[3] && !c[146] && c[1]
						&& c[147] && c[282] && c[51] && c[29] && !c[150]) || (c[3] && !c[146] && c[1] && c[147]
								&& c[283] && c[51] && c[29] && c[62] && !c[150])) {
			add(1195363737);
		}
		if ((c[22] && c[24] && c[25] && c[62])) {
			add(1566033485);
		}
		if ((c[390] && c[1] && c[528])) {
			add(1519092224);
		}
		if ((c[272] && c[78])) {
			add(596507106);
		}
		if ((c[480])) {
			add(455686638);
		}
		if ((c[9] && c[35] && c[1] && c[36] && c[131])) {
			add(-1399284633);
		}
		if ((c[191] && c[29])) {
			add(1240241276);
		}
		if ((c[386])) {
			add(1297281901);
		}
		if ((c[3] && !c[146] && c[1] && c[147] && c[389] && c[51] && c[29] && c[144] && !c[150])) {
			add(-101725547);
		}
		if ((c[273] && c[1])) {
			add(-1546372330);
		}
		if ((c[542] && c[62])) {
			add(161053489);
		}
		if ((c[9] && c[392] && c[393] && c[162])) {
			add(194316991);
		}
		if ((c[553] && c[554] && c[475] && c[434] && c[12])) {
			add(-603744989);
		}
		if ((c[5] && c[6] && c[7] && c[8])) {
			add(1455357604);
		}
		if ((c[253] && c[62])) {
			add(-2140624919);
		}
		if ((c[28])) {
			add(1755949646);
		}
		if ((c[180] && c[6] && c[7] && c[8])) {
			add(1221019393);
		}
		if ((c[415])) {
			add(332092653, -554731885);
		}
		if ((c[9] && c[390] && c[1])) {
			add(-73161664);
		}
		if ((c[9] && c[35] && c[1] && c[404] && c[405])) {
			add(1535177410);
		}
		if ((c[51] && c[419])) {
			add(-651086103);
		}
		if ((c[9] && c[18] && c[135] && c[120] && c[29])) {
			add(1001218825);
		}
		if ((c[1] && c[71] && c[29])) {
			add(1902616866, 1456228213);
		}
		if ((c[365] && c[6] && c[366] && c[7] && c[367] && c[8])) {
			add(982471630);
		}
		if ((c[9] && c[182] && c[29]) || (c[9] && c[18] && c[183] && c[29]) || (c[9] && c[184] && c[29])) {
			add(-1941768618);
		}
		if ((c[1] && c[297] && c[51])) {
			add(1673766452);
		}
		if ((c[257])) {
			add(1512945687);
		}
		if ((c[391] && c[6] && c[370] && c[7] && c[8])) {
			add(869909986);
		}
		if ((c[519] && c[520])) {
			add(549452427);
		}
		if ((c[79])) {
			add(1338512707);
		}
		if ((c[173] && !c[477] && c[139] && c[29] && c[478])) {
			add(-602296372);
		}
		if ((c[3] && c[408])) {
			add(1061485080);
		}
		if ((c[9] && c[80] && c[82] && c[12] && c[83])) {
			add(-1635583371);
		}
		if ((c[9] && c[1] && c[69] && c[421])) {
			add(-895370233);
		}
		if ((c[530] && c[531] && c[62])) {
			add(-1361036029);
		}
		if ((c[1] && c[558] && c[62])) {
			add(-524238228);
		}
		if ((c[33] && c[514])) {
			add(1041254582);
		}
		if ((c[306] && c[326]) || (c[306] && c[333]) || (c[306] && c[331]) || (c[306] && c[429]) || (c[306] && c[354])
				|| (c[306] && c[345]) || (c[306] && c[335]) || (c[306] && c[347]) || (c[306] && c[353]) || (c[306]
						&& c[240]) || (c[306] && c[325]) || (c[306] && c[430]) || (c[306] && c[238]) || (c[306]
								&& c[235]) || (c[306] && c[219]) || (c[306] && c[314]) || (c[306] && c[210]) || (c[306]
										&& c[331]) || (c[306] && c[342]) || (c[306] && c[327]) || (c[306] && c[317])
				|| (c[306] && c[324]) || (c[306] && c[343]) || (c[306] && c[431]) || (c[306] && c[339]) || (c[306]
						&& c[222]) || (c[306] && c[319]) || (c[306] && c[338]) || (c[306] && c[225]) || (c[306]
								&& c[355]) || (c[306] && c[318]) || (c[306] && c[329]) || (c[306] && c[357]) || (c[306]
										&& c[432]) || (c[306] && c[332]) || (c[306] && c[328]) || (c[306] && c[351])
				|| (c[306] && c[311]) || (c[306] && c[348]) || (c[322] && c[433] && c[434]) || (c[306] && c[334])
				|| (c[306] && c[207]) || (c[306] && c[320]) || (c[306] && c[339]) || (c[306] && c[239]) || (c[306]
						&& c[344]) || (c[306] && c[315]) || (c[306] && c[356]) || (c[306] && c[435]) || (c[306]
								&& c[310]) || (c[306] && c[194]) || (c[306] && c[316]) || (c[322] && c[436] && c[234])
				|| (c[306] && c[192]) || (c[306] && c[330]) || (c[306] && c[312])) {
			add(1396143060);
		}
		if ((c[80] && c[81] && c[12])) {
			add(-595010347);
		}
		if ((c[109] && c[110])) {
			add(-1734842881);
		}
		if ((c[59] && c[1] && !c[60] && c[61] && c[62])) {
			add(-536665948);
		}
		if ((c[280])) {
			add(804065771);
		}
		if ((c[9] && c[113] && c[120] && c[53] && c[121]) || (c[9] && c[118] && c[20] && c[29] && c[119]) || (c[9]
				&& c[113] && c[20] && c[53] && c[117]) || (c[9] && c[115] && c[20] && c[29] && c[116]) || (c[9]
						&& c[113] && c[20] && c[12] && c[114])) {
			add(1634829206);
		}
		if ((c[522])) {
			add(-369920627, 762386760);
		}
		if ((c[361])) {
			add(1512338412);
		}
		if ((!c[493] && c[292] && c[1] && c[12] && c[293]) || (c[295] && c[1]) || (c[494] && c[290] && c[1]) || (c[285]
				&& c[286])) {
			add(-326701618);
		}
		if ((c[9] && c[35] && c[1] && c[36] && c[37])) {
			add(-420176075);
		}
		if ((c[408])) {
			add(-962980066);
		}
		if ((c[428])) {
			add(-1789956613);
		}
		if ((c[3] && c[68])) {
			add(969938738);
		}
		if ((c[9] && c[35] && c[1] && c[64] && c[65])) {
			add(309625205);
		}
		if ((c[9] && c[35] && c[1] && c[69] && c[439])) {
			add(2076637231);
		}
		if ((c[89])) {
			add(34970054, -140670573);
		}
		if ((c[502] && c[503] && c[29] && c[504])) {
			add(-1635030145);
		}
		if ((c[30] && c[31] && c[32] && c[1])) {
			add(295854675);
		}
		if ((c[157] && c[158] && c[1] && c[159] && c[149] && c[87])) {
			add(987171182);
		}
		if ((c[33] && c[179])) {
			add(1732923437);
		}
		if ((c[9] && c[18] && c[146] && c[1])) {
			add(1626894649);
		}
		if ((c[85] && c[139] && c[12] && c[271])) {
			add(1239214033);
		}
		if ((c[189] && c[190]) || (c[189] && c[191] && c[192]) || (c[189] && c[193]) || (c[189] && c[191] && c[194])
				|| (c[189] && c[195]) || (c[189] && c[196]) || (c[189] && c[197]) || (c[189] && c[198]) || (c[189]
						&& c[199]) || (c[189] && c[200]) || (c[189] && c[201]) || (c[189] && c[202]) || (c[189]
								&& c[203]) || (c[189] && c[204]) || (c[189] && c[205]) || (c[189] && c[206]) || (c[189]
										&& c[191] && c[207]) || (c[189] && c[208]) || (c[189] && c[209]) || (c[189]
												&& c[210]) || (c[189] && c[211]) || (c[189] && c[212]) || (c[189]
														&& c[213]) || (c[189] && c[214]) || (c[189] && c[215])
				|| (c[189] && c[216]) || (c[189] && c[217]) || (c[189] && c[218]) || (c[189]) || (c[189] && c[191]
						&& c[219]) || (c[189] && c[220]) || (c[189] && c[221]) || (c[189] && c[191] && c[222])
				|| (c[189] && c[223]) || (c[189] && c[224]) || (c[189] && c[225]) || (c[189] && c[226]) || (c[189]
						&& c[227]) || (c[189] && c[228]) || (c[189] && c[229]) || (c[189] && c[230]) || (c[189]
								&& c[231]) || (c[189] && c[232]) || (c[189] && c[233]) || (c[189] && c[191] && c[234])
				|| (c[189] && c[235]) || (c[189] && c[218]) || (c[189] && c[236]) || (c[189] && c[237]) || (c[189]
						&& c[191] && c[238]) || (c[189] && c[239]) || (c[189] && c[191] && c[240]) || (c[189] && c[241])
				|| (c[189] && c[242]) || (c[189] && c[243]) || (c[189] && c[244]) || (c[189] && c[245]) || (c[189]
						&& c[246]) || (c[189] && c[247]) || (c[189] && c[248]) || (c[189] && c[249]) || (c[189]
								&& c[250]) || (c[189] && c[251]) || (c[189] && c[252]) || (c[189] && c[191]
										&& c[234])) {
			add(2083777675);
		}
		if ((!c[22] && c[28] && c[537])) {
			add(487680497);
		}
		if ((c[9] && c[35] && c[1] && c[69] && c[70])) {
			add(-1918294808);
		}
		if ((c[441] && c[442] && c[443] && c[78]) || (c[444] && c[445] && c[78])) {
			add(219959639);
		}
		if ((c[262])) {
			add(458422081);
		}
		if ((c[1] && c[560] && c[561])) {
			add(-2120508435);
		}
		if ((c[3] && c[59] && c[1])) {
			add(169235937);
		}
		if ((c[9] && c[380] && c[381] && c[382] && c[12])) {
			add(-922175254);
		}
		if ((c[403])) {
			add(362241860);
		}
		if ((c[440])) {
			add(1529455365);
		}
		if ((c[100] && c[101] && c[102])) {
			add(-1237990499);
		}
		if ((c[394] && c[62])) {
			add(1748067124);
		}
		if ((c[45])) {
			add(-1681352903, 179040761);
		}
		if ((c[9] && c[113] && c[20] && c[29] && c[114]) || (c[9] && c[115] && c[20] && c[29] && c[116]) || (c[9]
				&& c[113] && c[20] && c[29] && c[117]) || (c[9] && c[118] && c[20] && c[29] && c[119]) || (c[9]
						&& c[113] && c[120] && c[29] && c[121])) {
			add(456937952);
		}
		if ((c[296])) {
			add(1679727992);
		}
		if ((c[500] && c[44])) {
			add(232211187, -935898069);
		}
		if ((c[85])) {
			add(1626981465);
		}
		if ((c[39]) || (c[40])) {
			add(-92207910);
		}
		if ((c[515] && c[42] && c[475] && c[434] && c[12])) {
			add(1963840774);
		}
		if ((c[1] && c[72])) {
			add(1083582450);
		}
		if ((c[254] && c[255])) {
			add(1550940321);
		}
		if ((!c[146] && c[1] && c[147] && c[145] && c[51] && !c[150])) {
			add(1191956448);
		}
		if ((c[51] && c[8])) {
			add(1438344254);
		}
		if ((c[9] && c[425] && c[275]) || (c[9] && c[426] && c[275]) || (c[9] && c[427] && c[275])) {
			add(1427366242);
		}
		if ((c[279] && c[6] && c[7] && c[8])) {
			add(-685914977);
		}
		if ((c[1] && c[417] && c[418]) || (c[419])) {
			add(1654731464);
		}
		if ((c[29])) {
			add(-4436527);
		}
		if ((c[395])) {
			add(-133395952);
		}
		if ((!c[22] && c[484] && c[62])) {
			add(152886379);
		}
		if ((c[446])) {
			add(-1648935718);
		}
		if ((c[9] && c[35] && c[1] && c[36] && c[461])) {
			add(-1337775489);
		}
		if ((c[9] && c[35] && c[1] && c[36] && c[56])) {
			add(1555630994);
		}
		if ((c[101] && c[102])) {
			add(-721533781);
		}
		if ((c[9] && c[18] && c[19] && c[20])) {
			add(-1781246406);
		}
		if ((c[191])) {
			add(-1309054102);
		}
		if ((c[78])) {
			add(-969295063);
		}
		if ((c[360])) {
			add(-111216974);
		}
		if ((c[27] && c[28] && c[8])) {
			add(1961590813);
		}
		if ((c[420] && c[78])) {
			add(2034054179);
		}
		if ((c[85] && c[86] && c[29] && c[532])) {
			add(-496590819);
		}
		if ((c[484])) {
			add(-161425873);
		}
		if ((c[73] && c[74] && c[75] && c[76] && c[77])) {
			add(-19035571);
		}
		if ((c[384]) || (c[385])) {
			add(-1631548089);
		}
		if ((c[41] && c[42]) || (!c[43] && c[44] && c[12] && c[45] && c[46]) || (!c[43] && c[44] && c[12] && c[45])
				|| (c[47] && c[42]) || (!c[48] && c[45] && c[49])) {
			add(-124332696);
		}
		if ((c[1] && c[416] && c[12])) {
			add(1355934899);
		}
		if ((c[9] && c[470] && c[471] && c[454])) {
			add(477580878, 554313229);
		}
		if ((c[102])) {
			add(-1874573634);
		}
		if ((c[9] && c[113] && c[20] && c[29] && c[284]) || (c[285] && c[1] && c[29] && c[286]) || (c[9] && c[118]
				&& c[20] && c[29] && c[185]) || (c[18] && c[1] && c[287] && c[29]) || (c[18] && c[1] && c[288] && c[29])
				|| (c[9] && c[113] && c[20] && c[29] && c[117]) || (c[9] && c[113] && c[120] && c[29]) || (c[289]
						&& c[290] && c[1] && c[29]) || (c[9] && c[115] && c[20] && c[29] && c[116]) || (c[18] && c[1]
								&& c[291] && c[29]) || (c[292] && c[1] && c[29] && c[293]) || (c[18] && c[1] && c[294]
										&& c[29]) || (c[295] && c[1] && c[29])) {
			add(-1606775273);
		}
		if ((c[511])) {
			add(-819864268);
		}
		if ((c[449] && c[42] && c[450] && c[1])) {
			add(17206742);
		}
		if ((c[85] && c[165] && c[29]) || (c[85] && c[166] && c[20] && c[29]) || (c[85] && c[167] && c[139] && c[29])
				|| (c[85] && c[168] && c[29]) || (c[85] && c[169] && c[139] && c[29]) || (c[85] && c[170] && c[20]
						&& c[29]) || (c[85] && c[171] && c[172] && c[86] && c[29]) || (c[85] && c[173] && !c[174]
								&& c[139] && c[29])) {
			add(-972163967);
		}
		if ((c[85] && c[86] && c[87] && c[88])) {
			add(-1643674170);
		}
		if ((c[1] && c[277] && c[51])) {
			add(1430033402);
		}
		if ((c[122] && c[123] && c[1] && c[51] && c[29]) || (c[124] && c[123] && c[1] && c[51] && c[29]) || (c[125]
				&& c[123] && c[1] && c[51] && c[29]) || (c[126] && c[123] && c[1] && c[51] && c[29]) || (c[127]
						&& c[123] && c[1] && c[51] && c[29]) || (c[128] && c[1] && c[129] && c[29]) || (c[130] && c[123]
								&& c[1] && c[51] && c[29])) {
			add(-1280241662);
		}
		if ((c[24] && c[25])) {
			add(-1663109777);
		}
	}
	// filter2 ends

	public void prefilter() {
		initdatalen(562, 305, 0, 0, 0, 0);
		conditionDefine0();
		conditionDefine1();
		conditionDefine2();
		conditionDefine3();
		conditionDefine4();
		prefilter2();

	}

	private void conditionDefine0() {
		CONSTDEF[0] = convert(49, "eqp_label", 3, "HKG1NP|HKHLR1NP|HKHLR2NP|TJG1NP|TJHLR1NP|TJHLR2NP");
		CONSTDEF[1] = convert(81, "alarm_resource_status", 4, "1300");
		CONSTDEF[2] = convert(13, "alarm_title", 5, "12876,1445,1600,1676,1865");
		CONSTDEF[3] = convert(516, "business_layer", 4, "3");
		CONSTDEF[4] = convert(65, "standard_alarm_id", 8,
				"007-103-00-029254,008-103-00-800245,010-103-00-800415,010-103-00-800504,010-103-00-800513,010-103-00-800716");
		CONSTDEF[5] = convert(509, "title_text", 3, "\\\\[衍生告警\\\\]SDH复用段状态变化指示告警");
		CONSTDEF[6] = convert(81, "alarm_resource_status", 4, "1300,9900");
		CONSTDEF[7] = convert(1200008, "ems_id", 8,
				"JT-OTNM2000-2-P,JT-OTNM2000-3-P,JT-U2000-37-P,JT-U2000-39-P,JT-U2000-42-P,ZTE-OTNU31-14-P,ZTE-WDMU31-13-P");
		CONSTDEF[8] = convert(46, "alarm_source", 3, "集团直采传输");
		CONSTDEF[9] = convert(516, "business_layer", 4, "2");
		CONSTDEF[10] = convert(110701, "layer_rate", 4, "16,17,19,26,48,49,64,66,68");
		CONSTDEF[11] = convert(1200008, "ems_id", 8,
				"JT-T2000-35-P,JT-U2000-35-P,JT-U2000-37-P,JT_T2000_33_P,JT_T2000_33_P,JT_T2000_3_P");
		CONSTDEF[12] = convert(11, "org_severity", 4, "1,2");
		CONSTDEF[13] = convert(13, "alarm_title", 5, "4266,4282,4287");
		CONSTDEF[14] = convert(51, "eqp_object_class", 4, "2001");
		CONSTDEF[15] = convert(517, "board_type", 4, "318");
		CONSTDEF[16] = convert(1200008, "ems_id", 8, "Alcatel-SDH");
		CONSTDEF[17] = convert(13, "alarm_title", 5, "5668");
		CONSTDEF[18] = convert(85, "professional_type", 4, "1");
		CONSTDEF[19] = convert(65, "standard_alarm_id", 8,
				"007 -203-00-800013,007 -203-00-800028,007 -203-00-800043,007 -203-00-800058,007 -209-00-800006,007 -209-00-800021,007 -209-00-800036,007 -209-00-800051,007 -209-00-800066,007-203-00 -800009,007-203-00 -800024,007-203-00 -800039,007-203-00 -800054,007-203-00-800001,007-203-00-800002,007-203-00-800003,007-203-00-800004,007-203-00-800005,007-203-00-800006,007-203-00-800007,007-203-00-800008,007-203-00-800010,007-203-00-800011,007-203-00-800012,007-203-00-800014,007-203-00-800015,007-203-00-800016,007-203-00-800017,007-203-00-800018,007-203-00-800019,007-203-00-800020,007-203-00-800021,007-203-00-800022,007-203-00-800023,007-203-00-800025,007-203-00-800026,007-203-00-800027,007-203-00-800029,007-203-00-800030,007-203-00-800031,007-203-00-800032,007-203-00-800033,007-203-00-800034,007-203-00-800035,007-203-00-800036,007-203-00-800037,007-203-00-800038,007-203-00-800040,007-203-00-800041,007-203-00-800042,007-203-00-800044,007-203-00-800045,007-203-00-800046,007-203-00-800047,007-203-00-800048,007-203-00-800049,007-203-00-800050,007-203-00-800051,007-203-00-800052,007-203-00-800053,007-203-00-800055,007-203-00-800056,007-203-00-800057,007-203-00-800059,007-203-00-800060,007-203-00-800061,007-203-00-800062,007-203-00-800063,007-203-00-800064,007-203-00-800065,007-203-00-800066,007-203-00-800067,007-203-00-800068,007-209-00 - 800032,007-209-00 -800002,007-209-00 -800017,007-209-00 -800047,007-209-00 -800062,007-209-00-800001,007-209-00-800003,007-209-00-800004,007-209-00-800005,007-209-00-800007,007-209-00-800008,007-209-00-800009,007-209-00-800010,007-209-00-800011,007-209-00-800012,007-209-00-800013,007-209-00-800014,007-209-00-800015,007-209-00-800016,007-209-00-800018,007-209-00-800019,007-209-00-800020,007-209-00-800022,007-209-00-800023,007-209-00-800024,007-209-00-800025,007-209-00-800026,007-209-00-800027,007-209-00-800028,007-209-00-800029,007-209-00-800030,007-209-00-800031,007-209-00-800033,007-209-00-800034,007-209-00-800035,007-209-00-800037,007-209-00-800038,007-209-00-800039,007-209-00-800040,007-209-00-800041,007-209-00-800042,007-209-00-800043,007-209-00-800044,007-209-00-800045,007-209-00-800046,007-209-00-800048,007-209-00-800049,007-209-00-800050,007-209-00-800052,007-209-00-800053,007-209-00-800054,007-209-00-800055,007-209-00-800056,007-209-00-800057,007-209-00-800058,007-209-00-800059,007-209-00-800060,007-209-00-800061,007-209-00-800063,007-209-00-800064,007-209-00-800065,007-209-00-800067,007-209-00-800068");
		CONSTDEF[20] = convert(10, "vendor_id", 4, "8");
		CONSTDEF[21] = convert(11, "org_severity", 4, "4");
		CONSTDEF[22] = convert(509, "title_text", 3, "衍生告警");
		CONSTDEF[23] = convert(510, "interrupt_circuit_state", 4, "1");
		CONSTDEF[24] = convert(6, "redefine_severity", 4, "1");
		CONSTDEF[25] = convert(1200009, "group_id", 4, "-991297406");
		CONSTDEF[26] = convert(1200009, "group_id", 4, "346383676");
		CONSTDEF[27] = convert(509, "title_text", 3, "AU_AIS|R_LOF|R_LOS");
		CONSTDEF[28] = convert(101104, "gcss_service_level", 4, "0,1,2,3,4");
		CONSTDEF[29] = convert(11, "org_severity", 4, "1");
		CONSTDEF[30] = convert(85, "professional_type", 4, "4");
		CONSTDEF[31] = convert(51, "eqp_object_class", 4,
				"30004,30007,30013,30014,30020,30023,30024,30026,30033,30201,30205");
		CONSTDEF[32] = convert(509, "title_text", 3,
				"CSC不可用告警|UPS输出屏中断告警|三级火警告警|分路XX中断告警|四级火警告警|温度过高告警|火情告警|烟雾告警|熔丝告警|电池熔丝故障告警|电池组放电终止告警|第XX路直流输出分路断开告警|负载熔丝故障告警|输出中断告警");
		CONSTDEF[33] = convert(65, "standard_alarm_id", 8, "001-001-00-000001");
		CONSTDEF[34] = convert(46, "alarm_source", 3, "大比武|比武-家宽a");
		CONSTDEF[35] = convert(1200006, "network_type", 4, "3002");
		CONSTDEF[36] = convert(10, "vendor_id", 4, "0,17,300,8");
		CONSTDEF[37] = convert(13, "alarm_title", 5,
				"15134027,15134039,15134042,15134054,15134058,15134088,15152807,2739,3678,3698,3699");
		CONSTDEF[38] = convert(46, "alarm_source", 3, "大比武|比武-传输网a|比武-家宽a|比武-数据网a|比武-突发事件a|比武-集客a");
		CONSTDEF[39] = convert(1008, "eqp_int_id", 5, "-110583685");
		CONSTDEF[40] = convert(1200008, "ems_id", 8, "JT-OTNM2000-3-P,ZTE-WDMU31-13-P");
		CONSTDEF[41] = convert(509, "title_text", 3, "BGP对等体邻居关系");
		CONSTDEF[42] = convert(101105, "business_system", 8, "CMNET性能");
		CONSTDEF[43] = convert(509, "title_text", 3,
				"BIP8误码超过门限告警|Crc错误在设定时间内高于设定告警个数告警|DownNetwork interface告警超时|LDP虚拟隧道Down|LSP(行同步脉冲)DOWN|Sdh错误在设定时间内高于设定告警个数告警|Symbol错误在设定时间内高于设定告警个数告警|[衍生告警]Down Network interface告警超时|bgpBackwardTransition|hwEntityRemove|hwIfMonitorSymbolErrorRising|hwMplsExtTunnelDown|hwMplsTunnelPrimaryDown|isisAuthenticationTypeFailure|isisLSPErrorDetected|jnxLdpSesDown|mplsLspInfoChange|mplsLspInfoDown|mplsTunnelDown|信令路径断|可变动单元模块被移出|可更换单元下线告警|可更换单元断电|可替换单元出现故障|底板的降温风扇发生故障|底板组件发生冗余切换告警|热启动:代理进程对自己重新初始化|物理实体发生复位|补丁包安装失败告警|远端故障告警");
		CONSTDEF[44] = convert(101105, "business_system", 8, "CMNET性能,北京顶级DNS,广东顶级DNS");
		CONSTDEF[45] = convert(46, "alarm_source", 3, "集团直采数据");
		CONSTDEF[46] = convert(12, "org_type", 4, "1,201,5,6,8,804");
		CONSTDEF[47] = convert(509, "title_text", 3, "多条link");
		CONSTDEF[48] = convert(509, "title_text", 3,
				"BIP8误码超过门限告警|Crc错误在设定时间内高于设定告警个数告警|DownNetwork interface告警超时|LDP虚拟隧道Down|LSP(行同步脉冲)DOWN|Sdh错误在设定时间内高于设定告警个数告警|Symbol错误在设定时间内高于设定告警个数告警|[衍生告警]Down Network interface告警超时|bgpBackwardTransition|hwEntityRemove|hwIfMonitorSymbolErrorRising|hwMplsExtTunnelDown|hwMplsTunnelPrimaryDown|jnxLdpSesDown|mplsLspInfoChange|mplsLspInfoDown|mplsTunnelDown|信令路径断|可变动单元模块被移出|可更换单元下线告警|可更换单元断电|可替换单元出现故障|底板的降温风扇发生故障|底板组件发生冗余切换告警|热启动:代理进程对自己重新初始化|物理实体发生复位|远端故障告警");
		CONSTDEF[49] = convert(12, "org_type", 4, "812");
		CONSTDEF[50] = convert(65, "standard_alarm_id", 8,
				"004-108-00-800011,004-108-00-800024,004-108-00-800027,004-108-00-800031,004-108-00-800041,004-108-00-800042,004-108-00-800057,004-108-00-800103,004-108-00-800106,004-108-00-800126,004-108-00-800127,004-108-00-800128,004-108-00-800133,004-108-00-800137,004-108-00-800141,004-108-00-800161,004-108-00-800184,004-108-00-800186,004-108-00-800187,004-108-00-800188,004-108-00-800189,004-108-00-800191");
		CONSTDEF[51] = convert(22, "province_id", 4,
				"1,10,11,12,13,14,15,16,17,18,19,2,20,21,22,23,24,25,26,27,28,29,3,30,34,4,5,6,7,8,9");
		CONSTDEF[52] = convert(65, "standard_alarm_id", 8,
				"008,008-247-00-800014,008-247-00-800018,008-247-00-800025,008-247-00-800029,008-247-00-800032,008-247-00-800036,008-247-00-800039,008-247-00-800041,008-247-00-800045,008-247-00-800054,008-247-00-800055,008-247-00-800057,008-247-00-800059,008-247-00-800061,008-247-00-800063,008-247-00-800064,008-247-00-800082,008-247-00-800083,008-247-00-800090,008-247-00-800093,008-247-00-800097,008-247-00-800100,008-247-00-800101,008-247-00-800104,008-247-00-800106,008-247-00-800107,008-247-00-800108,008-247-00-800109,008-247-00-800110,008-247-00-800117,008-247-00-800119,008-247-00-800130,008-247-00-800132,008-247-00-800133,008-247-00-800134,008-247-00-800143,008-247-00-800161,008-247-00-800163,008-247-00-800164,008-247-00-800165,008-247-00-800166,008-247-00-800168,008-248-00-800001,008-248-00-800006,008-248-00-800011,008-248-00-800012,008-248-00-800013,008-248-00-800014,008-248-00-800015,008-248-00-800016,008-248-00-800017,008-248-00-800018,008-248-00-800022,008-248-00-800023,008-248-00-800026,008-248-00-800035,008-248-00-800040,008-248-00-800042,008-248-00-800046,008-248-00-800063,008-248-00-800066,008-248-00-800067,008-248-00-800074,008-248-00-800075,008-248-00-800076,008-248-00-800079,008-248-00-800080,008-248-00-800083,008-248-00-800086,008-248-00-800087,008-248-00-800090,008-248-00-800093,008-248-00-800095,008-248-00-800096,008-248-00-800103,008-249-00-800004,008-249-00-800005,008-249-00-800006,008-249-00-800007,008-249-00-800008,008-249-00-800013,008-249-00-800017,008-249-00-800018,008-249-00-800019,008-249-00-800021,008-249-00-800026,008-249-00-800028,008-249-00-800031,008-249-00-800039,008-249-00-800042,008-249-00-800043,008-249-00-800045,008-249-00-800055,008-249-00-800056,008-249-00-800058,008-249-00-800062,008-249-00-800065,008-249-00-800066,008-249-00-800067,008-249-00-800068,008-249-00-800073,008-249-00-800074,008-249-00-800075,008-249-00-800080,008-249-00-800083,008-249-00-800091,008-249-00-800093,008-249-00-800094,008-249-00-800095,008-249-00-800096,008-249-00-800097,008-249-00-800098,008-249-00-800103,008-249-00-800104,008-249-00-800106,008-249-00-800127,008-249-00-800128,008-249-00-800131,008-249-00-800132,008-249-00-800133,008-249-00-800134,008-249-00-800137,008-249-00-800138,008-249-00-800140,008-249-00-800141,008-249-00-800142,008-249-00-800143,008-249-00-800144,008-249-00-800145,008-249-00-800146,008-249-00-800147,008-249-00-800148,008-249-00-800152,008-249-00-800153,008-249-00-800159,008-249-00-800162,008-249-00-800166,008-249-00-800167,008-249-00-800168,008-249-00-800169,008-249-00-800170,008-249-00-800171,008-249-00-800172,008-249-00-800173,008-249-00-800174,008-249-00-800175,008-249-00-800176,008-249-00-800177,008-249-00-800178,008-249-00-800179,008-249-00-800180,008-249-00-800181,008-249-00-800182,008-249-00-800183,008-249-00-800184,008-249-00-800185,008-249-00-800186,008-249-00-800187,008-249-00-800188,008-249-00-800189,008-249-00-800190,008-249-00-800191,008-249-00-800192,008-249-00-800193,008-249-00-800194,008-249-00-800195,008-249-00-800196,008-249-00-800197,008-249-00-800198,008-249-00-800200,008-249-00-800202,008-249-00-800203,008-249-00-800204,008-249-00-800205,008-249-00-800206,008-249-00-800208,008-249-00-800216,008-249-00-800217,008-249-00-800218,008-249-00-800220,008-249-00-800221,008-249-00-800223,008-249-00-800224,008-249-00-800225,008-249-00-800242,008-249-00-800244,008-249-00-800246,008-249-00-800248,008-249-00-800254,008-249-00-800255,008-249-00-800256,008-249-00-800257,008-249-00-800258,008-249-00-800259,008-249-00-800271,008-249-00-800272,008-249-00-800273,008-249-00-800276,008-249-00-800280,008-249-00-800283,008-249-00-800284,008-249-00-800286,008-249-00-800288,008-249-00-800291,008-249-00-800292,008-249-00-800293,008-249-00-800294,008-249-00-800295,008-249-00-800297,008-249-00-800298,008-249-00-800299,008-249-00-800304,008-249-00-800305,008-249-00-800306,008-249-00-800309,008-249-00-800314,008-249-00-800316,008-249-00-800317,008-249-00-800318,008-249-00-800319,008-249-00-800321,008-249-00-800322");
		CONSTDEF[53] = convert(11, "org_severity", 4, "2");
		CONSTDEF[54] = convert(46, "alarm_source", 3, "集团直采数据|集团直采话务");
		CONSTDEF[55] = convert(89, "circuit_no", 3, "北京-上海30N0536KA/NP");
		CONSTDEF[56] = convert(13, "alarm_title", 5,
				"15156842,15156849,15156857,15156889,15156893,15156897,15156900,15156903,2577,2578,5053227,5056114");
		CONSTDEF[57] = convert(46, "alarm_source", 3, "大比武|比武-突发事件a");
		CONSTDEF[58] = convert(65, "standard_alarm_id", 8,
				"008-238-00-000169,008-238-00-000171,101-105-00-800012,101-105-00-800013,101-105-00-800023,101-105-00-800034,101-105-00-800035,101-105-00-800036,101-105-00-800043,101-105-00-800051,101-105-00-800052,101-105-00-800053,101-105-00-800054,101-105-00-800234,101-105-00-800256,101-106-00-800007,101-106-00-800008,101-106-00-800012,101-106-00-800014,101-106-00-800110,101-106-00-800111,101-106-00-800125,101-106-00-800166,101-106-00-800193,101-106-00-800198,101-106-00-800213,101-106-00-800214,101-106-00-800240,101-106-00-800241,101-106-00-800348,101-106-00-800410,101-106-00-800432,101-106-00-800536,101-106-00-800597,101-106-00-800633,101-106-00-800648,101-106-00-800683,101-106-00-800684,101-106-00-800747,101-107-00-800046,101-107-00-800069,101-107-00-800081,101-107-00-800085,101-107-00-800097,101-238-00-010009,101-238-00-019860,101-238-00-019861,101-238-00-019902,101-238-00-022053,101-238-00-022224,101-238-00-022960,101-238-00-022961,101-238-00-031225,101-238-00-031234,101-238-00-031235,101-238-00-032113,101-238-00-032115,101-238-00-032308,101-238-00-070001,101-238-00-074000,107-105-00-001005,107-105-00-010190,107-105-00-010199,107-105-00-012604,107-106-00-000500,107-106-00-000502,107-106-00-000503,107-106-00-000504,107-106-00-000634,107-106-00-000665,107-106-00-000712,107-106-00-000724,107-106-00-000725,107-106-00-000802,107-106-00-000819,107-106-00-000825,107-106-00-002504,107-106-00-002705,107-106-00-004004,107-107-00-002413,107-107-00-003161,107-107-00-003163,107-107-00-003166,107-107-00-003313,107-107-00-003315,107-107-00-003319,107-107-00-003321,107-107-00-003327,107-107-00-003329,107-107-00-003331,107-107-00-005217,107-107-00-005218,107-107-00-007403,107-110-00-000101,107-110-00-000114,107-110-00-000131,107-110-00-000133,107-110-00-000135,107-110-00-000137,107-238-00-007403,107-238-00-008301,107-238-00-011000,107-238-00-011003,107-238-00-011008,107-238-00-012015,107-238-00-012022,107-238-00-012023,107-238-00-012042,107-238-00-012049,107-238-00-030102,107-238-00-031001,107-238-00-034011,107-238-00-034070,107-238-00-034079,107-238-00-034088,107-238-00-034089,107-238-00-034106,108-041-00-000001,108-041-00-000005,108-041-00-000009,108-041-00-000013,108-041-00-000017,108-041-00-000021,108-041-00-000043,108-041-00-000053,108-041-00-000055,108-041-00-000060,108-041-00-000061,108-041-00-000062,108-041-00-000063,108-041-00-000064,108-041-00-000065,108-041-00-000067,108-041-00-000083,108-041-00-000087,108-041-00-000094,108-041-00-000103,108-041-00-000105,108-041-00-000107,108-041-00-000108,108-041-00-000113,108-041-00-000114,108-041-00-000118,108-041-00-000119,108-041-00-000120,108-041-00-000121,108-105-00-000088,108-105-00-000175,108-106-00-000544,108-106-00-000546,108-106-00-000550,108-106-00-000552,108-106-00-000554,108-106-00-000555,108-106-00-000556,108-106-00-000557,108-106-00-000558,108-108-00-000020,108-108-00-000023,108-108-00-000026,108-108-00-000027,108-108-00-000030,108-108-00-000033,108-108-00-000036,108-108-00-000104,108-108-00-000114,110-105-00-001047,110-105-00-001105,110-105-00-002397,110-105-00-002662,110-105-00-002757,110-105-00-003056,110-105-00-003797,110-106-00-070011,110-106-00-070030,110-106-00-070187,110-106-00-070242,110-106-00-070276,110-106-00-070277,110-106-00-070278,110-106-00-070283,110-106-00-070285,110-106-00-070286,110-106-00-070291,110-106-00-070294,110-106-00-070297,110-106-00-070299,110-106-00-070304,110-106-00-070305,110-106-00-070310,110-106-00-070331,110-106-00-071504,110-106-00-071511,110-107-00-074311,110-107-00-074313,110-107-00-074314,110-107-00-074354,110-107-00-074378,110-107-00-074386,110-107-00-077717,110-107-00-077723,110-107-00-077725");
		CONSTDEF[59] = convert(51, "eqp_object_class", 4, "124,8101,8106,8109");
		CONSTDEF[60] = convert(64, "standard_alarm_name", 3,
				"DRA链路故障|Diameter链路故障|GTPC路径故障|GTPU路径故障|Ga口链路故障|Gb口链路故障|Gcf口链路故障|Gx口链路故障|Gy口链路故障|LDAP链路故障|LNS链路故障|M3UA链路故障|MTP3B链路故障|MTP3链路故障|RADIUS链路故障|S1口链路故障|SAAL链路故障|SCTP链路故障|SGs口链路故障|业务链路故障|物理端口故障");
		CONSTDEF[61] = convert(9, "object_class", 4, "10011");
		CONSTDEF[62] = convert(46, "alarm_source", 3, "省部接口上报");
		CONSTDEF[63] = convert(46, "alarm_source", 3, "呼池私有云");
		CONSTDEF[64] = convert(10, "vendor_id", 4, "300");
		CONSTDEF[65] = convert(13, "alarm_title", 5, "15131079,15131169");
		CONSTDEF[66] = convert(89, "circuit_no", 3, "北京-张家口100GE0001KA/NP/λ,北京-张家口100GE0002KA/NP/λ");
		CONSTDEF[67] = convert(1200007, "network_type_top", 4, "4");
		CONSTDEF[68] = convert(22, "province_id", 4, "17");
		CONSTDEF[69] = convert(10, "vendor_id", 4, "0,300,8");
		CONSTDEF[70] = convert(13, "alarm_title", 5, "15132173,15132177,15132182,5016490");
		CONSTDEF[71] = convert(65, "standard_alarm_id", 8,
				"600-008-03-005005,600-008-05-006011,600-008-05-006012,600-008-07-007002,600-008-15-076012,600-008-17-016010,600-008-23-008012,600-008-25-010012,600-008-62-017002,600-008-62-017003,600-008-62-017010,601-00-600-006011,601-005-00-005005,601-006-00-005005,601-006-00-006011,601-006-00-006012,601-006-00-006020,601-006-00-007002,601-006-00-010012,601-006-00-017002,601-006-00-017010,601-007-00-007002,601-008-00-008012,601-008-00-008041,601-008-00-008042,601-010-00-010012,601-016-00-016010,601-017-00-017002,601-017-00-017003,601-017-00-017010,601-076-00-076012,602-005-00-005005,602-005-00-017010,602-006-00-006011,602-006-00-006012,602-006-00-006020,602-006-00-016010,602-007-00-007002,602-007-00-007003,602-008-00-008001,602-008-00-008012,602-008-00-008042,602-010-00-010012,602-014-00-017010,602-016-00-016010,602-017-00-017002,602-017-00-017003,602-017-00-017010,602-075-00-017002,602-076-00-076012,602-098-00-098502,603-005-00-005005,603-006-00-006011,603-006-00-006012,603-006-00-008012,603-007-00-007002,603-008-00-008012,603-010-00-010012,603-016-00-016010,603-017-00-017002,603-017-00-017010,603-076-00-076012,604-005-00-005005,604-006-00-006011,604-006-00-006012,604-007-00-007002,604-008-00-008012,604-010-00-010012,604-017-00-017002,604-017-00-017010,609-005-00-005005,609-006-00-006011,609-006-00-006012,609-007-00-007002,609-008-00-008012,609-010-00-010012,609-016-00-016010,609-017-00-017002,609-017-00-017003,609-017-00-017010,609-076-00-076012,610-006-00-006012,610-008-00-008012,610-016-00-016010,610-017-00-017002,611-005-00-005005,611-006-00-006011,611-006-00-006012,611-007-00-007002,611-008-00-008012,611-010-00-010011,611-010-00-010012,611-017-00-017002,611-017-00-017010,611-076-00-076012,612-007-00-007002,615-005-00-005005,615-006-00-006011,615-007-00-007002,615-008-00-008012,615-008-00-008042,615-010-00-010012,615-016-00-016010,615-017-00-017002,615-017-00-017003,615-017-00-017010,615-076-00-076012,619-005-00-005005,619-006-00-006011,619-006-00-006012,619-007-00-007002,619-008-00-008012,619-010-00-010012,619-017-00-017002,619-017-00-017003,619-017-00-017010,619-076-00-076012,620-005-00-005005,620-006-00-006011,620-006-00-006012,620-007-00-007002,620-008-00-008012,620-010-00-010012,620-016-00-016010,620-017-00-017002,620-017-00-017003,620-017-00-017010,620-076-00-076012,621-005-00-005005,621-006-00-006011,621-006-00-006012,621-007-00-007002,621-008-00-008012,621-010-00-010012,621-017-00-017002,621-017-00-017010,621-076-00-076012,622-006-00-006011,622-006-00-006012,622-008-00-008012,622-017-00-017002,622-017-00-017003,622-017-00-076012,622-076-00-076012,623-006-00-006012,623-008-00-008012,623-017-00-017003,699-076-00-076012");
		CONSTDEF[72] = convert(65, "standard_alarm_id", 8, "800-121-01-000001");
		CONSTDEF[73] = convert(51, "eqp_object_class", 4, "2008");
		CONSTDEF[74] = convert(517, "board_type", 4, "319,320,321,322,323,324");
		CONSTDEF[75] = convert(1200008, "ems_id", 8, "Alcatel-WDM");
		CONSTDEF[76] = convert(10, "vendor_id", 4, "0");
		CONSTDEF[77] = convert(13, "alarm_title", 5, "145936");
		CONSTDEF[78] = convert(46, "alarm_source", 3, "苏研性能");
		CONSTDEF[79] = convert(22, "province_id", 4, "2");
		CONSTDEF[80] = convert(510, "interrupt_circuit_state", 4, "0,4");
		CONSTDEF[81] = convert(512, "alarm_unit", 3, "有限公司长长中继三期.*有限公司长长中继一期|有限公司长长中继五期|有限公司长长中继四期");
		CONSTDEF[82] = convert(1200008, "ems_id", 8, "JT-T2000-35-P,JT_T2000_33_P,JT_T2000_3_P");
		CONSTDEF[83] = convert(13, "alarm_title", 5, "1674,2537,4266,4282,4287,4387,4415,4505,4707");
		CONSTDEF[84] = convert(22, "province_id", 4, "11");
		CONSTDEF[85] = convert(516, "business_layer", 4, "1");
		CONSTDEF[86] = convert(10, "vendor_id", 4, "1");
		CONSTDEF[87] = convert(11, "org_severity", 4, "1,2,3");
		CONSTDEF[88] = convert(13, "alarm_title", 5, "1775");
		CONSTDEF[89] = convert(46, "alarm_source", 3, "中移杭研");
		CONSTDEF[90] = convert(1008, "eqp_int_id", 5, "1880693875");
		CONSTDEF[91] = convert(46, "alarm_source", 3, "大比武|比武-传输网a");
		CONSTDEF[92] = convert(1200009, "group_id", 4, "-957115800");
		CONSTDEF[93] = convert(22, "province_id", 4, "19");
		CONSTDEF[94] = convert(509, "title_text", 3, "eSRVCC切换成功率低于一级门限");
		CONSTDEF[95] = convert(51, "eqp_object_class", 4, "130,200,6102,6109,6112,8101,8102,8103,8105,8107,8109");
		CONSTDEF[96] = convert(9, "object_class", 4, "130,200,6102,6109,6112,8101,8103,8105,8107,8109");
		CONSTDEF[97] = convert(62, "logic_sub_alarm_type", 4, "1196,27");
		CONSTDEF[98] = convert(1200007, "network_type_top", 4, "3,4,6");
		CONSTDEF[99] = convert(89, "circuit_no", 3, "%ZBZG%");
		CONSTDEF[100] = convert(101106, "ne_ip", 8, "ip_addr");
		CONSTDEF[101] = convert(509, "title_text", 3,
				"BMS进程故障|CDNC进程故障|License即将过期|License已经过期|License无效|LogServer进程故障|NMS进程故障|TIS进程故障|同步设备信息失败|基于地理位置的DNS调度异常|连接数据库失败");
		CONSTDEF[102] = convert(46, "alarm_source", 3, "华为CDN");
		CONSTDEF[103] = convert(11, "org_severity", 4, "3");
		CONSTDEF[104] = convert(13, "alarm_title", 5, "42154,42170,42171,42172,42173,42174,42175,42176,42177,42219");
		CONSTDEF[105] = convert(81, "alarm_resource_status", 4, "3");
		CONSTDEF[106] = convert(22, "province_id", 4, "10");
		CONSTDEF[107] = convert(85, "professional_type", 4, "3");
		CONSTDEF[108] = convert(22, "province_id", 4, "25");
		CONSTDEF[109] = convert(101104, "gcss_service_level", 4, "0,1");
		CONSTDEF[110] = convert(1200009, "group_id", 4, "-923249803");
		CONSTDEF[111] = convert(509, "title_text", 3,
				"\\\\[衍生告警\\\\]一干中兴波分主光路单向中断|\\\\[衍生告警\\\\]一干中兴波分主光路双向中断|\\\\[衍生告警\\\\]一干华为波分主光路单向中断|\\\\[衍生告警\\\\]一干华为波分主光路双向中断|\\\\[衍生告警\\\\]一干烽火OTN主光路单向中断|\\\\[衍生告警\\\\]一干烽火OTN主光路双向中断|\\\\[衍生告警\\\\]一干烽火波分主光路单向中断|\\\\[衍生告警\\\\]一干烽火波分主光路双向中断");
		CONSTDEF[112] = convert(65, "standard_alarm_id", 8, "007-008-00-800328");
		CONSTDEF[113] = convert(51, "eqp_object_class", 4, "130");
		CONSTDEF[114] = convert(13, "alarm_title", 5, "1308,1441,1624,5000052,5000053");
		CONSTDEF[115] = convert(51, "eqp_object_class", 4, "100");
		CONSTDEF[116] = convert(13, "alarm_title", 5, "1234,1512");
		CONSTDEF[117] = convert(13, "alarm_title", 5, "1331");
		CONSTDEF[118] = convert(51, "eqp_object_class", 4, "131");
		CONSTDEF[119] = convert(13, "alarm_title", 5, "1308,1441,1623,5000051");
		CONSTDEF[120] = convert(10, "vendor_id", 4, "12,8");
		CONSTDEF[121] = convert(13, "alarm_title", 5, "5000018");
		CONSTDEF[122] = convert(509, "title_text", 3, "[\\s\\S]*部省接口[\\s\\S]*[\\s\\S]*通讯断[\\s\\S]*");
		CONSTDEF[123] = convert(101105, "business_system", 8, "MMS,WAP,wap,彩信,软交换");
		CONSTDEF[124] = convert(509, "title_text", 3, "[\\s\\S]*部省接口[\\s\\S]*[\\s\\S]*不可达[\\s\\S]*");
		CONSTDEF[125] = convert(509, "title_text", 3, "[\\s\\S]*部省接口[\\s\\S]*[\\s\\S]*ping[\\s\\S]*");
		CONSTDEF[126] = convert(509, "title_text", 3, "[\\s\\S]*部省接口[\\s\\S]*[\\s\\S]*通讯异常[\\s\\S]*");
		CONSTDEF[127] = convert(509, "title_text", 3, "[\\s\\S]*部省接口[\\s\\S]*[\\s\\S]*Ping[\\s\\S]*");
		CONSTDEF[128] = convert(101105, "business_system", 8, "拨测");
		CONSTDEF[129] = convert(22, "province_id", 4, "13,19");
		CONSTDEF[130] = convert(509, "title_text", 3, "[\\s\\S]*部省接口[\\s\\S]*[\\s\\S]*PING[\\s\\S]*");
		CONSTDEF[131] = convert(13, "alarm_title", 5,
				"125140,145398,15131679,15131682,15131687,15131690,15131694,15131696,15131700,15131704,15131705,15131709,15131728,15131734,15131736,15131740,15131744,15131768,15131770,15131774,15131777,15131784,15131800,15131813,4958,5000171,5000770,5004629,5026540,5266");
		CONSTDEF[132] = convert(13, "alarm_title", 5,
				"42160,42170,42171,42172,42173,42174,42175,42176,42177,42179,42214");
		CONSTDEF[133] = convert(51, "eqp_object_class", 4, "2001,2009");
		CONSTDEF[134] = convert(101103, "gcss_client_level", 4, "0,1,2,3,4");
		CONSTDEF[135] = convert(51, "eqp_object_class", 4, "108");
		CONSTDEF[136] = convert(10, "vendor_id", 4, "0,8");
		CONSTDEF[137] = convert(13, "alarm_title", 5, "15155503,15155582,15155584,15155590,15155592,15155598");
		CONSTDEF[138] = convert(509, "title_text", 3, "高铁线切换成功率低于一级门限|高铁线无线掉线率高于一级门限|高铁线无线接通率低于一级门限");
		CONSTDEF[139] = convert(10, "vendor_id", 4, "12");
		CONSTDEF[140] = convert(13, "alarm_title", 5,
				"1361,1620,1635,42253,42254,42255,42256,42257,42258,42259,42260,42261,42262,42263,42264,42265,42266,42267,42268,42269,42270,42271,42272,42273,42274,42275,42276,42277,42278,42279,42280,42281,42282,42283,42284,42285,42286,42287,42288,42289,42290,42291,42292,42293,42294,42295,42296,42297,42298,42299,42300,42301,42302,42303,42304,42305,42306,42307,42308,42309,42310");
		CONSTDEF[141] = convert(1200006, "network_type", 4, "1001,1003");
		CONSTDEF[142] = convert(509, "title_text", 3, "\\\\[衍生关联\\\\]MUT_LOS");
		CONSTDEF[143] = convert(1200008, "ems_id", 8, "JT-U2000-37-P");
		CONSTDEF[144] = convert(46, "alarm_source", 3, "集团衍生");
		CONSTDEF[145] = convert(65, "standard_alarm_id", 8,
				"800-011-04-000003,800-011-04-000004,800-103-04-000003,800-103-04-000004,800-103-04-000009,800-103-04-000010");
		CONSTDEF[146] = convert(51, "eqp_object_class", 4, "134");
		CONSTDEF[147] = convert(1200007, "network_type_top", 4, "1,10,2,4,5,6");
		CONSTDEF[148] = convert(65, "standard_alarm_id", 8, "012-012-00-000004");
		CONSTDEF[149] = convert(22, "province_id", 4,
				"1,10,11,12,13,14,15,16,17,18,19,2,20,21,22,23,24,26,27,28,29,3,30,34,4,5,6,7,8,9");
		CONSTDEF[150] = convert(30, "sub_alarm_type", 4, "7");
		CONSTDEF[151] = convert(65, "standard_alarm_id", 8,
				"001-001-00-800121,001-001-00-800126,001-001-00-800159,001-001-00-800162,001-001-00-800179,001-001-00-800183,001-001-00-800189,001-001-00-800193,001-001-00-800708,001-002-00-800112,001-002-00-800563,001-002-00-800758,001-003-00-800114,001-003-00-800143,001-003-00-800167,001-003-00-800171,001-003-00-800360,001-003-00-800361,001-003-00-800376,001-003-00-800593,001-003-00-800597,001-003-00-800705,001-004-00-800089,001-004-00-800116,001-004-00-800117,001-004-00-800230,001-008-00-800165,004-002-00-001000,004-003-00-010177,004-003-00-010181,004-003-00-010293,004-003-00-010295,004-003-00-015430,004-003-00-017252,004-003-00-017260,004-003-00-060009,004-004-00-021527,004-004-00-024306,004-004-00-024417,004-004-00-024501,004-004-00-024505,004-007-00-000021,004-007-00-801013,004-007-00-801014,007-001-00-000038,007-002-00-000123,007-002-00-000128,007-002-00-000139,007-002-00-000213,007-003-00-000008,007-003-00-000012,007-003-00-000013,007-003-00-000042,007-003-00-000169,007-003-00-000367,007-004-00-000173,007-004-00-000218,007-004-00-000219,007-004-00-000457,007-004-00-000464,007-004-00-000733,007-007-00-800000,007-007-00-800005,007-007-00-801871,007-007-00-801894,007-021-00-800535,007-021-00-800868,007-021-00-800869,007-021-00-801242,007-021-00-801250,007-029-00-000003,007-029-00-000004,007-029-00-000019,007-102-00-000139,007-102-00-000373,007-102-00-000378,008-002-00-800006,008-002-00-800010,008-003-00-010823,008-003-00-800006,008-003-00-800010,008-003-00-800012,008-003-00-800110,008-003-00-800116,008-003-00-800141,008-003-00-800142,008-003-00-800150,008-003-00-800151,008-003-00-800168,008-003-00-800231,008-003-00-800239,008-003-00-800346,008-003-00-800349,008-004-00-010823,008-004-00-800006,008-004-00-800010,008-004-00-800012,008-004-00-800049,008-004-00-800057,008-004-00-800110,008-004-00-800225,008-004-00-800229,008-004-00-800237,008-019-00-020063,010-001-00-002064,010-001-00-002742,010-001-00-002772,010-002-00-002064,010-002-00-002070,010-003-00-001267,010-003-00-002064,010-003-00-002070,010-003-00-002742,010-003-00-002772,010-003-00-003474,010-004-00-002064,010-004-00-002070,010-004-00-003947,800-000-04-000001");
		CONSTDEF[152] = convert(86, "standard_flag", 4, "2");
		CONSTDEF[153] = convert(54, "ne_status", 4, "1,1300,1310,1320,1400,1410,1420,1500");
		CONSTDEF[154] = convert(9, "object_class", 4, "200,9200");
		CONSTDEF[155] = convert(81, "alarm_resource_status", 4, "1,1300,1310,1320,1400,1410,1420,1500");
		CONSTDEF[156] = convert(1200007, "network_type_top", 4, "2");
		CONSTDEF[157] = convert(85, "professional_type", 4, "2");
		CONSTDEF[158] = convert(51, "eqp_object_class", 4, "121,122");
		CONSTDEF[159] = convert(65, "standard_alarm_id", 8,
				"007-005-00-000633,007-005-00-000830,101-005-00-800005,101-005-00-800006,101-005-00-800012,101-005-00-800013,101-005-00-800015,101-005-00-800109,101-006-00-000074,101-006-00-000075,101-006-00-000689,101-006-00-003535,101-006-00-800083,101-006-00-800084,101-006-00-800094,101-006-00-800120,102-005-00-032327,102-005-00-032339,107-006-00-000604,107-006-00-000813,107-006-00-001005,107-006-00-010813,107-006-00-012604,108-041-00-000062,108-041-00-000102,108-041-00-000118,108-041-00-000184,108-041-00-000234");
		CONSTDEF[160] = convert(517, "board_type", 4, "113,154,355,483");
		CONSTDEF[161] = convert(509, "title_text", 3, "MUT_LOS");
		CONSTDEF[162] = convert(13, "alarm_title", 5, "4436");
		CONSTDEF[163] = convert(509, "title_text", 3, "AIS|LOF|LOS");
		CONSTDEF[164] = convert(81, "alarm_resource_status", 4, "1,1100,1300,1310");
		CONSTDEF[165] = convert(5, "alarm_text", 3,
				"因传输故障造成的路由不可达|因传输故障造成的链路不可用|因传输故障造成的链路组不可用|因软件模块故障造成的路由不可达|因软件模块故障造成的链路不可用|因软件模块故障造成的链路组不可用|服务器CPU负荷超门限|服务器上某个软件模块停止运行|服务器内存占用量超门限|服务器无法ssh登录|服务器硬盘占用超门限");
		CONSTDEF[166] = convert(509, "title_text", 3,
				"M3UA SCTP路径故障|M3UA目的实体不可达|M3UA路由不可用|M3UA链路故障|MTP3信令路由故障|MTP3目的信令点不可达|MTP3链路故障|MTP3链路集故障|OMU与NTP服务器时间偏差超出同步阈值|OMU与SMM板管理单元通讯故障|OMU与单板通信故障|OMU与特定的NTP服务器通信故障|OMU向NTP服务器同步时间失败|OMU资源异常|SCCP子系统禁止|SCCP目的信令点不可达|STC 退出服务|TDM扣板时钟故障|与ACM进程通讯故障|业务模块过载|话单传输异常");
		CONSTDEF[167] = convert(509, "title_text", 3,
				"BIOSINVL|BREAKER|CHASSIS|DBCOMMDN|DBDSKFUL|DIAM_LINK|DIAM_LINKSET|DIAM_LINK_BUSY|DIAM_LKSET_BUSY|DIAM_ROUTESET|DIAM_SCTP|DIAM_TCP|DIAM_TRANSACBUFOV|ETH_LINK|ETH_SWITCH_A|ETH_SWITCH_B|EXLINKDN|EXLNKLST|FANSPEED|FLEXMGR|FUSE|FWNOSYNC|IBOARD|IPOWER|IPWRBRCH|LEDPANEL|MSGQUEL1|MSGQUEL2|N7_LINK|N7_LINKSET|N7_LINKSET_CON1|N7_LINKSET_CON2|N7_LINKSET_CON3|N7_LINK_SLO1|N7_LINK_SLO2|N7_ROUTESET|NTP_SERVERDOWN|NTP_SHIFT|NTP_UNUSABLE|OAMNOSYN|PMCPUOV1|PMCPUOV2|PMFILEFL|PMMEMOVR|PMSWPLOW|POWER|PWRBRCH|PWRFA|RELAY|REPQOF|ROUTE_DOWN|SCCP_ERR|SCCP_ES|SCTPDEST|SCTPL|SECLOG_DISK_NONURGENT");
		CONSTDEF[168] = convert(509, "title_text", 3,
				"Exchange and BAM CPC communication link interrupted|M3UA destination entity is inaccessible|M3UA link failu|M3UA link failure|M3UA link fault|M3UA link set failu|M3UA link set failure|M3UA route is unavailable|M3UA route unavailable|MTP DPC inaccessible|Send alarm for low usability of outgoing/incoming circuits to/from an office");
		CONSTDEF[169] = convert(509, "title_text", 3, "01404");
		CONSTDEF[170] = convert(509, "title_text", 3,
				"M3UA destination entity is inaccessible|M3UA link failu|M3UA link failure|M3UA link fault|M3UA link set failu|M3UA link set failure|M3UA route is unavailable|M3UA route unavailable|Semi-permanent connection fault|Service station process abnormal");
		CONSTDEF[171] = convert(51, "eqp_object_class", 4, "101");
		CONSTDEF[172] = convert(509, "title_text", 3,
				"ALI FAULT|ANALYSIS DATA FAULT|BACKUP IMFORMATION FAULT|BLOCKING SUPERVISION|CCITT7 DESTINATION INACCESSIBLE|CCITT7 SIGNALLING LINK FAILURE|COMMON CHARGING OUTPUT BUFFER CONGESTION|COMMON CHARGING OUTPUT ERROR|CP FAULT|CPT FAULT|DISTURBANCE SUPERVISION OF TRUNK ROUTES|EM FAULT|FAN MAGAZINE FAULT|FILE PROCESS UTILITY AUTOMATIC TRANSFER FAILURE|GROUP SWITCH FAULT|INFINITE FILE END WARNING|LINE UNIT BLOCKED|NETWORK SYNCHRONIZATION FAULT|PVC SET-UP FAILURE|RP FAULT|RP PAIR FAULT|SEMIPERMANENT CONNECTION FAULT|SIZE ALTERATION OF DATA FILES SIZE CHANGE REQUIRED|SMALL RESTART IS PENDING|SOFTWARE ERROR|SP LINK FAULT|SP NODE AUTOMATICALLY BLOCKED|SP NODE FAULT|SP UNIT FAULT|SWITCHING NETWORK TERMINAL FAULT|SYNCHRONOUS DIGITAL PATH FAULT SUPERVISION|SYSTEM RESTART|VOLUME LIMIT EXCEEDED");
		CONSTDEF[173] = convert(509, "title_text", 3, "05368_DST|05368_LK");
		CONSTDEF[174] = convert(5, "alarm_text", 3, "41141|LAOKM");
		CONSTDEF[175] = convert(13, "alarm_title", 5, "1114,1115,1307,1308,1396,1600,1803,42184,42185,42186");
		CONSTDEF[176] = convert(101105, "business_system", 8,
				"GPRS国际漫游,MBBMS业务系统,PGM业务子系统,PIM,USSD,WEB网关业务系统-北京节点,WEB网关业务系统-广东节点,WLAN Radius/Portal业务,中央DSMP业务子系统,企业飞信系统,北京DM操作域系统,北京DM管理域系统,北京ENUM2重定向业务,北京ENUM重定向业务,北京Radius业务子系统,北京SharingX系统(TD),北京WAP主页推送平台系统,北京位置服务-AGPS((TD),北京国际彩信网关,北京国际短信网关,北京彩信内容适配业务,北京彩信网关1,北京彩信网关2,北京彩信网关3,北京彩信网关4,北京彩信网关5,北京彩信网关6,北京快讯系统(TD),北京手机邮箱系统,北京视频会议系统(TD),北京视频留言系统(TD),北京顶级DNS,北京飞信互通网关系统,北京骨干二华为彩信(TD),北京骨干华为彩信(TD),北京骨干通用下载平台系统(TD),国漫综合业务平台系统,大众邮件代理网关,广东国际彩信网关,广东彩信网关1,广东彩信网关2,广东手机邮箱系统,广东顶级DNS,广州KJAVA系统(TD),广州区域中兴彩信(TD),广州国际短信网关,彩信网关业务系统,春晚网关,海南省wap网关,视频共享AAA系统,集团客户行业网关A-M模块,集团客户行业网关A-彩信模块,集团客户行业网关A-短信模块,集团客户行业网关B-M模块,集团客户行业网关B-彩信模块,集团客户行业网关B-短信模块,集团彩信互通网关系统,集团网管自身系统");
		CONSTDEF[177] = convert(81, "alarm_resource_status", 4, "1,1300");
		CONSTDEF[178] = convert(13, "alarm_title", 5, "2575,3055");
		CONSTDEF[179] = convert(46, "alarm_source", 3, "大比武|比武-集客a");
	};

	private void conditionDefine1() {
		CONSTDEF[180] = convert(509, "title_text", 3,
				"\\\\[衍生告警\\\\]一干中兴波分运行环境温度异常|\\\\[衍生告警\\\\]一干华为波分运行环境温度异常|\\\\[衍生告警\\\\]一干烽火OTN运行环境温度异常|\\\\[衍生告警\\\\]一干烽火波分运行环境温度异常|\\\\[衍生告警\\\\]同一机房多个温度告警");
		CONSTDEF[181] = convert(51, "eqp_object_class", 4, "8107");
		CONSTDEF[182] = convert(65, "standard_alarm_id", 8,
				"007-108-00-000794,007-108-00-001003,007-108-00-001005,007-108-00-001009,007-108-00-001015,007-108-00-001022,007-108-00-001023,007-108-00-001030,007-108-00-001039,007-108-00-001104,007-108-00-001105,007-108-00-002001,007-108-00-002010,007-108-00-002015,007-108-00-002037,007-108-00-002069,007-108-00-002135,007-108-00-002136,007-108-00-002375,007-108-00-002376,007-108-00-002377,007-108-00-002378,007-108-00-002402,007-108-00-002411,007-108-00-002413,007-108-00-002414,007-108-00-003001,007-108-00-003009,007-108-00-003010,007-108-00-003013,007-108-00-003015,007-108-00-003076,007-108-00-003077,007-108-00-003094,007-108-00-003095,007-108-00-003100,007-108-00-003101,007-108-00-003112,007-108-00-003113,007-108-00-003160,007-108-00-003161,007-108-00-003162,007-108-00-003163,007-108-00-003164,007-108-00-003165,007-108-00-003166,007-108-00-003167,007-108-00-003451,007-108-00-003802,007-108-00-003807,007-108-00-003808,007-108-00-003810,007-108-00-003814,007-108-00-003815,007-108-00-003821,007-108-00-004201,007-108-00-004402,007-108-00-004403,007-108-00-004404,007-108-00-004405,007-108-00-004421,007-108-00-004501,007-108-00-004502,007-108-00-004503,007-108-00-004507,007-108-00-004508,007-108-00-004509,007-108-00-004601,007-108-00-004602,007-108-00-004603,007-108-00-004605,007-108-00-004606,007-108-00-004752,007-108-00-004754,007-108-00-004756,007-108-00-004766,007-108-00-004790,007-108-00-005001,007-108-00-005002,007-108-00-005003,007-108-00-005008,007-108-00-005009,007-108-00-005010,007-108-00-005012,007-108-00-005016,007-108-00-005102,007-108-00-005205,007-108-00-005210,007-108-00-005211,007-108-00-005212,007-108-00-005213,007-108-00-005214,007-108-00-005215,007-108-00-005216,007-108-00-005217,007-108-00-005218,007-108-00-005221,007-108-00-005301,007-108-00-005402,007-108-00-005522,007-108-00-006402,007-108-00-006415,007-108-00-006416,007-108-00-006417,007-108-00-006418,007-108-00-006419,007-108-00-006420,007-108-00-006421,007-108-00-006428,007-108-00-006429,007-108-00-007201,007-108-00-007403,007-108-00-007404,007-108-00-007405,007-108-00-007406,007-108-00-00753,007-108-00-008301,007-108-00-008302,007-108-00-008304,007-108-00-008305,007-108-00-008306,007-108-00-008307,007-108-00-008308,007-108-00-008309,007-108-00-008310,007-108-00-008311,007-108-00-008312,007-108-00-008502,007-108-00-008503,007-108-00-008504,007-108-00-008505,007-108-00-008510,007-108-00-008600,007-108-00-008601,007-108-00-008605,007-108-00-008610,007-108-00-008702,007-108-00-008703,007-108-00-008704,007-108-00-008705,007-108-00-008706,007-108-00-008710,007-108-00-008860,007-108-00-008861,007-108-00-009502,007-108-00-009750,007-108-00-009751,007-108-00-009752,007-108-00-009753,007-108-00-009941,007-108-00-009942,007-108-00-009943,007-108-00-009944,007-108-00-009946,007-108-00-009947,007-108-00-009948,007-108-00-009949,007-108-00-009950,007-108-00-009951,007-108-00-009952,007-108-00-009988,007-108-00-009989,007-108-00-009990,007-108-00-012001,007-108-00-012012,007-108-00-012020,007-108-00-020001,007-108-00-020005,007-108-00-020006,007-108-00-020020,007-108-00-020021,007-108-00-020064,007-108-00-020102,007-108-00-020103,007-108-00-020107,007-108-00-020108,007-108-00-020109,007-108-00-020110,007-108-00-020111,007-108-00-020112,007-108-00-020113,007-108-00-022000,007-108-00-022002,007-108-00-022003,007-108-00-022004,007-108-00-022006");
		CONSTDEF[183] = convert(65, "standard_alarm_id", 8,
				"007-109-00-000369,007-109-00-000371,007-109-00-000794,007-109-00-001003,007-109-00-001005,007-109-00-001009,007-109-00-001015,007-109-00-001016,007-109-00-001022,007-109-00-001023,007-109-00-001030,007-109-00-001039,007-109-00-001701,007-109-00-001705,007-109-00-001707,007-109-00-001709,007-109-00-001713,007-109-00-001715,007-109-00-001717,007-109-00-001728,007-109-00-001762,007-109-00-001768,007-109-00-001793,007-109-00-001809,007-109-00-001811,007-109-00-001815,007-109-00-001817,007-109-00-001831,007-109-00-002010,007-109-00-002015,007-109-00-002135,007-109-00-002402,007-109-00-002752,007-109-00-002754,007-109-00-002756,007-109-00-002758,007-109-00-002763,007-109-00-002765,007-109-00-003001,007-109-00-003009,007-109-00-003010,007-109-00-003013,007-109-00-003015,007-109-00-003017,007-109-00-003076,007-109-00-003077,007-109-00-003094,007-109-00-003095,007-109-00-003100,007-109-00-003101,007-109-00-003106,007-109-00-003107,007-109-00-003112,007-109-00-003113,007-109-00-003160,007-109-00-003161,007-109-00-003162,007-109-00-003163,007-109-00-003164,007-109-00-003165,007-109-00-003166,007-109-00-003228,007-109-00-003451,007-109-00-003802,007-109-00-003807,007-109-00-003808,007-109-00-003810,007-109-00-003814,007-109-00-003815,007-109-00-003821,007-109-00-004402,007-109-00-004403,007-109-00-004404,007-109-00-004405,007-109-00-004421,007-109-00-004501,007-109-00-004502,007-109-00-004503,007-109-00-004507,007-109-00-004508,007-109-00-004509,007-109-00-004601,007-109-00-004602,007-109-00-004603,007-109-00-004605,007-109-00-004606,007-109-00-004670,007-109-00-004671,007-109-00-004752,007-109-00-004754,007-109-00-004756,007-109-00-004790,007-109-00-005001,007-109-00-005002,007-109-00-005008,007-109-00-005009,007-109-00-005010,007-109-00-005016,007-109-00-005102,007-109-00-005201,007-109-00-005203,007-109-00-005205,007-109-00-005210,007-109-00-005212,007-109-00-005213,007-109-00-005214,007-109-00-005215,007-109-00-005216,007-109-00-005217,007-109-00-005218,007-109-00-005221,007-109-00-005230,007-109-00-005301,007-109-00-005401,007-109-00-005521,007-109-00-006418,007-109-00-006428,007-109-00-008301,007-109-00-008302,007-109-00-008304,007-109-00-008305,007-109-00-008306,007-109-00-008307,007-109-00-008308,007-109-00-008502,007-109-00-008503,007-109-00-008504,007-109-00-008505,007-109-00-008510,007-109-00-008600,007-109-00-008601,007-109-00-008605,007-109-00-008610,007-109-00-008702,007-109-00-008703,007-109-00-008704,007-109-00-008705,007-109-00-008706,007-109-00-009752,007-109-00-009941,007-109-00-009942,007-109-00-009943,007-109-00-009944,007-109-00-009946,007-109-00-009989,007-109-00-009990,007-109-00-010001,007-109-00-010003,007-109-00-011000,007-109-00-011001,007-109-00-011002,007-109-00-011003,007-109-00-011004,007-109-00-011007,007-109-00-011008,007-109-00-012001,007-109-00-012007,007-109-00-012008,007-109-00-012011,007-109-00-012012,007-109-00-012014,007-109-00-012015,007-109-00-012020,007-109-00-012021,007-109-00-013020,007-109-00-013021,007-109-00-014002,007-109-00-014003,007-109-00-014004,007-109-00-014007,007-109-00-014022,007-109-00-022000,007-109-00-022001,007-109-00-022002,007-109-00-022003,007-109-00-022004");
		CONSTDEF[184] = convert(65, "standard_alarm_id", 8,
				"004-108-00-000001,004-108-00-000002,004-108-00-000004,004-108-00-000005,004-108-00-000006,004-108-00-000008,004-108-00-000010,004-108-00-000011,004-108-00-000012,004-108-00-000013,004-108-00-000014,004-108-00-000015,004-108-00-000018,004-108-00-000019,004-108-00-000020,004-108-00-000021,004-108-00-000023,004-108-00-000024,004-108-00-000025,004-108-00-000027,004-108-00-000028,004-108-00-000031,004-108-00-000032,004-108-00-000033,004-108-00-000034,004-108-00-000035,004-108-00-000036,004-108-00-000037,004-108-00-000038,004-108-00-000039,004-108-00-000040,004-108-00-000041,004-108-00-000042,004-108-00-000043,004-108-00-000044,004-108-00-000045,004-108-00-000046,004-108-00-000047,004-108-00-000050,004-108-00-000057,004-108-00-000102,004-108-00-000103,004-108-00-000104,004-108-00-000105,004-108-00-000106,004-108-00-000125,004-108-00-000126,004-108-00-000127,004-108-00-000128,004-108-00-000131,004-108-00-000132,004-108-00-000133,004-108-00-000134,004-108-00-000135,004-108-00-000136,004-108-00-000137,004-108-00-000138,004-108-00-000139,004-108-00-000140,004-108-00-000141");
		CONSTDEF[185] = convert(13, "alarm_title", 5, "1308,1441,1623");
		CONSTDEF[186] = convert(13, "alarm_title", 5, "1512");
		CONSTDEF[187] = convert(13, "alarm_title", 5, "1441,1624");
		CONSTDEF[188] = convert(509, "title_text", 3,
				"DRA业务消息转发成功率低于二级门限|DRA系统平均负荷高于二级门限|HSS平均负荷高于二级门限|HSS更新位置成功率（剔除用户因素）低于二级门限|HSS鉴权信息查询成功率（剔除用户因素）低于二级门限|IMS专用承载建立成功率低于二级门限|IMS专用承载更新成功率低于二级门限|IMS网络PDN连接建立成功率低于二级门限|MME附着容量利用率高于二级门限|PGW承载容量峰值利用率高于二级门限|PGW数据吞吐容量利用率高于二级门限|SBC主叫会话平均建立时长高于二级门限|SGW承载容量峰值利用率高于二级门限|SGW数据吞吐容量利用率高于二级门限");
		CONSTDEF[189] = convert(509, "title_text", 3, "链路质量告警");
		CONSTDEF[190] = convert(5, "alarm_text", 3, "ChinaMobile_VIP.*KangShiFu");
		CONSTDEF[191] = convert(101105, "business_system", 8, "集团IP承载网业务子系统");
		CONSTDEF[192] = convert(5, "alarm_text", 3, "ChinaMobile.*BOCE_A");
		CONSTDEF[193] = convert(5, "alarm_text", 3, "ChinaMobile.*NGCC");
		CONSTDEF[194] = convert(5, "alarm_text", 3, "ChinaMobile.*BOSS");
		CONSTDEF[195] = convert(5, "alarm_text", 3, "ChinaMobile.*WangZhen");
		CONSTDEF[196] = convert(5, "alarm_text", 3, "ChinaMobile.*SGi");
		CONSTDEF[197] = convert(5, "alarm_text", 3, "ChinaMobile_VIP.*EduClouds_B");
		CONSTDEF[198] = convert(5, "alarm_text", 3, "ChinaMobile.*DATAMON");
		CONSTDEF[199] = convert(5, "alarm_text", 3, "ChinaMobile_VIP.*BOSCH_AA");
		CONSTDEF[200] = convert(5, "alarm_text", 3, "ChinaMobile.*UN_SG_Collection");
		CONSTDEF[201] = convert(5, "alarm_text", 3, "ChinaMobile.*GD_IN_Service&Order");
		CONSTDEF[202] = convert(5, "alarm_text", 3, "ChinaMobile.*IMS_SG");
		CONSTDEF[203] = convert(5, "alarm_text", 3, "ChinaMobile.*SD_SG_Collection");
		CONSTDEF[204] = convert(5, "alarm_text", 3, "ChinaMobile.*PCC");
		CONSTDEF[205] = convert(5, "alarm_text", 3, "ChinaMobile.*LN_Terminal");
		CONSTDEF[206] = convert(5, "alarm_text", 3, "ChinaMobile.*M2M_Terminal");
		CONSTDEF[207] = convert(5, "alarm_text", 3, "ChinaMobile.*AH_IPNET_JianCe");
		CONSTDEF[208] = convert(5, "alarm_text", 3, "ChinaMobile_VIP.*EduClouds_M");
		CONSTDEF[209] = convert(5, "alarm_text", 3, "ChinaMobile_VIP.*BOSCH_HS");
		CONSTDEF[210] = convert(5, "alarm_text", 3, "ChinaMobile.*CQ_Dashuju");
		CONSTDEF[211] = convert(5, "alarm_text", 3, "ChinaMobile.*SX_IPNET_JianCe");
		CONSTDEF[212] = convert(5, "alarm_text", 3, "ChinaMobile.*WAPMMSC_Cloud");
		CONSTDEF[213] = convert(5, "alarm_text", 3, "ChinaMobile.*IMS");
		CONSTDEF[214] = convert(5, "alarm_text", 3, "ChinaMobile.*SGMON");
		CONSTDEF[215] = convert(5, "alarm_text", 3, "ChinaMobile.*ZLJC");
		CONSTDEF[216] = convert(5, "alarm_text", 3, "ChinaMobile.*LN_SG_Col");
		CONSTDEF[217] = convert(5, "alarm_text", 3, "ChinaMobile.*DS_HSS");
		CONSTDEF[218] = convert(5, "alarm_text", 3, "ChinaMobile.*SC_IPNET_JianCe");
		CONSTDEF[219] = convert(5, "alarm_text", 3, "ChinaMobile.*HLR");
		CONSTDEF[220] = convert(5, "alarm_text", 3, "ChinaMobile.*M2M_Platform");
		CONSTDEF[221] = convert(5, "alarm_text", 3, "ChinaMobile.*NGN_SG");
		CONSTDEF[222] = convert(5, "alarm_text", 3, "ChinaMobile.*OA");
		CONSTDEF[223] = convert(5, "alarm_text", 3, "ChinaMobile.*MCMON");
		CONSTDEF[224] = convert(5, "alarm_text", 3, "ChinaMobile_VIP.*HWZhiZhen_A");
		CONSTDEF[225] = convert(5, "alarm_text", 3, "ChinaMobile.*BoCe");
		CONSTDEF[226] = convert(5, "alarm_text", 3, "ChinaMobile_VIP.*CTF");
		CONSTDEF[227] = convert(5, "alarm_text", 3, "ChinaMobile.*UPP");
		CONSTDEF[228] = convert(5, "alarm_text", 3, "ChinaMobile.*TDCS_Media");
		CONSTDEF[229] = convert(5, "alarm_text", 3, "ChinaMobile.*BJ_VIXTELTEST");
		CONSTDEF[230] = convert(5, "alarm_text", 3, "ChinaMobile.*SG7MON");
		CONSTDEF[231] = convert(5, "alarm_text", 3, "ChinaMobile.*IMS_Media");
		CONSTDEF[232] = convert(5, "alarm_text", 3, "ChinaMobile.*Design");
		CONSTDEF[233] = convert(5, "alarm_text", 3, "ChinaMobile.*IUPS_Media");
		CONSTDEF[234] = convert(5, "alarm_text", 3, "ChinaMobile.*GB");
		CONSTDEF[235] = convert(5, "alarm_text", 3, "ChinaMobile_VIP.*SPDB");
		CONSTDEF[236] = convert(5, "alarm_text", 3, "ChinaMobile.*NGN_Media");
		CONSTDEF[237] = convert(5, "alarm_text", 3, "ChinaMobile.*M2M_Connection");
		CONSTDEF[238] = convert(5, "alarm_text", 3, "ChinaMobile.*BOCE_B");
		CONSTDEF[239] = convert(5, "alarm_text", 3, "ChinaMobile_VIP.*HWZhiZhen_B");
		CONSTDEF[240] = convert(5, "alarm_text", 3, "ChinaMobile.*NMS");
		CONSTDEF[241] = convert(5, "alarm_text", 3, "ChinaMobile.*MISWAN");
		CONSTDEF[242] = convert(5, "alarm_text", 3, "ChinaMobile_VIP.*Cnfantasia");
		CONSTDEF[243] = convert(5, "alarm_text", 3, "ChinaMobile.*SGMON_South");
		CONSTDEF[244] = convert(5, "alarm_text", 3, "ChinaMobile.*XINAN");
		CONSTDEF[245] = convert(5, "alarm_text", 3, "ChinaMobile.*TDCS_S");
		CONSTDEF[246] = convert(5, "alarm_text", 3, "ChinaMobile_VIP.*ACCOR");
		CONSTDEF[247] = convert(5, "alarm_text", 3, "ChinaMobile.*DCS");
		CONSTDEF[248] = convert(5, "alarm_text", 3, "ChinaMobile.*IUCS_SG");
		CONSTDEF[249] = convert(5, "alarm_text", 3, "ChinaMobile.*FJ_IPNET_JianCe");
		CONSTDEF[250] = convert(5, "alarm_text", 3, "ChinaMobile.*SG");
		CONSTDEF[251] = convert(5, "alarm_text", 3, "ChinaMobile.*PriClouds");
		CONSTDEF[252] = convert(5, "alarm_text", 3, "ChinaMobile.*LTE_HSS");
		CONSTDEF[253] = convert(101104, "gcss_service_level", 4, "0,1,2,4");
		CONSTDEF[254] = convert(509, "title_text", 3, "APN下地址池占用率超过一级告警门限|地址池过负荷一级告警|性能QoS严重告警");
		CONSTDEF[255] = convert(46, "alarm_source", 3, "中兴物联网");
		CONSTDEF[256] = convert(22, "province_id", 4, "8");
		CONSTDEF[257] = convert(65, "standard_alarm_id", 8,
				"008-244-00-800002,008-244-00-800003,008-244-00-800004,008-244-00-800007,008-244-00-800011,008-244-00-800016,008-244-00-800017,008-244-00-800018,008-244-00-800019,008-244-00-800020,008-244-00-800026,008-244-00-800027,008-244-00-800043,008-244-00-800045,008-244-00-800047,008-244-00-800049,008-244-00-800050,008-244-00-800058,008-244-00-800062,008-244-00-800065,008-244-00-800066,008-244-00-800070,008-244-00-800083,008-244-00-800099,008-244-00-800103,008-244-00-800105,008-244-00-800106,008-244-00-800107,008-244-00-800108,008-244-00-800110,008-244-00-800112,008-244-00-800125,008-244-00-800127,008-244-00-800131");
		CONSTDEF[258] = convert(65, "standard_alarm_id", 8,
				"007-217-00-800060,007-217-00-800117,007-231-00-800030,007-231-00-800031,007-231-00-800037,007-231-00-800048,007-231-00-800052,007-231-00-800065,007-231-00-800072,007-231-00-800081,007-231-00-800085,007-231-00-800091,007-231-00-800094,007-231-00-800096,007-231-00-800100,007-231-00-800117,007-231-00-800119,007-231-00-800121,007-231-00-800175,007-231-00-800187,007-231-00-800192,007-231-00-800300,007-231-00-800307,007-233-00-800006,007-233-00-800035,007-233-00-800036,007-233-00-800043,007-233-00-800067,007-233-00-800068,007-233-00-800075,007-233-00-800100");
		CONSTDEF[259] = convert(509, "title_text", 3, "历史基线");
		CONSTDEF[260] = convert(509, "title_text", 3, "对等体邻居关系");
		CONSTDEF[261] = convert(1200007, "network_type_top", 4, "1,2,3,4");
		CONSTDEF[262] = convert(85, "professional_type", 4, "9");
		CONSTDEF[263] = convert(46, "alarm_source", 3, "国际信息港资源池");
		CONSTDEF[264] = convert(51, "eqp_object_class", 4, "6102,6107,6108,6112,6150");
		CONSTDEF[265] = convert(51, "eqp_object_class", 4, "6109");
		CONSTDEF[266] = convert(65, "standard_alarm_id", 8,
				"008,008-249-00-800001,008-249-00-800002,008-249-00-800003,008-249-00-800004,008-249-00-800005,008-249-00-800006,008-249-00-800007,008-249-00-800008,008-249-00-800009,008-249-00-800010,008-249-00-800011,008-249-00-800012,008-249-00-800013,008-249-00-800014,008-249-00-800015,008-249-00-800016,008-249-00-800017,008-249-00-800018,008-249-00-800019,008-249-00-800020,008-249-00-800021,008-249-00-800022,008-249-00-800023,008-249-00-800024,008-249-00-800025,008-249-00-800026,008-249-00-800027,008-249-00-800028,008-249-00-800029,008-249-00-800030,008-249-00-800031,008-249-00-800032,008-249-00-800033,008-249-00-800034,008-249-00-800035,008-249-00-800036,008-249-00-800037,008-249-00-800038,008-249-00-800039,008-249-00-800040,008-249-00-800041,008-249-00-800042,008-249-00-800043,008-249-00-800044,008-249-00-800045,008-249-00-800046,008-249-00-800047,008-249-00-800048,008-249-00-800049,008-249-00-800050,008-249-00-800051,008-249-00-800052,008-249-00-800053,008-249-00-800054,008-249-00-800055,008-249-00-800056,008-249-00-800057,008-249-00-800058,008-249-00-800059,008-249-00-800060,008-249-00-800061,008-249-00-800062,008-249-00-800063,008-249-00-800064,008-249-00-800065,008-249-00-800066,008-249-00-800067,008-249-00-800068,008-249-00-800069,008-249-00-800070,008-249-00-800071,008-249-00-800072,008-249-00-800073,008-249-00-800074,008-249-00-800075,008-249-00-800076,008-249-00-800077,008-249-00-800078,008-249-00-800079,008-249-00-800080,008-249-00-800081,008-249-00-800082,008-249-00-800083,008-249-00-800084,008-249-00-800085,008-249-00-800086,008-249-00-800087,008-249-00-800088,008-249-00-800089,008-249-00-800090,008-249-00-800091,008-249-00-800092,008-249-00-800093,008-249-00-800094,008-249-00-800095,008-249-00-800096,008-249-00-800097,008-249-00-800098,008-249-00-800099,008-249-00-800100,008-249-00-800101,008-249-00-800102,008-249-00-800103,008-249-00-800104,008-249-00-800105,008-249-00-800106,008-249-00-800107,008-249-00-800108,008-249-00-800109,008-249-00-800110,008-249-00-800111,008-249-00-800112,008-249-00-800113,008-249-00-800114,008-249-00-800115,008-249-00-800116,008-249-00-800117,008-249-00-800118,008-249-00-800119,008-249-00-800120,008-249-00-800121,008-249-00-800122,008-249-00-800123,008-249-00-800124,008-249-00-800125,008-249-00-800126,008-249-00-800127,008-249-00-800128,008-249-00-800129,008-249-00-800130,008-249-00-800131,008-249-00-800132,008-249-00-800133,008-249-00-800134,008-249-00-800135,008-249-00-800136,008-249-00-800137,008-249-00-800138,008-249-00-800139,008-249-00-800140,008-249-00-800141,008-249-00-800142,008-249-00-800143,008-249-00-800144,008-249-00-800145,008-249-00-800146,008-249-00-800147,008-249-00-800148,008-249-00-800149,008-249-00-800150,008-249-00-800151,008-249-00-800152,008-249-00-800153,008-249-00-800154,008-249-00-800155,008-249-00-800156,008-249-00-800157,008-249-00-800158,008-249-00-800159,008-249-00-800160,008-249-00-800161,008-249-00-800162,008-249-00-800163,008-249-00-800164,008-249-00-800165,008-249-00-800166,008-249-00-800167,008-249-00-800168,008-249-00-800169,008-249-00-800170,008-249-00-800171,008-249-00-800172,008-249-00-800173,008-249-00-800174,008-249-00-800175,008-249-00-800176,008-249-00-800177,008-249-00-800178,008-249-00-800179,008-249-00-800180,008-249-00-800181,008-249-00-800182,008-249-00-800183,008-249-00-800184,008-249-00-800185,008-249-00-800186,008-249-00-800187,008-249-00-800188,008-249-00-800189,008-249-00-800190,008-249-00-800191,008-249-00-800192,008-249-00-800193,008-249-00-800194,008-249-00-800195,008-249-00-800196,008-249-00-800197,008-249-00-800198,008-249-00-800199,008-249-00-800200,008-249-00-800201,008-249-00-800202,008-249-00-800203,008-249-00-800204,008-249-00-800205,008-249-00-800206,008-249-00-800207,008-249-00-800208,008-249-00-800209,008-249-00-800210,008-249-00-800211,008-249-00-800212,008-249-00-800213,008-249-00-800214,008-249-00-800215,008-249-00-800216,008-249-00-800217,008-249-00-800218,008-249-00-800219,008-249-00-800220,008-249-00-800221,008-249-00-800222");
		CONSTDEF[267] = convert(101105, "business_system", 8, "RCS_ENUMDNS_NFJD");
		CONSTDEF[268] = convert(13, "alarm_title", 5, "5040001");
		CONSTDEF[269] = convert(13, "alarm_title", 5, "5040006");
		CONSTDEF[270] = convert(5, "alarm_text", 3,
				"ACSW|ASST|CTGC|CTLE|CTOD|DTGE|OFLL|OPLL|PFLL|SE1S|SE2S|SLTC|TASL|TLCS|TOPT");
		CONSTDEF[271] = convert(13, "alarm_title", 5, "1240");
		CONSTDEF[272] = convert(65, "standard_alarm_id", 8,
				"100-902-30-000002,100-902-30-000003,100-902-30-000004,100-902-30-000005,100-902-30-000006,100-902-30-000007,100-902-30-000008,100-902-30-000009,100-902-30-000010,100-902-30-000011,100-902-30-000012,100-902-30-000013,100-902-30-000014,100-902-30-000015,100-902-30-000016,100-902-30-000017,100-902-30-000018,100-902-30-000019,100-902-30-000020,100-902-30-000022,100-902-30-000024,100-902-30-000025,100-902-30-000026,100-902-30-000027,100-902-30-000028,100-902-30-000029,100-902-30-000030,100-902-30-000031,100-902-30-000032,100-902-30-000033,100-902-30-000034,100-902-30-000035,100-902-30-000040,100-902-30-000041,100-902-30-000042,100-902-30-000043,100-902-30-000044,100-902-30-000045,100-902-30-000048");
		CONSTDEF[273] = convert(509, "title_text", 3,
				"BSC主处理器负荷平均值高于一级门限|BSC主处理器负荷平均值高于二级门限|CSFB回落成功率低于一级门限|CSFB寻呼成功率低于一级门限|DRA业务消息转发成功率低于一级门限|DRA系统平均负荷高于一级门限|HSS平均负荷高于一级门限|HSS更新位置成功率（剔除用户因素）低于一级门限|HSS鉴权信息查询成功率（剔除用户因素）低于一级门限|MME业务请求成功率低于一级门限|MME切换成功率低于一级门限|MME寻呼成功率低于一级门限|MME排除用户原因的附着成功率低于一级门限|MME缺省承载激活成功率低于一级门限|MME跟踪区更新成功率低于一级门限|PGW计费请求成功率低于一级门限|SGs联合普通位置更新成功率低于一级门限|VoLTE S-CSCF 初始注册成功率低于一级门限|eSRVCC切换成功率低于一级门限|地市LTE切换成功率低于一级门限|地市LTE无线掉线率高于一级门限|地市LTE无线接通率低于一级门限");
		CONSTDEF[274] = convert(13, "alarm_title", 5, "4266,4436,4475");
		CONSTDEF[275] = convert(10, "vendor_id", 4, "7");
		CONSTDEF[276] = convert(13, "alarm_title", 5, "4384");
		CONSTDEF[277] = convert(65, "standard_alarm_id", 8, "012-012-00-000010");
		CONSTDEF[278] = convert(51, "eqp_object_class", 4, "1710,20150,20151");
		CONSTDEF[279] = convert(509, "title_text", 3,
				"\\\\[衍生告警\\\\]1+1线性复用段备用通道没有配置业务上报告警|\\\\[衍生告警\\\\]SDH同步源劣化|\\\\[衍生告警\\\\]SDH时钟源丢失|\\\\[衍生告警\\\\]主备板软件不一致|\\\\[衍生告警\\\\]低阶通道故障|\\\\[衍生告警\\\\]低阶通道误码越限");
		CONSTDEF[280] = convert(509, "title_text", 3,
				"一干中兴波分主光路单向中断|一干中兴波分主光路双向中断|一干华为波分主光路单向中断|一干华为波分主光路双向中断|一干烽火OTN主光路单向中断|一干烽火OTN主光路双向中断|一干烽火波分主光路单向中断|一干烽火波分主光路双向中断|衍生告警]1+1线性复用段备用通道没有配置业务上报告警|衍生告警]OTN同一网管网元批量脱管|衍生告警]OTN线路光功率异常故障|衍生告警]SDH同步源劣化|衍生告警]SDH复用段状态变化指示告警|衍生告警]SDH时钟源丢失|衍生告警]SDH端口误码越限|衍生告警]SDH管理单元指针丢失|衍生告警]SDH线路中断|衍生告警]SDH线路输入异常告警|衍生告警]SDH网关网元断开连接|衍生告警]SDH设备硬件故障|衍生告警]SDH设备软件异常告警|衍生告警]SDH通道误码越限|衍生告警]WDM设备软件数据异常告警|衍生告警]一干中兴波分主光路中断|衍生告警]一干中兴波分批量单波中断故障|衍生告警]一干中兴波分板卡硬件故障|衍生告警]一干中兴波分线路光功率异常故障|衍生告警]一干中兴波分网元批量脱管|衍生告警]一干中兴波分设备级电源异常|衍生告警]一干中兴波分运行环境温度异常|衍生告警]一干华为波分主光路中断|衍生告警]一干华为波分板卡硬件故障|衍生告警]一干华为波分运行环境温度异常|衍生告警]一干烽火OTN主光路中断|衍生告警]一干烽火OTN板卡硬件故障|衍生告警]一干烽火OTN设备级电源异常|衍生告警]一干烽火OTN运行环境温度异常|衍生告警]一干烽火波分主光路中断|衍生告警]一干烽火波分板卡硬件故障|衍生告警]一干烽火波分设备级电源异常|衍生告警]一干烽火波分运行环境温度异常|衍生告警]主备板软件不一致|衍生告警]低阶通道故障|衍生告警]低阶通道误码越限|衍生告警]单波中断故障|衍生告警]同一EMS网元批量脱管|衍生告警]同一机房多个温度告警|衍生告警]同一机房多个电源告警|衍生告警]同一网管网元批量脱管|衍生告警]客户侧信号丢失故障|衍生告警]波分同一网管网元批量脱管|衍生告警]波分线路光功率异常故障|衍生告警]波分线路监控信道异常|衍生告警]设备级电源异常");
		CONSTDEF[281] = convert(65, "standard_alarm_id", 8,
				"800-011-04-000001,800-011-04-000002,800-103-04-000007,800-103-04-000008");
		CONSTDEF[282] = convert(65, "standard_alarm_id", 8,
				"012-012-00-000004,800-011-01-000001,800-011-01-000002,800-023-01-000001,800-023-01-000002");
		CONSTDEF[283] = convert(65, "standard_alarm_id", 8,
				"800-011-04-000001,800-011-04-000002,800-011-04-000005,800-011-04-000006,800-023-04-000001,800-023-04-000002,800-023-04-000005,800-023-04-000006,800-103-04-000001,800-103-04-000002,800-103-04-000005,800-103-04-000006,800-103-04-000007,800-103-04-000008");
		CONSTDEF[284] = convert(13, "alarm_title", 5, "1308,1441,1624");
		CONSTDEF[285] = convert(51, "eqp_object_class", 4, "6144");
		CONSTDEF[286] = convert(46, "alarm_source", 3, "集团直采");
		CONSTDEF[287] = convert(65, "standard_alarm_id", 8,
				"004-105-00-800103,004-105-00-800119,004-105-00-800152,004-107-00-800407,004-107-00-800429,004-107-00-800449,026-105-00-800020,026-106-00-800020,026-107-00-800013,027-105-00-800014,027-106-00-800002,027-107-00-800005,101-105-00-800051,101-105-00-800052,101-105-00-800055,101-105-00-800056,101-105-00-800057,101-106-00-800008,101-106-00-800014,101-106-00-800016,101-107-00-800035,101-107-00-800042,104-106-00-800029,104-106-00-800037,104-106-00-800040,107-105-00-010337,107-105-00-012604,107-106-00-000830,107-106-00-002504,107-107-00-003319,107-107-00-003321,107-107-00-003331,107-107-00-003339,108-105-00-005674,108-105-00-800070,108-105-00-800081,108-106-00-100003,108-106-00-102001,108-106-00-109001,108-106-00-110001,108-107-00-800014,108-107-00-800035,110-105-00-002666,110-105-00-003422,110-105-00-010589,110-106-00-070011,110-106-00-070291,110-106-00-070294,110-106-00-071512,110-107-00-074311,110-107-00-074354,110-107-00-074378");
		CONSTDEF[288] = convert(65, "standard_alarm_id", 8,
				"001-103-00-800089,008-103-00-800239,010-103-00-007650,010-103-00-007653,010-103-00-800001,010-103-00-800002,010-103-00-800003,010-103-00-800004,010-103-00-800005,010-103-00-800006,010-103-00-800007,010-103-00-800008,010-103-00-800009,010-103-00-800010,010-103-00-800011,010-103-00-800012,010-103-00-800013,010-103-00-800014,010-103-00-800015,010-103-00-800016,010-103-00-800017,010-103-00-800018,010-103-00-800019,010-103-00-800020,010-103-00-800021,010-103-00-800022,010-103-00-800024,010-103-00-800027,010-103-00-800028,010-103-00-800029,010-103-00-800030,010-103-00-800031,010-103-00-800032,010-103-00-800033,010-103-00-800034,010-103-00-800035,010-103-00-800036,010-103-00-800037,010-103-00-800038,010-103-00-800039,010-103-00-800040,010-103-00-800042,010-103-00-800043,010-103-00-800044,010-103-00-800045,010-103-00-800046,010-103-00-800047,010-103-00-800048,010-103-00-800050,010-103-00-800051,010-103-00-800052,010-103-00-800053,010-103-00-800054,010-103-00-800055,010-103-00-800056,010-103-00-800057,010-103-00-800058,010-103-00-800059,010-103-00-800060,010-103-00-800061,010-103-00-800062,010-103-00-800063,010-103-00-800064,010-103-00-800065,010-103-00-800195,010-103-00-800196,010-103-00-800197,010-103-00-800198,010-103-00-800199,010-103-00-800200,010-103-00-800201,010-103-00-800202,010-103-00-800203,010-103-00-800204,010-103-00-800205,010-103-00-800206,010-103-00-800207,010-103-00-800208,010-103-00-800209,010-103-00-800210,010-103-00-800211,010-103-00-800212,010-103-00-800213,010-103-00-800214,010-103-00-800215,010-103-00-800216,010-103-00-800217,010-103-00-800218,010-103-00-800219,010-103-00-800220,010-103-00-800221,010-103-00-800222,010-103-00-800223,010-103-00-800224,010-103-00-800225,010-103-00-800226,010-103-00-800227,010-103-00-800228,010-103-00-800229,010-103-00-800230,010-103-00-800231,010-103-00-800232,010-103-00-800233,010-103-00-800234,010-103-00-800235,010-103-00-800236,010-103-00-800237,010-103-00-800238,010-103-00-800239,010-103-00-800240,010-103-00-800241,010-103-00-800242,010-103-00-800243,010-103-00-800244,010-103-00-800245,010-103-00-800246,010-103-00-800247,010-103-00-800248,010-103-00-800249,010-103-00-800250,010-103-00-800252,010-103-00-800253,010-103-00-800254,010-103-00-800255,010-103-00-800256,010-103-00-800257,010-103-00-800258,010-103-00-800259,010-103-00-800349,010-103-00-800350,024-103-00-607472,026-103-00-1018001,026-103-00-1018002,026-103-00-1018003,026-103-00-1018004,026-103-00-1018005,026-103-00-1018006,026-103-00-1018007,026-103-00-1018008,027-103-00-800116,028-103-00-005066,800-103-01-000001,800-103-01-000002");
		CONSTDEF[289] = convert(509, "title_text", 3, "[\\s\\S]*?成功率[\\s\\S]*?");
		CONSTDEF[290] = convert(101105, "business_system", 8,
				"WEB网关业务系统-北京节点,WEB网关业务系统-广东节点,WEB网关二期北京节点,WEB网关二期广东节点,北京国际短信网关,广州国际短信网关,视频共享AAA系统,集团客户行业网关A-M模块,集团客户行业网关A-彩信模块,集团客户行业网关A-短信模块,集团客户行业网关B-M模块,集团客户行业网关B-彩信模块,集团客户行业网关B-短信模块");
		CONSTDEF[291] = convert(65, "standard_alarm_id", 8,
				"001-109-00-800113,001-109-00-800614,004-108-00-000134,004-108-00-000135,004-108-00-000140,004-109-00-800015,004-109-00-800106,004-109-00-800107,004-109-00-800163,004-109-00-800164,004-109-00-800166,004-109-00-800194,007-108-00-002001,007-108-00-002015,007-108-00-012012,007-108-00-020020,007-108-00-020064,007-108-00-020107,007-109-00-001701,007-109-00-001817,007-109-00-002752,007-109-00-002758,007-109-00-013020,008-109-00-800135,008-109-00-800259,008-109-00-800323,010-109-00-002064,010-109-00-002241,010-109-00-002703,010-109-00-003270,010-109-00-003295,010-109-00-003374");
		CONSTDEF[292] = convert(101105, "business_system", 8,
				"MBBMS业务系统,PGM业务子系统,PIM,USSD,WEB网关业务系统-北京节点,WEB网关业务系统-广东节点,WEB网关二期北京节点,WEB网关二期广东节点,WLAN Radius/Portal业务,中央DSMP业务子系统,企业邮件推送网关,北京DM操作域系统,北京DM管理域系统,北京ENUM2重定向业务,北京ENUM重定向业务,北京Radius业务子系统,北京WAP主页推送平台系统,北京位置服务-AGPS((TD),北京国际彩信网关,北京国际短信网关,北京彩信内容适配业务,北京彩信网关1,北京彩信网关2,北京彩信网关3,北京彩信网关4,北京彩信网关5,北京彩信网关6,北京骨干华为彩信(TD),大众邮件代理网关,大众邮件代理网关-菜市口,广东ENUM重定向业务,广东国际彩信网关,广东彩信网关1,广东彩信网关2,广州区域中兴彩信(TD),广州国际短信网关,新北京彩信网关1,新北京彩信网关2.,集团客户行业网关A-M模块,集团客户行业网关A-彩信模块,集团客户行业网关A-短信模块,集团客户行业网关B-M模块,集团客户行业网关B-彩信模块,集团客户行业网关B-短信模块,集团彩信互通网关系统,集团网管自身系统");
		CONSTDEF[293] = convert(12, "org_type", 4, "1,201,5,6,8,812");
		CONSTDEF[294] = convert(65, "standard_alarm_id", 8,
				"004-108-00-800012,004-108-00-800013,004-108-00-800014,004-108-00-800046,004-108-00-800050,004-108-00-800123,004-108-00-800124,004-108-00-800134,004-108-00-800135,004-108-00-800136,004-108-00-800140,004-108-00-800160,004-108-00-800183,004-108-00-800185,004-108-00-800190,007-108-00-001005,007-108-00-003162,007-108-00-003163,007-108-00-012001,007-108-00-012012,007-108-00-020006,007-108-00-020020,007-108-00-020021,007-108-00-020064,007-108-00-020103,007-108-00-020109,007-108-00-020111,007-108-00-020112,007-108-00-020120,007-108-00-020132,007-108-00-022002,007-108-00-022003,007-108-00-040925,007-108-01-007403,007-108-01-010001,007-108-01-012001,007-108-01-012012,007-108-01-012027,007-108-01-012030,007-108-01-022002,007-108-01-022003");
		CONSTDEF[295] = convert(101105, "business_system", 8,
				"WEB网关业务系统-北京节点,WEB网关业务系统-广东节点,WEB网关二期北京节点,WEB网关二期广东节点,视频共享AAA系统,集团网管自身系统");
		CONSTDEF[296] = convert(51, "eqp_object_class", 4, "6142");
		CONSTDEF[297] = convert(65, "standard_alarm_id", 8,
				"007-108-00-003001,007-108-00-003009,007-108-00-003076,007-108-00-003094,007-108-00-003100,007-108-00-003112,007-108-00-003166,007-108-00-003451,007-108-00-003815,007-108-00-004402,007-108-00-004404,007-108-00-004502,007-108-00-004503,007-108-00-004602,007-108-00-005210,007-108-00-005213,007-108-00-005214,007-108-00-007405,007-108-00-00753,007-108-00-008307,007-108-00-008503,007-108-00-008703,007-108-00-008704,007-108-00-008705,007-108-00-009751,007-108-00-009752,007-108-00-009753,007-108-00-009941,007-108-00-009943,007-108-00-009944,007-108-00-009946,007-108-00-020006,007-108-00-020102,007-108-00-022000,007-108-00-022006,007-108-01-000369,007-108-01-010000,007-108-01-010002,007-108-01-011007,007-108-01-012007,007-108-01-012008,007-108-01-012021,007-108-01-012034,007-108-01-012036,007-108-01-014004,007-108-01-014009,007-108-01-014011,007-108-01-014012,007-108-01-014017,007-108-01-014018,007-108-01-014019,007-108-01-014020");
		CONSTDEF[298] = convert(51, "eqp_object_class", 4, "102");
		CONSTDEF[302] = convert(65, "standard_alarm_id", 8,
				"007-002-00 -000893,007-002-00-000808,007-002-00-000809,007-002-00-000810,007-002-00-000811,007-002-00-000812,007-002-00-000813,007-002-00-000814,007-002-00-000815,007-002-00-000816,007-002-00-000817,007-002-00-000818,007-002-00-000819,007-002-00-000820,007-002-00-000821,007-002-00-000822,007-002-00-000823,007-002-00-000824,007-002-00-000825,007-002-00-000826,007-002-00-000827,007-002-00-000828,007-002-00-000829,007-002-00-000830,007-002-00-000831,007-002-00-000832,007-002-00-000833,007-002-00-000834,007-002-00-000835,007-002-00-000836,007-002-00-000837,007-002-00-000838,007-002-00-000839,007-002-00-000840,007-002-00-000841,007-002-00-000842,007-002-00-000843,007-002-00-000844,007-002-00-000845,007-002-00-000846,007-002-00-000847,007-002-00-000848,007-002-00-000849,007-002-00-000850,007-002-00-000851,007-002-00-000852,007-002-00-000853,007-002-00-000854,007-002-00-000855,007-002-00-000856,007-002-00-000857,007-002-00-000858,007-002-00-000859,007-002-00-000860,007-002-00-000861,007-002-00-000862,007-002-00-000863,007-002-00-000864,007-002-00-000865,007-002-00-000866,007-002-00-000867,007-002-00-000868,007-002-00-000869,007-002-00-000870,007-002-00-000871,007-002-00-000872,007-002-00-000873,007-002-00-000874,007-002-00-000875,007-002-00-000876,007-002-00-000877,007-002-00-000878,007-002-00-000879,007-002-00-000880,007-002-00-000881,007-002-00-000882,007-002-00-000883,007-002-00-000884,007-002-00-000885,007-002-00-000886,007-002-00-000887,007-002-00-000888,007-002-00-000889,007-002-00-000890,007-002-00-000891,007-002-00-000892");
		CONSTDEF[303] = convert(46, "alarm_source", 3, "哈池私有云");
		CONSTDEF[305] = convert(65, "standard_alarm_id", 8,
				"004-108-00-800015,004-108-00-800018,004-108-00-800019,004-108-00-800020,004-108-00-800023,004-108-00-800028,004-108-00-800032,004-108-00-800034,004-108-00-800035,004-108-00-800036,004-108-00-800037,004-108-00-800038,004-108-00-800039,004-108-00-800044,004-108-00-800047,004-108-00-800102,004-108-00-800104,004-108-00-800105,004-108-00-800131,004-108-00-800132,004-108-00-800138");
		CONSTDEF[306] = convert(509, "title_text", 3, "Down.*Port");
		CONSTDEF[307] = convert(5, "alarm_text", 3, "ChinaMobile_.*BOSS");
		CONSTDEF[308] = convert(5, "alarm_text", 3, "ChinaMobile_.*BOCE_B");
		CONSTDEF[309] = convert(5, "alarm_text", 3, "ChinaMobile_VIP_.*HWZhiZhen_B");
		CONSTDEF[310] = convert(5, "alarm_text", 3, "ChinaMobile_VIP_.*BOSCH_AA");
		CONSTDEF[311] = convert(5, "alarm_text", 3, "ChinaMobile_.*IUPS_Media");
		CONSTDEF[312] = convert(5, "alarm_text", 3, "ChinaMobile_.*Design");
		CONSTDEF[313] = convert(5, "alarm_text", 3, "ChinaMobile_.*BoCe");
		CONSTDEF[314] = convert(5, "alarm_text", 3, "ChinaMobile_.*M2M_Connection");
		CONSTDEF[315] = convert(5, "alarm_text", 3, "ChinaMobile_.*WangZhen");
		CONSTDEF[316] = convert(5, "alarm_text", 3, "ChinaMobile_VIP_.*EduClouds_B");
		CONSTDEF[317] = convert(5, "alarm_text", 3, "ChinaMobile_.*TDCS_Media");
		CONSTDEF[318] = convert(5, "alarm_text", 3, "ChinaMobile_.*MISWAN");
	};

	private void conditionDefine2() {
		CONSTDEF[299] = convert(65, "standard_alarm_id", 8,
				"008-002-00 -800244,008-002-00 -800298,008-002-00 -800347,008-002-00-003072,008-002-00-005645,008-002-00-005739,008-002-00-035122,008-002-00-800003,008-002-00-800009,008-002-00-800011,008-002-00-800019,008-002-00-800117,008-002-00-800118,008-002-00-800119,008-002-00-800120,008-002-00-800121,008-002-00-800122,008-002-00-800124,008-002-00-800126,008-002-00-800128,008-002-00-800147,008-002-00-800148,008-002-00-800149,008-002-00-800151,008-002-00-800152,008-002-00-800153,008-002-00-800155,008-002-00-800157,008-002-00-800163,008-002-00-800164,008-002-00-800165,008-002-00-800166,008-002-00-800167,008-002-00-800169,008-002-00-800170,008-002-00-800171,008-002-00-800172,008-002-00-800173,008-002-00-800174,008-002-00-800175,008-002-00-800176,008-002-00-800177,008-002-00-800178,008-002-00-800199,008-002-00-800200,008-002-00-800207,008-002-00-800211,008-002-00-800212,008-002-00-800213,008-002-00-800215,008-002-00-800219,008-002-00-800220,008-002-00-800224,008-002-00-800225,008-002-00-800226,008-002-00-800227,008-002-00-800228,008-002-00-800229,008-002-00-800230,008-002-00-800231,008-002-00-800232,008-002-00-800233,008-002-00-800234,008-002-00-800235,008-002-00-800236,008-002-00-800237,008-002-00-800239,008-002-00-800240,008-002-00-800241,008-002-00-800242,008-002-00-800243,008-002-00-800245,008-002-00-800246,008-002-00-800247,008-002-00-800248,008-002-00-800249,008-002-00-800250,008-002-00-800251,008-002-00-800252,008-002-00-800253,008-002-00-800254,008-002-00-800255,008-002-00-800256,008-002-00-800257,008-002-00-800258,008-002-00-800259,008-002-00-800261,008-002-00-800262,008-002-00-800263,008-002-00-800264,008-002-00-800266,008-002-00-800267,008-002-00-800268,008-002-00-800270,008-002-00-800271,008-002-00-800293,008-002-00-800294,008-002-00-800295,008-002-00-800296,008-002-00-800297,008-002-00-800299,008-002-00-800300,008-002-00-800301,008-002-00-800302,008-002-00-800303,008-002-00-800304,008-002-00-800305,008-002-00-800306,008-002-00-800307,008-002-00-800308,008-002-00-800309,008-002-00-800310,008-002-00-800311,008-002-00-800312,008-002-00-800313,008-002-00-800314,008-002-00-800315,008-002-00-800316,008-002-00-800318,008-002-00-800319,008-002-00-800320,008-002-00-800321,008-002-00-800322,008-002-00-800323,008-002-00-800324,008-002-00-800325,008-002-00-800326,008-002-00-800327,008-002-00-800329,008-002-00-800330,008-002-00-800331,008-002-00-800332,008-002-00-800333,008-002-00-800334,008-002-00-800335,008-002-00-800336,008-002-00-800337,008-002-00-800338,008-002-00-800339,008-002-00-800340,008-002-00-800341,008-002-00-800343,008-002-00-800344,008-002-00-800345,008-002-00-800348,008-002-00-800349,008-002-00-800350,008-002-00-800351,008-002-00-800352,008-002-00-800353,008-002-00-800354,008-002-00-800355,008-002-00-800356,008-002-00-800357,008-002-00-800358,008-002-00-800359,008-002-00-800360,008-002-00-800361,008-002-00-800362,008-002-00-800363,008-002-00-800364,008-002-00-800365,008-002-00-800366,008-002-00-800367,008-002-00-800368,008-002-00-800369,008-002-00-800370,008-002-00-800376,008-002-00-800377,008-002-00-800378,008-002-00-800379,008-002-00-800380,008-002-00-800382,008-002-00-800383,008-002-00-800385,008-002-00-800386,008-002-00-800387,008-002-00-800388,008-002-00-800389,008-002-00-800390,008-002-00-800391,008-002-00-800392,008-002-00-800393,008-002-00-800394,008-002-00-800395,008-002-00-800396,008-002-00-800397,008-002-00-800398,008-002-00-800399,008-002-00-800401,008-002-00-800402,008-002-00-800403,008-002-00-800404,008-002-00-800405,008-002-00-800406,008-002-00-800407,008-002-00-800408,008-002-00-800410,008-002-00-800411,008-002-00-800412");
		CONSTDEF[300] = convert(65, "standard_alarm_id", 8,
				"007-002-00-000102,007-002-00-000123,007-002-00-000125,007-002-00-000126,007-002-00-000127,007-002-00-000135,007-002-00-000136,007-002-00-000138,007-002-00-000139,007-002-00-000150,007-002-00-000213,007-002-00-000214,007-002-00-000215,007-002-00-000216,007-002-00-000220,007-002-00-000359,007-002-00-000361,007-002-00-000385,007-002-00-000400,007-002-00-000407,007-002-00-000408,007-002-00-000409,007-002-00-000410,007-002-00-000412,007-002-00-000413,007-002-00-000414,007-002-00-000415,007-002-00-000417,007-002-00-000418,007-002-00-000421,007-002-00-000422,007-002-00-000423,007-002-00-000424,007-002-00-000425,007-002-00-000426,007-002-00-000427,007-002-00-000428,007-002-00-000429,007-002-00-000430,007-002-00-000431,007-002-00-000433,007-002-00-000434,007-002-00-000435,007-002-00-000436,007-002-00-000437,007-002-00-000438,007-002-00-000441,007-002-00-000442,007-002-00-000443,007-002-00-000444,007-002-00-000445,007-002-00-000446,007-002-00-000447,007-002-00-000448,007-002-00-000449,007-002-00-000450,007-002-00-000451,007-002-00-000452,007-002-00-000453,007-002-00-000454,007-002-00-000455,007-002-00-000456,007-002-00-000457,007-002-00-000458,007-002-00-000459,007-002-00-000460,007-002-00-000461,007-002-00-000462,007-002-00-000463,007-002-00-000464,007-002-00-000465,007-002-00-000466,007-002-00-000467,007-002-00-000468,007-002-00-000469,007-002-00-000470,007-002-00-000478,007-002-00-000479,007-002-00-000480,007-002-00-000481,007-002-00-000485,007-002-00-000488,007-002-00-000489,007-002-00-000490,007-002-00-000491,007-002-00-000492,007-002-00-000498,007-002-00-000499,007-002-00-000500,007-002-00-000501,007-002-00-000503,007-002-00-000504,007-002-00-000505,007-002-00-000506,007-002-00-000507,007-002-00-000508,007-002-00-000509,007-002-00-000510,007-002-00-000511,007-002-00-000512,007-002-00-000513,007-002-00-000514,007-002-00-000515,007-002-00-000516,007-002-00-000517,007-002-00-000518,007-002-00-000523,007-002-00-000529,007-002-00-000530,007-002-00-000531,007-002-00-000532,007-002-00-000537,007-002-00-000550,007-002-00-000551,007-002-00-000552,007-002-00-000553,007-002-00-000554,007-002-00-000555,007-002-00-000556,007-002-00-000604,007-002-00-000627,007-002-00-000628,007-002-00-000629,007-002-00-000630,007-002-00-000631,007-002-00-000632,007-002-00-000633,007-002-00-000634,007-002-00-000635,007-002-00-000637,007-002-00-000638,007-002-00-000700,007-002-00-000701,007-002-00-000702,007-002-00-000703,007-002-00-000704,007-002-00-000705,007-002-00-000706,007-002-00-000707,007-002-00-000708,007-002-00-000709,007-002-00-000710,007-002-00-000711 007-002-00-000360,007-002-00-000712,007-002-00-000713,007-002-00-000714,007-002-00-000715,007-002-00-000716,007-002-00-000717,007-002-00-000741,007-002-00-000742,007-002-00-000743,007-002-00-000745,007-002-00-000746,007-002-00-000747,007-002-00-000748,007-002-00-000749,007-002-00-000750,007-002-00-000751,007-002-00-000752,007-002-00-000753,007-002-00-000754,007-002-00-000755,007-002-00-000756,007-002-00-000757,007-002-00-000758,007-002-00-000759,007-002-00-000760,007-002-00-000761,007-002-00-000762,007-002-00-000763,007-002-00-000764,007-002-00-000765,007-002-00-000766,007-002-00-000767,007-002-00-000768,007-002-00-000769,007-002-00-000770,007-002-00-000771,007-002-00-000772,007-002-00-000773,007-002-00-000774,007-002-00-000775,007-002-00-000776,007-002-00-000777,007-002-00-000778,007-002-00-000779,007-002-00-000780,007-002-00-000781,007-002-00-000782,007-002-00-000783,007-002-00-000784,007-002-00-000785,007-002-00-000786,007-002-00-000787,007-002-00-000788,007-002-00-000789,007-002-00-000790,007-002-00-000791,007-002-00-000792");
		CONSTDEF[301] = convert(65, "standard_alarm_id", 8,
				"007-002-00 -000587,007-002-00-000109,007-002-00-000160,007-002-00-000344,007-002-00-000345,007-002-00-000379,007-002-00-000380,007-002-00-000404,007-002-00-000405,007-002-00-000475,007-002-00-000486,007-002-00-000493,007-002-00-000494,007-002-00-000495,007-002-00-000496,007-002-00-000525,007-002-00-000538,007-002-00-000541,007-002-00-000542,007-002-00-000543,007-002-00-000544,007-002-00-000545,007-002-00-000546,007-002-00-000547,007-002-00-000549,007-002-00-000575,007-002-00-000576,007-002-00-000577,007-002-00-000578,007-002-00-000579,007-002-00-000580,007-002-00-000583,007-002-00-000584,007-002-00-000586,007-002-00-000588,007-002-00-000589,007-002-00-000639,007-002-00-000719,007-002-00-000720,007-002-00-000721,007-002-00-000722,007-002-00-000723,007-002-00-000724,007-002-00-000725,007-002-00-000726,007-002-00-000727,007-002-00-000728,007-002-00-000729,007-002-00-00073,007-002-00-000730,007-002-00-000731,007-002-00-000732,007-002-00-000744,007-002-00-000793,008-002-00-800413,008-002-00-800414,008-002-00-800418,008-002-00-800419,008-002-00-800427,008-002-00-800428,008-002-00-800435,008-002-00-800436,008-002-00-800439,008-002-00-800440,008-002-00-800442,008-002-00-800443,008-002-00-800444,008-002-00-800459,008-002-00-800461,008-002-00-800462,008-002-00-800463,008-002-00-800464,008-002-00-800465,008-002-00-800466,008-002-00-800467,008-002-00-800468,008-002-00-800469,008-002-00-800470,008-002-00-800471,008-002-00-800472,008-002-00-800473,008-002-00-800474,008-002-00-800475,008-002-00-800476,008-002-00-800477,008-002-00-800478,008-002-00-800479,008-002-00-800480,008-002-00-800481,008-002-00-800482,008-002-00-800483,008-002-00-800484,008-002-00-800485,008-002-00-800486,008-002-00-800487,008-002-00-800488,008-002-00-800489,008-002-00-800490,008-002-00-800491,008-002-00-800492,008-002-00-800493,008-002-00-800494,008-002-00-800495,008-002-00-800496,008-002-00-800497,008-002-00-800498,008-002-00-800499,008-002-00-800500,008-002-00-800501,008-002-00-800502,008-002-00-800503,008-002-00-800504,008-002-00-800505,008-002-00-800506,008-002-00-800507,008-002-00-800508,008-002-00-800509,008-002-00-800510,008-002-00-800511,008-002-00-800512,008-002-00-800513,008-002-00-800514,008-002-00-800515,008-002-00-800516,008-002-00-800517,008-002-00-800518,008-002-00-800519,008-002-00-800520,008-002-00-800521,008-002-00-800523,008-002-00-800524,008-002-00-800525,008-002-00-800526,008-002-00-800527,008-002-00-800528,008-002-00-800529,008-002-00-800530,008-002-00-800531,008-002-00-800532,008-002-00-800533,008-002-00-800534,008-002-00-800535,008-002-00-800536,008-002-00-800537,008-002-00-800538,008-002-00-800539,008-002-00-800540,008-002-00-800541,008-002-00-800542,008-002-00-800543,008-002-00-800544,008-002-00-800545,008-002-00-800546,008-002-00-800547,008-002-00-800548,008-002-00-800549,008-002-00-800550,008-002-00-800551,008-002-00-800552,008-002-00-800553,008-002-00-800554,008-002-00-800555,008-002-00-800556,008-002-00-800557,008-002-00-800558,008-002-00-800559,008-002-00-800560,008-002-00-800561,008-002-00-800562,008-002-00-800563,008-002-00-800564,008-002-00-800565,008-002-00-800566,008-002-00-800567,008-002-00-800568,008-002-00-800569,008-002-00-800570,008-002-00-800571,008-002-00-800572,008-002-00-800573,008-002-00-800574,008-002-00-800575,008-002-00-800576,008-002-00-800577,008-002-00-800578,008-002-00-800579,008-002-00-800580,008-002-00-800581,008-002-00-800582,008-002-00-800583,008-002-00-800584,008-002-00-800585,008-002-00-800586,008-002-00-800587,008-002-00-800588,008-002-00-800589,008-002-00-800590,008-002-00-800591,008-002-00-800592,008-002-00-800593,008-002-00-800594");
		CONSTDEF[304] = convert(65, "standard_alarm_id", 8,
				"001-103-00-800089,004-103-00-001472,007-103-00-029240,008-103-00-800239,010-103-00-007650,010-103-00-007653,010-103-00-800001,010-103-00-800002,010-103-00-800003,010-103-00-800004,010-103-00-800005,010-103-00-800006,010-103-00-800007,010-103-00-800008,010-103-00-800009,010-103-00-800010,010-103-00-800011,010-103-00-800012,010-103-00-800013,010-103-00-800014,010-103-00-800015,010-103-00-800016,010-103-00-800017,010-103-00-800018,010-103-00-800019,010-103-00-800020,010-103-00-800021,010-103-00-800022,010-103-00-800024,010-103-00-800027,010-103-00-800028,010-103-00-800029,010-103-00-800030,010-103-00-800031,010-103-00-800032,010-103-00-800033,010-103-00-800034,010-103-00-800035,010-103-00-800036,010-103-00-800037,010-103-00-800038,010-103-00-800039,010-103-00-800040,010-103-00-800042,010-103-00-800043,010-103-00-800044,010-103-00-800045,010-103-00-800046,010-103-00-800047,010-103-00-800048,010-103-00-800050,010-103-00-800051,010-103-00-800052,010-103-00-800053,010-103-00-800054,010-103-00-800055,010-103-00-800056,010-103-00-800057,010-103-00-800058,010-103-00-800059,010-103-00-800060,010-103-00-800061,010-103-00-800062,010-103-00-800063,010-103-00-800064,010-103-00-800065,010-103-00-800195,010-103-00-800196,010-103-00-800197,010-103-00-800198,010-103-00-800199,010-103-00-800200,010-103-00-800201,010-103-00-800202,010-103-00-800203,010-103-00-800204,010-103-00-800205,010-103-00-800206,010-103-00-800207,010-103-00-800208,010-103-00-800209,010-103-00-800210,010-103-00-800211,010-103-00-800212,010-103-00-800213,010-103-00-800214,010-103-00-800215,010-103-00-800216,010-103-00-800217,010-103-00-800218,010-103-00-800219,010-103-00-800220,010-103-00-800221,010-103-00-800222,010-103-00-800223,010-103-00-800224,010-103-00-800225,010-103-00-800226,010-103-00-800227,010-103-00-800228,010-103-00-800229,010-103-00-800230,010-103-00-800231,010-103-00-800232,010-103-00-800233,010-103-00-800234,010-103-00-800235,010-103-00-800236,010-103-00-800237,010-103-00-800238,010-103-00-800239,010-103-00-800240,010-103-00-800241,010-103-00-800242,010-103-00-800243,010-103-00-800244,010-103-00-800245,010-103-00-800246,010-103-00-800247,010-103-00-800248,010-103-00-800249,010-103-00-800250,010-103-00-800252,010-103-00-800253,010-103-00-800254,010-103-00-800255,010-103-00-800256,010-103-00-800257,010-103-00-800258,010-103-00-800259,010-103-00-800349,010-103-00-800350,024-103-00-607472,026-103-00-1018000,026-103-00-1018001,026-103-00-1018002,026-103-00-1018003,026-103-00-1018004,026-103-00-1018005,026-103-00-1018006,026-103-00-1018007,026-103-00-1018008,027-103-00-800116,028-103-00-005066,800-103-01-000001,800-103-01-000002");
		CONSTDEF[319] = convert(5, "alarm_text", 3, "ChinaMobile_VIP_.*HWZhiZhen_A");
		CONSTDEF[320] = convert(5, "alarm_text", 3, "ChinaMobile_.*LN_Terminal");
		CONSTDEF[321] = convert(5, "alarm_text", 3, "ChinaMobile_.*NMS");
		CONSTDEF[322] = convert(509, "title_text", 3, "Port.*Down");
		CONSTDEF[323] = convert(5, "alarm_text", 3, "ChinaMobile_.*AH_IPNET_JianCe");
		CONSTDEF[324] = convert(5, "alarm_text", 3, "ChinaMobile_.*PriClouds");
		CONSTDEF[325] = convert(5, "alarm_text", 3, "ChinaMobile_.*FJ_IPNET_JianCe");
		CONSTDEF[326] = convert(5, "alarm_text", 3, "ChinaMobile_.*DATAMON");
		CONSTDEF[327] = convert(5, "alarm_text", 3, "ChinaMobile_.*BJ_VIXTELTEST");
		CONSTDEF[328] = convert(5, "alarm_text", 3, "ChinaMobile_.*PCC");
		CONSTDEF[329] = convert(5, "alarm_text", 3, "ChinaMobile_.*WAPMMSC_Cloud");
		CONSTDEF[330] = convert(5, "alarm_text", 3, "ChinaMobile_.*SG");
		CONSTDEF[331] = convert(5, "alarm_text", 3, "ChinaMobile_.*MCMON");
		CONSTDEF[332] = convert(5, "alarm_text", 3, "ChinaMobile_VIP_.*BOSCH_HS");
		CONSTDEF[333] = convert(5, "alarm_text", 3, "ChinaMobile_.*LTE_HSS");
		CONSTDEF[334] = convert(5, "alarm_text", 3, "ChinaMobile_VIP_.*EduClouds_M");
		CONSTDEF[335] = convert(5, "alarm_text", 3, "ChinaMobile_.*SC_IPNET_JianCe");
		CONSTDEF[336] = convert(5, "alarm_text", 3, "ChinaMobile_VIP_.*SPDB");
		CONSTDEF[337] = convert(5, "alarm_text", 3, "ChinaMobile_.*OA");
		CONSTDEF[338] = convert(5, "alarm_text", 3, "ChinaMobile_.*GD_IN_Service&Order");
		CONSTDEF[339] = convert(5, "alarm_text", 3, "ChinaMobile_.*DCS");
		CONSTDEF[340] = convert(5, "alarm_text", 3, "ChinaMobile_.*ZLJC");
		CONSTDEF[341] = convert(5, "alarm_text", 3, "ChinaMobile_.*Gb");
		CONSTDEF[342] = convert(5, "alarm_text", 3, "ChinaMobile_.*UPP");
		CONSTDEF[343] = convert(5, "alarm_text", 3, "ChinaMobile_VIP_.*CTF");
		CONSTDEF[344] = convert(5, "alarm_text", 3, "ChinaMobile_.*M2M_Terminal");
		CONSTDEF[345] = convert(5, "alarm_text", 3, "ChinaMobile_.*NGN_Media");
		CONSTDEF[346] = convert(5, "alarm_text", 3, "ChinaMobile_.*HLR");
		CONSTDEF[347] = convert(5, "alarm_text", 3, "ChinaMobile_VIP_.*ACCOR");
		CONSTDEF[348] = convert(5, "alarm_text", 3, "ChinaMobile_.*IMS");
		CONSTDEF[349] = convert(5, "alarm_text", 3, "ChinaMobile_VIP_.*KangShiFu");
		CONSTDEF[350] = convert(5, "alarm_text", 3, "ChinaMobile_.*BOCE_A");
		CONSTDEF[351] = convert(5, "alarm_text", 3, "ChinaMobile_.*DS_HSS");
		CONSTDEF[352] = convert(5, "alarm_text", 3, "ChinaMobile_.*CQ_Dashuju");
		CONSTDEF[353] = convert(5, "alarm_text", 3, "ChinaMobile_VIP_.*Cnfantasia");
		CONSTDEF[354] = convert(5, "alarm_text", 3, "ChinaMobile_.*XINAN");
		CONSTDEF[355] = convert(5, "alarm_text", 3, "ChinaMobile_.*M2M_Platform");
		CONSTDEF[356] = convert(5, "alarm_text", 3, "ChinaMobile_.*NGCC");
		CONSTDEF[357] = convert(5, "alarm_text", 3, "ChinaMobile_.*SX_IPNET_JianCe");
		CONSTDEF[358] = convert(1200009, "group_id", 4, "-803673647");
		CONSTDEF[359] = convert(13, "alarm_title", 5, "15131079,15131169,15131182,15131209");
		CONSTDEF[360] = convert(65, "standard_alarm_id", 8,
				"008-244-00-800008,008-244-00-800009,008-244-00-800010,008-244-00-800012,008-244-00-800015,008-244-00-800021,008-244-00-800022,008-244-00-800023,008-244-00-800024,008-244-00-800032,008-244-00-800033,008-244-00-800040,008-244-00-800041,008-244-00-800042,008-244-00-800044,008-244-00-800046,008-244-00-800048,008-244-00-800051,008-244-00-800052,008-244-00-800053,008-244-00-800054,008-244-00-800056,008-244-00-800061,008-244-00-800063,008-244-00-800069,008-244-00-800071,008-244-00-800072,008-244-00-800081,008-244-00-800082,008-244-00-800084,008-244-00-800087,008-244-00-800091,008-244-00-800095,008-244-00-800096,008-244-00-800097,008-244-00-800098,008-244-00-800100,008-244-00-800122,008-244-00-800128,008-244-00-800132");
		CONSTDEF[361] = convert(1200009, "group_id", 4, "1867038004");
		CONSTDEF[362] = convert(22, "province_id", 4, "16");
		CONSTDEF[363] = convert(65, "standard_alarm_id", 8,
				"004-108-00-800001,004-108-00-800005,004-108-00-800006,004-108-00-800008,004-108-00-800010,004-108-00-800011,004-108-00-800012,004-108-00-800013,004-108-00-800014,004-108-00-800015,004-108-00-800018,004-108-00-800019,004-108-00-800020,004-108-00-800023,004-108-00-800024,004-108-00-800027,004-108-00-800028,004-108-00-800031,004-108-00-800032,004-108-00-800034,004-108-00-800035,004-108-00-800036,004-108-00-800037,004-108-00-800038,004-108-00-800039,004-108-00-800041,004-108-00-800042,004-108-00-800044,004-108-00-800046,004-108-00-800047,004-108-00-800050,004-108-00-800057,004-108-00-800102,004-108-00-800103,004-108-00-800104,004-108-00-800105,004-108-00-800106,004-108-00-800123,004-108-00-800124,004-108-00-800126,004-108-00-800127,004-108-00-800128,004-108-00-800131,004-108-00-800132,004-108-00-800133,004-108-00-800134,004-108-00-800135,004-108-00-800136,004-108-00-800137,004-108-00-800138,004-108-00-800140,004-108-00-800141,004-108-00-800158,004-108-00-800159,004-108-00-800160,004-108-00-800161,004-108-00-800183,004-108-00-800184,004-108-00-800185,004-108-00-800186,004-108-00-800187,004-108-00-800188,004-108-00-800189,004-108-00-800190,004-108-00-800191,004-108-00-800192,004-108-00-800193,004-108-00-800194,004-108-00-800195,004-108-00-800196");
		CONSTDEF[364] = convert(65, "standard_alarm_id", 8,
				"007-108-00-000794,007-108-00-001003,007-108-00-001005,007-108-00-001009,007-108-00-001015,007-108-00-001022,007-108-00-001023,007-108-00-001030,007-108-00-001039,007-108-00-002001,007-108-00-002015,007-108-00-002069,007-108-00-002135,007-108-00-002376,007-108-00-002377,007-108-00-002378,007-108-00-002402,007-108-00-003001,007-108-00-003009,007-108-00-003010,007-108-00-003013,007-108-00-003015,007-108-00-003076,007-108-00-003077,007-108-00-003094,007-108-00-003095,007-108-00-003100,007-108-00-003101,007-108-00-003112,007-108-00-003113,007-108-00-003160,007-108-00-003161,007-108-00-003162,007-108-00-003163,007-108-00-003164,007-108-00-003166,007-108-00-003451,007-108-00-003802,007-108-00-003807,007-108-00-003808,007-108-00-003810,007-108-00-003814,007-108-00-003815,007-108-00-003821,007-108-00-004402,007-108-00-004403,007-108-00-004404,007-108-00-004405,007-108-00-004421,007-108-00-004501,007-108-00-004502,007-108-00-004503,007-108-00-004507,007-108-00-004508,007-108-00-004509,007-108-00-004601,007-108-00-004602,007-108-00-004603,007-108-00-004605,007-108-00-004606,007-108-00-004752,007-108-00-004754,007-108-00-004756,007-108-00-005001,007-108-00-005002,007-108-00-005016,007-108-00-005102,007-108-00-005205,007-108-00-005210,007-108-00-005212,007-108-00-005213,007-108-00-005214,007-108-00-005215,007-108-00-005216,007-108-00-005217,007-108-00-005218,007-108-00-005221,007-108-00-005301,007-108-00-005402,007-108-00-005522,007-108-00-006402,007-108-00-006418,007-108-00-006419,007-108-00-006421,007-108-00-006428,007-108-00-007403,007-108-00-007404,007-108-00-007405,007-108-00-00753,007-108-00-008301,007-108-00-008302,007-108-00-008304,007-108-00-008305,007-108-00-008306,007-108-00-008307,007-108-00-008308,007-108-00-008309,007-108-00-008311,007-108-00-008502,007-108-00-008503,007-108-00-008504,007-108-00-008505,007-108-00-008510,007-108-00-008600,007-108-00-008601,007-108-00-008605,007-108-00-008610,007-108-00-008702,007-108-00-008703,007-108-00-008704,007-108-00-008705,007-108-00-008706,007-108-00-008710,007-108-00-009502,007-108-00-009750,007-108-00-009751,007-108-00-009752,007-108-00-009753,007-108-00-009941,007-108-00-009942,007-108-00-009943,007-108-00-009944,007-108-00-009946,007-108-00-009989,007-108-00-009990,007-108-00-012001,007-108-00-012012,007-108-00-012020,007-108-00-012043,007-108-00-020001,007-108-00-020005,007-108-00-020006,007-108-00-020020,007-108-00-020021,007-108-00-020064,007-108-00-020102,007-108-00-020103,007-108-00-020107,007-108-00-020108,007-108-00-020109,007-108-00-020110,007-108-00-020111,007-108-00-020112,007-108-00-020113,007-108-00-020120,007-108-00-020131,007-108-00-020132,007-108-00-020163,007-108-00-022000,007-108-00-022002,007-108-00-022003,007-108-00-022004,007-108-00-022006,007-108-00-022008,007-108-01-000369,007-108-01-000371,007-108-01-010000,007-108-01-010001,007-108-01-010002,007-108-01-011000,007-108-01-011001,007-108-01-011002,007-108-01-011003,007-108-01-011004,007-108-01-011007,007-108-01-011008,007-108-01-011009,007-108-01-011010,007-108-01-012007,007-108-01-012008,007-108-01-012011,007-108-01-012016,007-108-01-012018,007-108-01-012021,007-108-01-012026,007-108-01-012027,007-108-01-012028,007-108-01-012030,007-108-01-012031,007-108-01-012033,007-108-01-012034,007-108-01-012036,007-108-01-012037,007-108-01-012039,007-108-01-012046,007-108-01-014002,007-108-01-014003,007-108-01-014004,007-108-01-014007,007-108-01-014009,007-108-01-014011,007-108-01-014012,007-108-01-014014,007-108-01-014016,007-108-01-014017,007-108-01-014018,007-108-01-014019,007-108-01-014020,007-108-01-014022,007-108-01-014023,007-108-01-014024,007-108-01-014025,007-108-01-022009");
		CONSTDEF[365] = convert(509, "title_text", 3,
				"\\\\[衍生告警\\\\]一干中兴波分设备级电源异常|\\\\[衍生告警\\\\]一干烽火OTN设备级电源异常|\\\\[衍生告警\\\\]一干烽火波分设备级电源异常|\\\\[衍生告警\\\\]设备级电源异常");
		CONSTDEF[366] = convert(8, "int_id", 5, "-1347892097");
		CONSTDEF[367] = convert(101102, "gcss_client_name", 8, "NULL");
		CONSTDEF[368] = convert(65, "standard_alarm_id", 8,
				"001-203-00-800005,001-203-00-800009,001-203-00-800088,001-203-00-800089,001-203-00-800090,001-203-00-800091,001-205-00-800063,001-206-00-800039,001-206-00-800125,001-206-00-800131,001-206-00-800152,001-209-00-800001,001-209-00-800042,001-210-00-800075,001-210-00-800105,001-210-00-800214,001-210-00-800215,001-210-00-800253,001-210-00-800367,001-211-00-800029,001-211-00-800037,001-211-00-800064,001-217-00-800001,001-217-00-800002,001-217-00-800004,001-217-00-800005,001-217-00-800007,001-219-00-800050,001-219-00-800051,001-219-00-800052,001-219-00-800053,001-219-00-800059,001-230-00-800001,001-230-00-800002,001-230-00-800012,001-230-00-800019,001-230-00-800021,001-235-00-800004,001-235-00-800062,001-236-00-800032,001-236-00-800044,004-202-00-000036,004-202-00-000037,004-202-00-000038,004-203-00-000008,004-203-00-000009,004-203-00-000010,004-205-00-0000100,004-206-00-000004,004-206-00-000007,004-209-00-000036,004-209-00-000037,004-209-00-000038,004-210-00-0000100,004-210-00-0000103,004-211-00-000028,004-214-00-000018,004-214-00-000020,004-219-00-000028,004-219-00-000031,004-230-00-000001,007-202-00-800036,007-202-00-800037,007-202-00-800042,007-202-00-800044,007-203-00-800053,007-203-00-800054,007-203-00-800055,007-203-00-800056,007-203-00-800057,007-203-00-800058,007-204-00-800059,007-204-00-800060,007-204-00-800066,007-204-00-800070,007-204-00-800071,007-204-00-800072,007-206-00-800005,007-206-00-800007,007-206-00-800050,007-206-00-800072,007-206-00-800096,007-206-00-800102,007-206-00-800118,007-206-00-800167,007-206-00-800168,007-206-00-800174,007-209-00-800040,007-209-00-800041,007-209-00-800042,007-209-00-800043,007-209-00-800045,007-209-00-800046,007-209-00-800047,007-209-00-800050,007-210-00-800076,007-210-00-800233,007-210-00-800240,007-212-00-800092,007-212-00-800196,007-213-00-800099,007-213-00-800130,007-213-00-800237,007-215-00-800033,007-215-00-800035,007-215-00-800041,007-215-00-800043,007-216-00-800030,007-216-00-800033,007-217-00-800002,007-217-00-800006,007-217-00-800007,007-218-00-800097,007-218-00-800103,007-218-00-800105,007-219-00-800005,007-219-00-800008,007-219-00-800017,007-219-00-800020,007-219-00-800022,007-230-00-800027,007-230-00-800028,007-230-00-800033,008-202-00-800009,008-202-00-800022,008-202-00-800023,008-202-00-800111,008-202-00-800122,008-202-00-800123,008-202-00-800148,008-206-00-800145,008-206-00-800325,008-206-00-800405,008-206-00-800408,008-206-00-800438,008-206-00-800439,008-206-00-800453,008-209-00-800009,008-209-00-800022,008-209-00-800023,008-209-00-800111,008-209-00-800124,008-209-00-800125,008-210-00-800075,008-210-00-800082,008-210-00-800192,008-210-00-800281,008-216-00-800014,008-216-00-800082,008-216-00-800192,008-216-00-800281,008-217-00-800001,008-217-00-800002,008-217-00-800020,008-217-00-800035,008-218-00-004903,008-218-00-020103,008-218-00-020142,008-230-00-800079,010-202-00-906118,010-202-00-906155,010-202-00-906401,010-202-00-906723,010-202-00-909850,010-202-00-909856,010-202-00-909868,010-202-00-910065,010-202-00-910102,010-203-00-900742,010-203-00-906112,010-203-00-906118,010-203-00-906155,010-203-00-906281,010-203-00-906762,010-203-00-906827,010-203-00-907942,010-203-00-909047,010-203-00-909605,010-203-00-909856,010-203-00-910100,010-205-00-000086,010-206-00-002064,010-206-00-002741,010-206-00-003474,010-209-00-900742,010-209-00-906035,010-209-00-906118,010-209-00-906503,010-209-00-906643,010-209-00-906743,010-210-00-002064,010-210-00-003997,010-222-00-000120,010-229-00-000005,010-230-00-000009,010-230-00-000016,110-217-00-000040,110-217-00-000041");
		CONSTDEF[369] = convert(65, "standard_alarm_id", 8,
				"113-030-90-000002,113-030-90-000003,113-030-90-000004,113-030-90-000005,113-030-90-000006,113-030-90-000007,113-030-90-000008,113-030-90-000009,113-030-90-000010");
		CONSTDEF[370] = convert(1008, "eqp_int_id", 5, "-1347892097");
		CONSTDEF[371] = convert(65, "standard_alarm_id", 8,
				"007-108-00-000794,007-108-00-001003,007-108-00-001009,007-108-00-001015,007-108-00-001022,007-108-00-001023,007-108-00-001030,007-108-00-001039,007-108-00-002001,007-108-00-002015,007-108-00-002069,007-108-00-002135,007-108-00-002376,007-108-00-002377,007-108-00-002378,007-108-00-002402,007-108-00-003010,007-108-00-003013,007-108-00-003015,007-108-00-003077,007-108-00-003095,007-108-00-003101,007-108-00-003113,007-108-00-003160,007-108-00-003161,007-108-00-003164,007-108-00-003802,007-108-00-003807,007-108-00-003808,007-108-00-003810,007-108-00-003814,007-108-00-003821,007-108-00-004403,007-108-00-004405,007-108-00-004421,007-108-00-004501,007-108-00-004507,007-108-00-004508,007-108-00-004509,007-108-00-004601,007-108-00-004603,007-108-00-004605,007-108-00-004606,007-108-00-004752,007-108-00-004754,007-108-00-004756,007-108-00-005001,007-108-00-005002,007-108-00-005016,007-108-00-005102,007-108-00-005205,007-108-00-005212,007-108-00-005215,007-108-00-005216,007-108-00-005217,007-108-00-005218,007-108-00-005221,007-108-00-005301,007-108-00-005402,007-108-00-005522,007-108-00-006402,007-108-00-006418,007-108-00-006419,007-108-00-006421,007-108-00-006428,007-108-00-007403,007-108-00-007404,007-108-00-008301,007-108-00-008302,007-108-00-008304,007-108-00-008305,007-108-00-008306,007-108-00-008308,007-108-00-008309,007-108-00-008311,007-108-00-008502,007-108-00-008504,007-108-00-008505,007-108-00-008510,007-108-00-008600,007-108-00-008601,007-108-00-008605,007-108-00-008610,007-108-00-008702,007-108-00-008706,007-108-00-008710,007-108-00-009502,007-108-00-009750,007-108-00-009942,007-108-00-009989,007-108-00-009990,007-108-00-012001,007-108-00-012020,007-108-00-012043,007-108-00-020001,007-108-00-020005,007-108-00-020021,007-108-00-020064,007-108-00-020103,007-108-00-020107,007-108-00-020108,007-108-00-020109,007-108-00-020110,007-108-00-020111,007-108-00-020112,007-108-00-020113,007-108-00-020131,007-108-00-020132,007-108-00-020163,007-108-00-022002,007-108-00-022003,007-108-00-022004,007-108-00-022008,007-108-01-000371,007-108-01-011000,007-108-01-011001,007-108-01-011002,007-108-01-011003,007-108-01-011004,007-108-01-011008,007-108-01-011009,007-108-01-011010,007-108-01-012011,007-108-01-012016,007-108-01-012018,007-108-01-012028,007-108-01-012031,007-108-01-012033,007-108-01-012037,007-108-01-012039,007-108-01-012046,007-108-01-014002,007-108-01-014003,007-108-01-014007,007-108-01-014014,007-108-01-014016,007-108-01-014022,007-108-01-014023,007-108-01-014024,007-108-01-014025,007-108-01-022009");
		CONSTDEF[372] = convert(509, "title_text", 3, "流量告警");
		CONSTDEF[373] = convert(5, "alarm_text", 3, "HWZhiZhen_B.*ChinaMobile_VIP");
		CONSTDEF[374] = convert(5, "alarm_text", 3, "BoCe.*ChinaMobile");
		CONSTDEF[375] = convert(5, "alarm_text", 3, "ChinaMobile.*GD_IN_Service.*Order");
		CONSTDEF[376] = convert(5, "alarm_text", 3, "BOSCH_HS.*ChinaMobile_VIP");
		CONSTDEF[377] = convert(5, "alarm_text", 3, "BOCE_B.*ChinaMobile");
		CONSTDEF[378] = convert(5, "alarm_text", 3, "ChinaMobile.*IUPS_SG");
		CONSTDEF[379] = convert(5, "alarm_text", 3, "CQ_Dashuju.*ChinaMobile");
		CONSTDEF[380] = convert(51, "eqp_object_class", 4, "900");
		CONSTDEF[381] = convert(101105, "business_system", 8,
				"CMNET性能,GPRS国际漫游,IP路由分析系统,PGM业务子系统,PIM,USSD,WEB cache 上海,WEB cache 北京,WEB cache 广东,WEB网关业务系统-北京节点,WEB网关业务系统-南京节点,WEB网关业务系统-广东节点,WEB网关二期北京节点,WEB网关二期广东节点,WLAN Radius/Portal业务,WLAN Radius/Portal业务-广东1节点,WLAN Radius/Portal业务-广东2节点,ims enum_dns,ims enum_dns_gd,中央DSMP业务子系统,企业邮件推送网关,企业飞信系统,北京DM操作域系统,北京DM管理域系统,北京ENUM2重定向业务,北京ENUM重定向业务,北京Radius业务子系统,北京WAP主页推送平台系统,北京位置服务-AGPS((TD),北京国际彩信网关,北京国际短信网关,北京多媒体彩铃系统(TD),北京彩信网关1,北京彩信网关2,北京彩信网关3,北京彩信网关4,北京彩信网关5,北京彩信网关6,北京快讯系统(TD),北京日志留存系统,北京顶级DNS,北京飞信互通网关系统,北京骨干华为彩信(TD),北京骨干根dns系统,北京骨干通用下载平台系统(TD),北方基地物联网短信中心,双业务资源池-WAP网关,双业务资源池彩信中心系统,双跨企业飞信二期系统,国内400业务,国内短信和GRPS,国漫来访欢迎短信系统,国漫综合业务平台系统,国际漫游来访欢迎短信系统,大众邮件代理网关,大众邮件代理网关-菜市口,天津顶级DNS,宽带测速平台,广东国际彩信网关,广东彩信网关1,广东彩信网关2,广东日志留存系统,广东顶级DNS,广东骨干根dns系统,广州KJAVA系统(TD),广州区域中兴彩信(TD),广州国际短信网关,广州骨干华为彩信(TD),彩像业务平台系统,改号平台业务系统,新北京彩信网关1,新北京彩信网关2.,日志上报网关,日志查询系统,物联网业务,移动端到端自动拨测系统,视频共享AAA系统,集团IP承载网业务子系统,集团双跨IMS核心网,集团客户行业网关A-M模块,集团客户行业网关A-彩信模块,集团客户行业网关A-短信模块,集团客户行业网关B-M模块,集团客户行业网关B-彩信模块,集团客户行业网关B-短信模块,集团彩信互通网关系统,集团流控数据业务");
		CONSTDEF[382] = convert(1200006, "network_type", 4, "3001");
		CONSTDEF[383] = convert(509, "title_text", 3,
				"位置更新成功率低于告警门限|呼叫接通率低于告警门限|因传输故障造成的链路不可用|因传输故障造成的链路组不可用|因软件模块故障造成的路由不可达|因软件模块故障造成的链路不可用|因软件模块故障造成的链路组不可用|服务器上某个软件模块停止运行|服务器无法ssh登录");
		CONSTDEF[384] = convert(1200008, "ems_id", 8, "JT-OTNM2000-2-P");
		CONSTDEF[385] = convert(1008, "eqp_int_id", 5, "-1729147279");
		CONSTDEF[386] = convert(46, "alarm_source", 3, "彩信网关");
		CONSTDEF[387] = convert(89, "circuit_no", 3, "KA");
		CONSTDEF[388] = convert(13, "alarm_title", 5, "4387");
		CONSTDEF[389] = convert(65, "standard_alarm_id", 8,
				"800-011-04-000001,800-011-04-000002,800-023-04-000001,800-023-04-000002,800-023-04-000005,800-023-04-000006,800-103-04-000001,800-103-04-000002,800-103-04-000007,800-103-04-000008");
		CONSTDEF[390] = convert(49, "eqp_label", 3, "BJPGW01AHW|BJPGW02AHW|GZPGW01AHW|GZPGW02AHW");
		CONSTDEF[392] = convert(517, "board_type", 4, "306,308,309,310,311,312");
		CONSTDEF[393] = convert(1200008, "ems_id", 8, "JT-T2000-35-P,JT_T2000_3_P");
		CONSTDEF[394] = convert(22, "province_id", 4, "7");
		CONSTDEF[395] = convert(46, "alarm_source", 3, "信息港私有云资源池三期|呼和浩特私有云资源池|哈尔滨私有云资源池|国际信息港资源池");
		CONSTDEF[396] = convert(509, "title_text", 3, "\\\\[衍生告警\\\\] 客户侧信号丢失故障");
		CONSTDEF[397] = convert(514, "gcss_service_state", 8, "NULL");
		CONSTDEF[400] = convert(101105, "business_system", 8, "北方基地物联网短信中心,物联网业务");
		CONSTDEF[402] = convert(65, "standard_alarm_id", 8,
				"007-108-00-001005,007-108-00-003162,007-108-00-003163,007-108-00-012012,007-108-00-020020,007-108-00-020120,007-108-00-040925,007-108-01-010001,007-108-01-012026,007-108-01-012027,007-108-01-012030");
		CONSTDEF[403] = convert(46, "alarm_source", 3, "华为物联网");
		CONSTDEF[404] = convert(10, "vendor_id", 4, "0,17,300");
		CONSTDEF[405] = convert(13, "alarm_title", 5, "15152323,15152330,15152392,2656,3654,5001221");
		CONSTDEF[406] = convert(65, "standard_alarm_id", 8,
				"800-011-04-000005,800-011-04-000006,800-103-04-000005,800-103-04-000006");
		CONSTDEF[408] = convert(1200007, "network_type_top", 4, "3");
	};

	private void conditionDefine3() {
		CONSTDEF[391] = convert(509, "title_text", 3,
				"\\\\[衍生告警\\\\] 单波中断故障|\\\\[衍生告警\\\\]OTN单波光功率异常故障|\\\\[衍生告警\\\\]OTN同一网管网元批量脱管|\\\\[衍生告警\\\\]OTN线路光功率异常故障|\\\\[衍生告警\\\\]OTN线路监控信道异常|\\\\[衍生告警\\\\]SDH端口误码越限|\\\\[衍生告警\\\\]SDH管理单元指针丢失|\\\\[衍生告警\\\\]SDH线路中断|\\\\[衍生告警\\\\]SDH线路输入异常告警|\\\\[衍生告警\\\\]SDH网关网元断开连接|\\\\[衍生告警\\\\]SDH设备硬件故障|\\\\[衍生告警\\\\]SDH设备软件异常告警|\\\\[衍生告警\\\\]SDH通道误码越限|\\\\[衍生告警\\\\]WDM设备软件数据异常告警|\\\\[衍生告警\\\\]一干中兴波分主光路按机房打包单向中断|\\\\[衍生告警\\\\]一干中兴波分主光路按机房打包双向中断|\\\\[衍生告警\\\\]一干中兴波分单波光功率异常故障|\\\\[衍生告警\\\\]一干中兴波分板卡硬件故障|\\\\[衍生告警\\\\]一干中兴波分线路光功率异常故障|\\\\[衍生告警\\\\]一干中兴波分网元批量脱管|\\\\[衍生告警\\\\]一干华为波分主光路按机房打包单向中断|\\\\[衍生告警\\\\]一干华为波分主光路按机房打包双向中断|\\\\[衍生告警\\\\]一干华为波分板卡硬件故障|\\\\[衍生告警\\\\]一干烽火OTN主光路按机房打包单向中断|\\\\[衍生告警\\\\]一干烽火OTN主光路按机房打包双向中断|\\\\[衍生告警\\\\]一干烽火OTN板卡硬件故障|\\\\[衍生告警\\\\]一干烽火波分主光路按机房打包单向中断|\\\\[衍生告警\\\\]一干烽火波分主光路按机房打包双向中断|\\\\[衍生告警\\\\]一干烽火波分板卡硬件故障|\\\\[衍生告警\\\\]中兴同一网管网元批量脱管|\\\\[衍生告警\\\\]单波中断故障|\\\\[衍生告警\\\\]单波光功率异常故障|\\\\[衍生告警\\\\]同一EMS网元批量脱管|\\\\[衍生告警\\\\]同一机房多个电源告警|\\\\[衍生告警\\\\]同一网管网元批量脱管|\\\\[衍生告警\\\\]客户侧信号丢失故障|\\\\[衍生告警\\\\]波分单波光功率异常故障|\\\\[衍生告警\\\\]波分同一网管网元批量脱管|\\\\[衍生告警\\\\]波分线路光功率异常故障|\\\\[衍生告警\\\\]波分线路光功率异常故障|\\\\[衍生告警\\\\]波分线路监控信道异常");
		CONSTDEF[398] = convert(65, "standard_alarm_id", 8,
				"001-011-00-800148,001-011-00-800149,001-011-00-800150,001-011-00-800762,001-011-00-800984,001-011-00-801027,001-023-00-800039,001-023-00-800041,007-011-00-800028,007-011-00-800029,007-011-00-800036,007-011-00-800038,007-024-00-021503,007-024-00-021504,007-024-00-021505,007-024-00-021552,007-024-00-021553,007-024-00-022615,007-024-00-121503,008-011-00-000768,008-011-00-800015,008-011-00-800016,008-011-00-800299,008-011-00-800300,008-012-00-801800,008-023-00-800135,008-023-00-800138,010-011-00-002064,010-011-00-002070,010-024-00-021503,010-024-00-021553,012-012-00-000004,024-023-00-800039,024-023-00-800041,026-023-00-800039,026-023-00-800041,027-023-00-800037,027-023-00-800039,028-023-00-800259,028-023-00-800262,800-011-01-000001,800-011-01-000002,800-011-04-000001,800-023-01-000001,800-023-01-000002");
		CONSTDEF[399] = convert(65, "standard_alarm_id", 8,
				"001-001-00-800121,001-001-00-800126,001-001-00-800139,001-001-00-800140,001-001-00-800159,001-001-00-800162,001-001-00-800179,001-001-00-800183,001-001-00-800189,001-001-00-800193,001-001-00-800703,001-001-00-800708,001-001-00-800720,001-002-00-800112,001-002-00-800125,001-002-00-800126,001-002-00-800127,001-002-00-800563,001-002-00-800571,001-002-00-800758,001-003-00-800114,001-003-00-800143,001-003-00-800167,001-003-00-800171,001-003-00-800360,001-003-00-800361,001-003-00-800376,001-003-00-800593,001-003-00-800597,001-003-00-800705,001-004-00-800089,001-004-00-800116,001-004-00-800117,001-004-00-800230,001-008-00-800165,004-002-00-001000,004-003-00-010177,004-003-00-010181,004-003-00-010293,004-003-00-010295,004-003-00-015232,004-003-00-015430,004-003-00-017252,004-003-00-017260,004-003-00-060009,004-004-00-021527,004-004-00-024306,004-004-00-024417,004-004-00-024501,004-004-00-024505,004-007-00-000021,004-007-00-801013,004-007-00-801014,007-001-00-000038,007-002-00-000123,007-002-00-000128,007-002-00-000138,007-002-00-000139,007-002-00-000213,007-003-00-000008,007-003-00-000012,007-003-00-000013,007-003-00-000042,007-003-00-000169,007-003-00-000367,007-003-00-000774,007-004-00-000173,007-004-00-000218,007-004-00-000219,007-004-00-000457,007-004-00-000464,007-004-00-000733,007-007-00-800000,007-007-00-800001,007-007-00-800002,007-007-00-800005,007-007-00-800124,007-007-00-800854,007-007-00-801871,007-007-00-801894,007-021-00-800535,007-021-00-800868,007-021-00-800869,007-021-00-801242,007-021-00-801250,007-029-00-000003,007-029-00-000004,007-029-00-000009,007-029-00-000018,007-029-00-000019,007-102-00-000139,007-102-00-000373,007-102-00-000376,007-102-00-000377,007-102-00-000378,008-002-00-800006,008-002-00-800010,008-003-00-010823,008-003-00-800006,008-003-00-800010,008-003-00-800012,008-003-00-800110,008-003-00-800116,008-003-00-800141,008-003-00-800142,008-003-00-800150,008-003-00-800151,008-003-00-800168,008-003-00-800231,008-003-00-800239,008-003-00-800346,008-003-00-800349,008-004-00-010823,008-004-00-800006,008-004-00-800010,008-004-00-800012,008-004-00-800049,008-004-00-800057,008-004-00-800110,008-004-00-800225,008-004-00-800229,008-004-00-800237,008-019-00-020063,010-001-00-002064,010-001-00-002742,010-001-00-002772,010-002-00-002064,010-002-00-002070,010-003-00-001267,010-003-00-002064,010-003-00-002070,010-003-00-002742,010-003-00-002772,010-003-00-003474,010-004-00-002064,010-004-00-002070,010-004-00-003947,800-000-04-000001");
		CONSTDEF[401] = convert(65, "standard_alarm_id", 8,
				"007-217-00-800070,007-217-00-800071,007-217-00-800072,007-217-00-800076,007-217-00-800077,007-217-00-800082,007-217-00-800086,007-217-00-800090,007-217-00-800096,007-217-00-800115,007-217-00-800118,007-217-00-800119,007-231-00-800006,007-231-00-800024,007-231-00-800029,007-231-00-800062,007-231-00-800064,007-231-00-800073,007-231-00-800102,007-231-00-800103,007-231-00-800104,007-231-00-800107,007-231-00-800124,007-231-00-800158,007-231-00-800301,007-231-00-800309,007-233-00-800009,007-233-00-800010,007-233-00-800012,007-233-00-800013,007-233-00-800015,007-233-00-800028,007-233-00-800031,007-233-00-800037,007-233-00-800038,007-233-00-800040,007-233-00-800046,007-233-00-800055,007-233-00-800097");
		CONSTDEF[407] = convert(65, "standard_alarm_id", 8,
				"800-011-04-000001,800-011-04-000002,800-103-04-000001,800-103-04-000002,800-103-04-000007,800-103-04-000008");
		CONSTDEF[409] = convert(92, "ne_sub_type", 4, "20101,810401");
		CONSTDEF[410] = convert(51, "eqp_object_class", 4, "8104");
		CONSTDEF[411] = convert(65, "standard_alarm_id", 8,
				"001-103-00-800111,004-103-00-000243,007-103-00-000301,008-103-00-800244,010-103-00-800642,026-104-00-31000");
		CONSTDEF[412] = convert(509, "title_text", 3, "LinkUp");
		CONSTDEF[413] = convert(101105, "business_system", 8,
				"CMNET NETFLOW流量管理,CMNET性能,GPRS国际漫游,HBWH-PS-MMS-SYS,HBWH-PS-MMS-SYS,HBWH-PS-MMS1-SYS,HBWH-PS-MMS1-SYS,MBBMS业务系统,MBMS业务系统,MMS1业务系统,MMS1业务系统,MMS1业务系统,MMS2业务系,MMS2业务系统,MMS2业务系统,MMS2业务系统,MMS3业务系统,MMS3业务系统,MMS3业务系统,MMS4业务系统,PGM业务子系统,PIM,SHSH-PS-MMS-SYS01,SHSH-PS-MMS-SYS02,USSD,WAP4业务系统,WAP4业务系统,WEB网关业务系统-北京节点,WEB网关业务系统-南京节点,WEB网关业务系统-广东节点,WEB网关二期北京节点,WEB网关二期广东节点,WLAN Radius/Portal业务,WLAN-上海,WLAN-上海-WAPI,WLAN-北京,WLAN-北京-WAPI,WLAN-天津,WLAN-天津-WAPI,WLAN-沈阳,WLAN-沈阳-WAPI,WLAN-秦皇岛,WLAN-秦皇岛-WAPI,WLAN-青岛,WLAN-青岛-WAPI,ZJ_MMS1系统,ZJ_MMS2系统,ZJ_MMS3系统,ZJ_MMS4系统,ZJ_MMS5系统,中央DSMP业务子系统,企业邮件推送网关,企业飞信系统,内蒙古MMSC业务子系统,内蒙古MMSC业务子系统,北京 骨干 Mail,北京DM操作域系统,北京DM管理域系统,北京ENUM2重定向业务,北京ENUM重定向业务,北京MMSC1业务子系统,北京MMSC1业务子系统,北京MMSC2业务子系统,北京MMSC2业务子系统,北京POC系统(TD),北京Radius业务子系统,北京SharingX系统(TD),北京WAP主页推送平台系统,北京WAP系统(TD),北京位置服务-AGPS((TD),北京国际彩信网关,北京国际短信网关,北京多媒体彩铃系统(TD),北京彩信内容适配业务,北京彩信网关1,北京彩信网关2,北京彩信网关3,北京彩信网关4,北京彩信网关5,北京彩信网关6,北京快讯系统(TD),北京手机邮箱系统,北京视频会议系统(TD),北京视频留言系统(TD),北京顶级DNS,北京飞信互通网关系统,北京骨干二华为彩信(TD),北京骨干华为彩信(TD),北京骨干通用下载平台系统(TD),华为MMSC业务系统,华为彩信一920000,华为彩信一920000,华为彩信七920007,华为彩信七920007,华为彩信三920003,华为彩信三920003,华为彩信九920009,华为彩信九920009,华为彩信二920001,华为彩信二920001,华为彩信五920005,华为彩信五920005,华为彩信八920008,华为彩信八920008,华为彩信六920006,华为彩信六920006,华为彩信十920010,华为彩信十920010,华为彩信四920004,华为彩信四920004,合肥省网华为MMSC业务子系统2,吉林省彩信中心,吉林省彩信中心,四川省MMS2业务子系统,四川省MMS3业务子系统,四川省MMS4业务子系统,国内短信和GRPS,国漫综合业务平台系统,大众邮件代理网关,天津MMSC业务子系统,天津MMSC业务子系统,宁夏MMSC业务子系统,宁夏MMSC业务子系统,安徽省彩信业务系统,安徽省彩信业务系统,安徽省彩信业务系统2,安徽省彩信业务系统2,山东MMS1业务系统,山东MMS2业务系统,山东MMS3业务系统,山东WAP3业务系统,山东WAP3业务系统,广东WAP系统(TD),广东国际彩信网关,广东彩信网关1,广东彩信网关2,广东手机邮箱系统,广东顶级DNS,广州KJAVA系统(TD),广州国际短信网关,彩信网关业务系统,彩信网关业务系统,数据网.业务承载网.wap网关,数据网.业务承载网.wap网关,数据网.业务承载网.彩信中心,数据网.业务承载网.彩信中心,春晚网关,河北省彩信1,河北省彩信1,河北省彩信2,河北省彩信2,湖南省彩信1,湖南省彩信1,湖南省彩信2,湖南省彩信2,福州省网华为彩信(TD),视频共享AAA系统,辽宁省WAP,辽宁省WAP,重庆彩信业务系统,陕西彩信中心,陕西彩信中心,集团客户行业网关A-M模块,集团客户行业网关A-彩信模块,集团客户行业网关A-短信模块,集团客户行业网关B-M模块,集团客户行业网关B-彩信模块,集团客户行业网关B-短信模块,集团彩信互通网关系统,集团网管自身系统,青海MMSC业务子系统,黑龙江MMSC业务子系统,黑龙江MMSC业务子系统,黑龙江MMSC子系统中兴,黑龙江MMSC子系统中兴");
		CONSTDEF[414] = convert(81, "alarm_resource_status", 4,
				"0,1,1000,1100,1200,1201,1300,1310,1320,1321,1400,1410,1420,1590,1600,1700,2,3,4,5,9900");
		CONSTDEF[415] = convert(11, "org_severity", 4, "1,2,3,4");
		CONSTDEF[416] = convert(65, "standard_alarm_id", 8,
				"001-105-00-800051,001-105-00-800052,001-105-00-800055,001-105-00-800056,001-105-00-800057,001-106-00-800007,001-106-00-800014,001-106-00-800016,001-106-00-800089,001-107-00-800035,001-107-00-800042,004-105-00-800103,004-105-00-800119,004-105-00-800152,004-106-00-800029,004-106-00-800037,004-106-00-800040,004-107-00-800464,004-107-00-800486,004-107-00-800510,007-105-00-010337,007-105-00-012604,007-106-00-000653,007-106-00-000830,007-106-00-002504,007-107-00-003319,007-107-00-003321,007-107-00-003331,007-107-00-003339,008-105-00-005674,008-105-00-800090,008-105-00-800118,008-106-00-100003,008-106-00-102001,008-106-00-109001,008-106-00-110001,008-107-00-005921,008-107-00-005943,010-105-00-002666,010-105-00-003422,010-105-00-010589,010-106-00-070011,010-106-00-070291,010-106-00-070294,010-106-00-071512,010-107-00-074311,026-105-00-800020,026-106-00-800020,026-107-00-800013,027-105-00-800014,027-106-00-800002,027-107-00-800005,108-107-00-800035,110-107-00-074354,110-107-00-074378");
		CONSTDEF[417] = convert(65, "standard_alarm_id", 8,
				"001-011-00-800896,001-011-00-800897,001-011-00-800898,001-011-00-801162,001-011-00-801163,001-011-00-801164,001-011-00-801165,001-011-00-802001,001-103-00-800111,004-103-00-000243,004-103-00-001359,007-011-00-802845,007-011-00-802846,007-011-00-802851,007-011-00-802856,007-011-00-803084,007-103-00-000301,007-103-00-000301,007-103-00-026235,007-103-00-029240,007-103-00-029254,008-011-00-802160,008-011-00-802173,008-012-00-800899,008-012-00-800902,008-012-00-801443,008-012-00-801586,008-023-00-800218,008-103-00-800244,010-012-00-007600,010-012-00-007767,010-012-01-007603,010-012-01-007604,010-012-01-007606,010-103-00-800211,010-103-00-800244,010-103-00-800256,010-103-00-800257,010-103-00-800259,010-103-00-800493,010-103-00-800519,010-103-00-800571,010-103-00-800642,010-103-00-800770,010-103-00-800794,010-103-00-800817,010-103-00-800876,024-103-00-607472,026-104-00-31000,801-011-04-000001,801-103-04-000001,807-011-04-000001,807-103-04-000001,808-011-04-000001,810-011-04-000001,810-011-04-000002,811-011-04-000001,827-103-04-000001");
		CONSTDEF[418] = convert(14, "active_status", 4, "1");
		CONSTDEF[419] = convert(9, "object_class", 4, "10003");
		CONSTDEF[420] = convert(65, "standard_alarm_id", 8,
				"107-002-90-000001,107-002-90-000002,107-002-90-000003,107-002-90-000004,107-002-90-000005,107-002-90-000006,108-002-90-000001,108-002-90-000002,108-002-90-000003,108-002-90-000004,108-002-90-000005,108-002-90-000006,108-002-90-000007");
		CONSTDEF[421] = convert(13, "alarm_title", 5, "15155871,15156064,15156083,15156123,15156129,15156132");
		CONSTDEF[422] = convert(65, "standard_alarm_id", 8,
				"001-003-00-800114,001-003-00-800234,001-003-00-800302,001-003-00-800360,001-003-00-800367,001-003-00-800376,001-003-00-800705,001-003-00-800708,001-003-00-800745,001-004-00-800230,001-004-00-800232,001-004-00-800271,001-004-00-800325,001-004-00-800379,001-004-00-800438,001-109-00-800112,001-109-00-800347,001-109-00-801088,001-109-00-801123,001-241-00-800075,001-241-00-800253,001-242-00-800114,001-242-00-800376,004-003-00-010177,004-003-00-010181,004-003-00-010293,004-003-00-010295,004-003-00-015229,004-003-00-015412,004-003-00-060021,004-003-00-060148,004-003-00-060313,004-004-00-020007,004-004-00-020290,004-004-00-021613,004-004-00-025000,004-007-00-000021,004-007-00-000027,004-007-00-000359,004-007-00-801013,004-007-00-801014,004-108-00-000134,004-108-00-000135,004-108-00-000136,004-108-00-800183,004-108-00-800185,004-108-00-800190,004-243-00-000021,004-243-00-000027,004-243-00-000359,004-243-00-801013,004-243-00-801014,007-003-00-000008,007-003-00-000008,007-003-00-000012,007-003-00-000013,007-003-00-000042,007-003-00-000042,007-003-00-000066,007-003-00-000169,007-003-00-000367,007-003-00-000639,007-003-00-000774,007-003-00-000975,007-004-00-000173,007-004-00-000218,007-004-00-000219,007-004-00-000219,007-004-00-000457,007-004-00-000464,007-004-00-000733,007-004-00-000733,007-007-00-800000,007-007-00-800001,007-007-00-800005,007-007-00-801871,007-108-00-012012,007-108-00-020020,007-108-00-022002,007-108-00-022003,007-108-00-040925,007-108-01-000371,007-108-01-011004,007-108-01-012030,007-109-00-001701,007-109-00-001817,007-109-00-002752,007-109-00-013020,007-241-00-000114,007-242-00-000129,007-242-00-000157,008-003-00-800182,008-003-00-800186,008-003-00-800188,008-003-00-800191,008-003-00-800239,008-003-00-800279,008-003-00-800283,008-004-00-800180,008-004-00-800184,008-004-00-800186,008-004-00-800189,008-004-00-800203,008-004-00-800211,008-109-00-800135,008-109-00-800259,008-109-00-800567,010-003-00-002064,010-003-00-002687,010-003-00-002741,010-003-00-002742,010-003-00-002772,010-004-00-002064,010-004-00-003997,010-109-00-002687,013-030-00-800056,066-108-00-805100,066-108-00-822051,066-108-00-822053,066-108-00-822200,066-108-00-822725,066-108-00-888004,104-030-01-800968,107-030-00-000000,107-030-00-800200,112-030-00-000000,113-030-00-000000,307-030-00-800169,312-030-00-000009");
		CONSTDEF[423] = convert(1200009, "group_id", 4, "-33378492");
		CONSTDEF[424] = convert(110701, "layer_rate", 4, "16,17,19");
		CONSTDEF[425] = convert(65, "standard_alarm_id", 8,
				"101-005-00-800111,101-005-00-800112,101-005-00-800113,101-005-00-800114,101-005-00-800115,101-005-00-800117,108-041-00-000128,108-041-00-000129,108-041-00-000130,108-041-00-000131,108-041-00-000132,108-041-00-000133,108-041-00-000134,108-041-00-000135,108-041-00-000136,108-041-00-000137,108-041-00-000138,108-041-00-000139,108-041-00-000140,108-041-00-000141,108-041-00-000142,108-041-00-000143,108-041-00-000144,108-041-00-000145,108-041-00-000146,108-041-00-000147,108-041-00-000148,108-041-00-000149,108-041-00-000150,108-041-00-000151,108-041-00-000152,108-041-00-000153,108-041-00-000154,108-041-00-000155,108-041-00-000156,108-041-00-000157,108-041-00-000158,108-041-00-000159,108-041-00-000160,108-041-00-000161,108-041-00-000162,108-041-00-000163,108-041-00-000164,108-041-00-000165,108-041-00-000166,108-041-00-000167,108-041-00-000168,108-041-00-000169,108-041-00-000170,108-041-00-000171,108-041-00-000172,108-041-00-000173,108-041-00-000174,108-041-00-000175,108-041-00-000176,108-041-00-000177,108-041-00-000178,108-041-00-000179,108-041-00-000180,108-041-00-000181,108-041-00-000182,108-041-00-000183,108-041-00-000184,108-041-00-000185,108-041-00-000186,108-041-00-000187,108-041-00-000188,108-041-00-000189,108-041-00-000190,108-041-00-000191,108-041-00-000192,108-041-00-000193,108-041-00-000194,108-041-00-000195,108-041-00-000196,108-041-00-000197,108-041-00-000198,108-041-00-000199,108-041-00-000200,108-041-00-000201,108-041-00-000202,108-041-00-000203,108-041-00-000204,108-041-00-000205,108-041-00-000206,108-041-00-000207,108-041-00-000208,108-041-00-000209,108-041-00-000210,108-041-00-000211,108-041-00-000212,108-041-00-000213,108-041-00-000214,108-041-00-000215,108-041-00-000216,108-041-00-000217,108-041-00-000218,108-041-00-000219,108-041-00-000220,108-041-00-000221,108-041-00-000222,108-041-00-000223,108-041-00-000224,108-041-00-000225,108-041-00-000226,108-041-00-000227,108-041-00-000228,108-041-00-000229,108-041-00-000230,108-041-00-000231,108-041-00-000232,108-041-00-000233,108-041-00-000234,108-041-00-000235,108-041-00-000236,108-041-00-000237,108-041-00-000238,108-041-00-000239,108-041-00-000240,108-041-00-000241,108-041-00-000242,108-041-00-000243,108-041-00-000244,108-041-00-000245,108-041-00-000246,108-041-00-000247,108-041-00-000248,108-041-00-000249,108-041-00-000250,108-041-00-000251,108-041-00-000252,108-041-00-000253,108-041-00-000254,108-041-00-000255,108-041-00-000259,108-041-00-000260,108-041-00-000267,108-041-00-000268,108-041-00-000269,108-041-00-000270,108-041-00-000271,108-041-00-000272,108-041-00-000273,108-041-00-000274,108-041-00-000275,108-041-00-000279,108-041-00-000280,108-041-00-000281,108-041-00-000282,108-041-00-000283,108-041-00-000284,108-041-00-000285,108-041-00-000286,108-041-00-000287,108-041-00-000288,108-041-00-000289,108-041-00-000290,108-041-00-000291,108-041-00-000292,108-041-00-000293,108-041-00-000294,108-041-00-000295,108-041-00-000296,108-041-00-000297,108-041-00-000298,108-041-00-000299,108-041-00-000300,108-041-00-000301,108-041-00-000302,108-041-00-000303,108-041-00-000304,108-041-00-000305,108-041-00-000306");
		CONSTDEF[426] = convert(65, "standard_alarm_id", 8,
				"108,108-106-00-050101,108-106-00-050102,108-106-00-050103,108-106-00-050105,108-106-00-050107,108-106-00-050108,108-106-00-050201,108-106-00-050202,108-106-00-050402,108-106-00-050403,108-106-00-050404,108-106-00-050504,108-106-00-050601,108-106-00-050701,108-106-00-050702,108-106-00-050703,108-106-00-050704,108-106-00-050705,108-106-00-050706,108-106-00-050707,108-106-00-050708,108-106-00-050803,108-106-00-050804,108-106-00-050805,108-106-00-050806,108-106-00-050807,108-106-00-050808,108-106-00-050810,108-106-00-050901,108-106-00-051001,108-106-00-051003,108-106-00-100002,108-106-00-100003,108-106-00-100005,108-106-00-100006,108-106-00-100007,108-106-00-100008,108-106-00-100009,108-106-00-100010,108-106-00-100011,108-106-00-100012,108-106-00-100013,108-106-00-100014,108-106-00-100015,108-106-00-100016,108-106-00-100401,108-106-00-101001,108-106-00-101002,108-106-00-101003,108-106-00-101004,108-106-00-101005,108-106-00-102001,108-106-00-102002,108-106-00-102003,108-106-00-102004,108-106-00-102005,108-106-00-102006,108-106-00-102007,108-106-00-102008,108-106-00-102009,108-106-00-102010,108-106-00-102011,108-106-00-102012,108-106-00-102013,108-106-00-102014,108-106-00-102015,108-106-00-102016,108-106-00-102017,108-106-00-102018,108-106-00-102019,108-106-00-102020,108-106-00-102021,108-106-00-102022,108-106-00-102023,108-106-00-102024,108-106-00-102025,108-106-00-102026,108-106-00-103001,108-106-00-103002,108-106-00-103004,108-106-00-103005,108-106-00-103006,108-106-00-103007,108-106-00-103008,108-106-00-103009,108-106-00-103010,108-106-00-103011,108-106-00-103012,108-106-00-103013,108-106-00-104001,108-106-00-104002,108-106-00-104003,108-106-00-104004,108-106-00-106001,108-106-00-106004,108-106-00-106005,108-106-00-106006,108-106-00-106007,108-106-00-106008,108-106-00-106009,108-106-00-107001,108-106-00-107002,108-106-00-107003,108-106-00-107004,108-106-00-107005,108-106-00-107006,108-106-00-107007,108-106-00-108001,108-106-00-108002,108-106-00-108003,108-106-00-108004,108-106-00-108005,108-106-00-108006,108-106-00-108007,108-106-00-108008,108-106-00-109001,108-106-00-109002,108-106-00-109003,108-106-00-109004,108-106-00-110001,108-106-00-110007,108-106-00-110009,108-106-00-112001,108-106-00-113001,108-106-00-113003,108-106-00-115001,108-106-00-116001,108-106-00-116002,108-106-00-116003,108-106-00-116004,108-106-00-117001,108-106-00-117002,108-106-00-117003,108-106-00-150101,108-106-00-150102,108-106-00-150103,108-106-00-150201,108-106-00-150301,108-106-00-150401,108-106-00-150402,108-106-00-150403,108-106-00-200101,108-106-00-200102,108-106-00-200105,108-106-00-200106,108-106-00-200107,108-106-00-200233,108-106-00-200235,108-106-00-200238,108-106-00-200310,108-106-00-200311,108-106-00-200420,108-106-00-200421,108-106-00-200501,108-106-00-240202,108-106-00-240204,108-106-00-250106,108-106-00-250302,108-106-00-250303,108-106-00-250304,108-106-00-250311,108-106-00-250315,108-106-00-250318,108-106-00-250402,108-106-00-250403,108-106-00-300101,108-106-00-300102,108-106-00-300103,108-106-00-300501,108-106-00-300601,108-106-00-300701,108-106-00-300801,108-106-00-300802,108-106-00-300803,108-106-00-300805,108-106-00-301001,108-106-00-302002,108-106-00-360101,108-106-00-400122,108-106-00-400123,108-106-00-400124,108-106-00-400130,108-106-00-400131,108-106-00-400132,108-106-00-400133,108-106-00-400134,108-106-00-400135,108-106-00-400136,108-106-00-400137,108-106-00-400138,108-106-00-400139,108-106-00-400140,108-106-00-400141,108-106-00-400142,108-106-00-400143,108-106-00-400144,108-106-00-400145,108-106-00-400146,108-106-00-400147,108-106-00-400148,108-106-00-400149,108-106-00-400150,108-106-00-400151,108-106-00-400163,108-106-00-400201,108-106-00-400202,108-106-00-400203,108-106-00-400204,108-106-00-400205,108-106-00-400206,108-106-00-400207,108-106-00-400301,108-106-00-400302,108-106-00-400303,108-106-00-400304,108-106-00-400305,108-106-00-400306,108-106-00-400307,108-106-00-400308,108-106-00-400309,108-106-00-400310,108-106-00-400311");
		CONSTDEF[427] = convert(65, "standard_alarm_id", 8,
				"107-106-00-000500,107-106-00-000501,107-106-00-000502,107-106-00-000503,107-106-00-000504,107-106-00-000505,107-106-00-000506,107-106-00-000507,107-106-00-000508,107-106-00-000509,107-106-00-000510,107-106-00-000511,107-106-00-000512,107-106-00-000550,107-106-00-000601,107-106-00-000602,107-106-00-000603,107-106-00-000604,107-106-00-000605,107-106-00-000618,107-106-00-000619,107-106-00-000620,107-106-00-000621,107-106-00-000630,107-106-00-000631,107-106-00-000632,107-106-00-000633,107-106-00-000634,107-106-00-000636,107-106-00-000637,107-106-00-000639,107-106-00-000640,107-106-00-000654,107-106-00-000655,107-106-00-000657,107-106-00-000658,107-106-00-000660,107-106-00-000661,107-106-00-000662,107-106-00-000663,107-106-00-000664,107-106-00-000665,107-106-00-000666,107-106-00-000667,107-106-00-000668,107-106-00-000670,107-106-00-000671,107-106-00-000673,107-106-00-000674,107-106-00-000675,107-106-00-000690,107-106-00-000701,107-106-00-000702,107-106-00-000703,107-106-00-000704,107-106-00-000705,107-106-00-000801,107-106-00-000802,107-106-00-000807,107-106-00-000808,107-106-00-000813,107-106-00-000818,107-106-00-000819,107-106-00-000820,107-106-00-000822,107-106-00-000825,107-106-00-000826,107-106-00-000829,107-106-00-000830,107-106-00-000833,107-106-00-000839,107-106-00-000840,107-106-00-000841,107-106-00-002504,107-106-00-002601,107-106-00-002602,107-106-00-002606,107-106-00-002607,107-106-00-002608,107-106-00-002611,107-106-00-002612,107-106-00-002613,107-106-00-002614,107-106-00-002615,107-106-00-002616,107-106-00-002617,107-106-00-002618,107-106-00-002619,107-106-00-002621,107-106-00-002650,107-106-00-002700,107-106-00-002701,107-106-00-002705,107-106-00-002806,107-106-00-002911,107-106-00-002912,107-106-00-002913,107-106-00-002915,107-106-00-002916");
		CONSTDEF[428] = convert(1200009, "group_id", 4, "804317899");
		CONSTDEF[429] = convert(5, "alarm_text", 3, "ChinaMobile_VIP_.*IMS_Media");
		CONSTDEF[430] = convert(5, "alarm_text", 3, "ChinaMobile_.*IMS_Media");
		CONSTDEF[431] = convert(5, "alarm_text", 3, "ChinaMobile.*LN_SG_Collection");
		CONSTDEF[432] = convert(5, "alarm_text", 3, "ZLJC.*ChinaMobile_");
		CONSTDEF[433] = convert(5, "alarm_text", 3, "IUPS_SG.*ChinaMobile");
		CONSTDEF[434] = convert(22, "province_id", 4, "1,10,11,12,13,2,3,4,5,6,7,8,9");
		CONSTDEF[435] = convert(5, "alarm_text", 3, "ChinaMobile_.*SD_SG_Collection");
		CONSTDEF[436] = convert(101105, "business_system", 8, "集团IP承载网业务子系");
		CONSTDEF[437] = convert(509, "title_text", 3, "失败告警|超时告警|非法地址");
		CONSTDEF[438] = convert(101105, "business_system", 8, "集团DNS监控");
		CONSTDEF[439] = convert(13, "alarm_title", 5, "15133461,15133463,15133473,15155871");
		CONSTDEF[440] = convert(46, "alarm_source", 3, "国际信息港三期");
		CONSTDEF[441] = convert(509, "title_text", 3, "重保小区业务质量劣化（信令）低于一级门限");
		CONSTDEF[442] = convert(65, "standard_alarm_id", 8, "100-902-30-000048");
		CONSTDEF[443] = convert(22, "province_id", 4, "1");
		CONSTDEF[444] = convert(65, "standard_alarm_id", 8,
				"100-902-30-000002,100-902-30-000005,100-902-30-000008,100-902-30-000011,100-902-30-000014,100-902-30-000017,100-902-30-000021,100-902-30-000024,100-902-30-000027,100-902-30-000030,100-902-30-000033,100-902-30-000037,100-902-30-000040,100-902-30-000043");
		CONSTDEF[445] = convert(22, "province_id", 4, "1,10,11,12,13,14,15,17,18,19,2,20,21,22,23,26,3,34,4,5,6,7,8,9");
		CONSTDEF[446] = convert(1200009, "group_id", 4, "654744943");
		CONSTDEF[447] = convert(509, "title_text", 3,
				"Eth-Trunk成员口故障|PKT_INFRA-LINEPROTO-5-UPDOWN|PKT_INFRA-LINK-3-UPDOWN|PKT_INFRA-LINK-5-CHANGED|TE tunnel变为down|linkDown|成员接口Down|接口IPV6状态变化|物理端口DOWN(base)|物理端口Down|链路断开");
		CONSTDEF[448] = convert(46, "alarm_source", 3,
				"大比武|比武-传输网|比武-传输网a|比武-家宽|比武-家宽a|比武-数据网|比武-数据网a|比武-无线网|比武-突发事件|比武-突发事件a|比武-集客|比武-集客a");
		CONSTDEF[449] = convert(509, "title_text", 3, "CMNET业务产生多条link_down");
		CONSTDEF[450] = convert(519, "vendor_type", 8, "应用模块派生告警");
		CONSTDEF[451] = convert(1200008, "ems_id", 8,
				"JT-T2000-35-P,JT-U2000-35-P,JT-U2000-37-P,JT_T2000_33_P,JT_T2000_3_P");
		CONSTDEF[452] = convert(517, "board_type", 4, "304,31,313,315,316,317,327,36");
		CONSTDEF[453] = convert(1200008, "ems_id", 8, "JT-OTNM2000-2-P,JT-OTNM2000-3-P");
		CONSTDEF[454] = convert(13, "alarm_title", 5, "4851");
		CONSTDEF[455] = convert(1200008, "ems_id", 8, "JT-U2000-35-P,JT-U2000-37-P,JT_T2000_33_P,JT_T2000_33_P");
		CONSTDEF[456] = convert(512, "alarm_unit", 3, "有限公司长长中继一期,有限公司长长中继三期,有限公司长长中继四期,有限公司长长中继五期");
		CONSTDEF[457] = convert(517, "board_type", 4, "306,307,308,309,310,311,312");
		CONSTDEF[458] = convert(1200008, "ems_id", 8,
				"JT-T2000-35-P,JT-U2000-35-P,JT-U2000-37-P,JT-U2000-41-PJT-U2000-39-P,JT_T2000_3_P");
		CONSTDEF[459] = convert(517, "board_type", 4, "300,301,304,305,313,316");
		CONSTDEF[460] = convert(1200008, "ems_id", 8,
				"JT-E300-1-P,JT-E300-2-P,JT-E300-3-P,JT-E300-4-P,JT-E300-9-P,ZTE-OTNU31-14-P,ZTE-WDMU31-13-P");
		CONSTDEF[461] = convert(13, "alarm_title", 5, "15156860,15156871,15156907,15156910,2633");
		CONSTDEF[462] = convert(65, "standard_alarm_id", 8,
				"012-012-00-000004,800-011-01-000001,800-011-01-000002,800-011-04-000001,800-023-01-000001,800-023-01-000002");
		CONSTDEF[463] = convert(1200009, "group_id", 4, "509175859");
		CONSTDEF[464] = convert(51, "eqp_object_class", 4, "201");
		CONSTDEF[465] = convert(65, "standard_alarm_id", 8,
				"004-011-00-900896,004-012-00-907767,007-011-00-000696,007-011-00-802845,007-011-00-802851,008-011-00-802173,008-012-00-800899,010-012-00-007706,010-012-00-007767,010-012-00-943003,010-012-01-007767,800-001-04-000001");
		CONSTDEF[466] = convert(100401, "object_level", 4, "2,20108,810408,920108");
		CONSTDEF[467] = convert(22, "province_id", 4, "23");
		CONSTDEF[468] = convert(65, "standard_alarm_id", 8,
				"800-011-01-000001,800-011-01-000002,800-011-04-000001,800-011-04-000002,800-023-01-000001,800-023-01-000002,800-023-04-000005,800-023-04-000006,800-099-04-000001,800-200-01-000001");
		CONSTDEF[469] = convert(65, "standard_alarm_id", 8,
				"800-011-04-000001,800-011-04-000002,800-011-04-000005,800-011-04-000006,800-023-04-000001,800-023-04-000002,800-023-04-000005,800-023-04-000006,800-103-04-000001,800-103-04-000002,800-103-04-000007,800-103-04-000008");
		CONSTDEF[470] = convert(517, "board_type", 4, "304,31,313,315,316,317,36");
		CONSTDEF[471] = convert(1200008, "ems_id", 8, "JT-OTNM2000-2-P,移动东北环");
		CONSTDEF[472] = convert(65, "standard_alarm_id", 8,
				"004-108-00-800012,004-108-00-800013,004-108-00-800014,004-108-00-800046,004-108-00-800050,004-108-00-800123,004-108-00-800124,004-108-00-800134,004-108-00-800135,004-108-00-800136,004-108-00-800140,004-108-00-800158,004-108-00-800159,004-108-00-800160,004-108-00-800183,004-108-00-800185,004-108-00-800190,004-108-00-800192,004-108-00-800193,004-108-00-800194,004-108-00-800195,004-108-00-800196");
		CONSTDEF[473] = convert(509, "title_text", 3, "阈值");
		CONSTDEF[474] = convert(101105, "business_system", 8,
				"CMNET NETFLOW流量管理,CMNET性能,GPRS国际漫游,MBBMS业务系统,MBMS业务系统,MMS1业务系统,MMS1业务系统,MMS1业务系统,MMS1业务系统,MMS2业务系统,MMS2业务系统,MMS2业务系统,MMS2业务系统,MMS3业务系统,MMS3业务系统,MMS3业务系统,MMS3业务系统,MMS4业务系统,MMS4业务系统,PGM业务子系统,PIM,SHSH-PS-MMS-SYS01,USSD,WEB网关业务系统-北京节点,WEB网关业务系统-南京节点,WEB网关业务系统-广东节点,WEB网关二期北京节点,WEB网关二期广东节点,WLAN Radius/Portal业务,WLAN-上海-WAPI,WLAN-北京,WLAN-北京-WAPI,WLAN-天津,WLAN-天津-WAPI,WLAN-沈阳,WLAN-沈阳-WAPI,WLAN-秦皇岛,WLAN-秦皇岛-WAPI,WLAN-青岛,WLAN-青岛-WAPI,ZJ_MMS1系统,ZJ_MMS4系统,ZJ_WAP3系统,中央DSMP业务子系统,云南省省彩信中心,企业飞信系统,内蒙古MMSC业务子系统,内蒙古MMSC业务子系统,北京 骨干 Mail,北京DM操作域系统,北京DM管理域系统,北京ENUM2重定向业务,北京ENUM重定向业务,北京MMSC1业务子系统,北京MMSC1业务子系统,北京MMSC2业务子系统,北京MMSC2业务子系统,北京POC系统(TD),北京Radius业务子系统,北京SharingX系统(TD),北京WAP主页推送平台系统,北京WAP系统(TD),北京位置服务-AGPS((TD),北京国际彩信网关,北京国际短信网关,北京多媒体彩铃系统(TD),北京彩信内容适配业务,北京彩信网关1,北京彩信网关2,北京彩信网关3,北京彩信网关4,北京彩信网关5,北京彩信网关6,北京快讯系统(TD),北京手机邮箱系统,北京视频会议系统(TD),北京视频留言系统(TD),北京顶级DNS,北京飞信互通网关系统,北京骨干二华为彩信(TD),北京骨干华为彩信(TD),北京骨干通用下载平台系统(TD),华为MMSC业务系统,华为MMSC业务系统,华为彩信一920000,华为彩信一920000,华为彩信七920007,华为彩信七920007,华为彩信三920003,华为彩信三920003,华为彩信九920009,华为彩信九920009,华为彩信二920001,华为彩信二920001,华为彩信五920005,华为彩信五920005,华为彩信八920008,华为彩信八920008,华为彩信六920006,华为彩信六920006,华为彩信四920004,华为彩信四920004,合肥省网华为MMSC业务子系统2,四川省MMS3业务子系统,四川省MMS4业务子系统,国内短信和GRPS,国漫综合业务平台系统,大众邮件代理网关,天津MMSC业务子系统,天津MMSC业务子系统,宁夏MMSC业务子系统,宁夏MMSC业务子系统,安徽省彩信业务系统,安徽省彩信业务系统,安徽省彩信业务系统2,安徽省彩信业务系统2,山东MMS1业,山东MMS1业务系统,山东MMS2业务系统,山东MMS2业务系统,山东MMS3业务系统,山东MMS3业务系统,山东MMS4业务系统,山东MMS4业务系统,广东WAP系统(TD),广东国际彩信网关,广东彩信网关1,广东彩信网关2,广东手机邮箱系统,广东本地九WAP_华为,广东本地九WAP_华为,广东顶级DNS,广州KJAVA系统(TD),广州区域中兴彩信(TD),广州国际短信网关,广西MMSC业务子系统,广西MMSC业务子系统,彩信网关业务系统,彩信网关业务系统,数据网.业务承载网.彩信中心,数据网.业务承载网.彩信中心,新疆省彩信中心1,河北省彩信1,河北省彩信1,河北省彩信2,河北省彩信2,海南省wap网关,海南省wap网关,海南省彩信业务系统,海南省彩信业务系统,湖南省彩信1,湖南省彩信1,湖南省彩信2,湖南省彩信2,福州省网中兴MMSC业务子系统3,视频共享AAA系统,重庆彩信业务系统,集团客户行业网关A-M模块,集团客户行业网关A-彩信模块,集团客户行业网关A-短信模块,集团客户行业网关B-M模块,集团客户行业网关B-彩信模块,集团客户行业网关B-短信模块,集团彩信互通网关系统,集团网管自身系统,青海MMSC业务子系统,青海MMSC业务子系统,黑龙江MMSC业务子系统,黑龙江MMSC业务子系统,黑龙江MMSC子系统中兴,黑龙江MMSC子系统中兴");
		CONSTDEF[475] = convert(81, "alarm_resource_status", 4, "1,1300,1310,1320,1400,1410,1420,5");
		CONSTDEF[476] = convert(6, "redefine_severity", 4, "2");
		CONSTDEF[477] = convert(5, "alarm_text", 3, "4    114    1");
		CONSTDEF[478] = convert(46, "alarm_source", 3, "集团直采国际局");
		CONSTDEF[479] = convert(49, "eqp_label", 3,
				"1-望京移动枢纽（AB1-1）|10-博瑞琪扩1|11-博瑞琪扩2|1175-N-BRQ-JTR-WDM10G-2-H-3500|1176-N-BRQ-JTR-WDM10G-3-H-3500|1177-N-BRQ-JTR-WDM10G-3-H-3500-01|1178-N-CSK-JTR-WDM10G-2-H-3500(M7-1)|1179-N-CSK-JTR-WDM10G-3-H-3500(N7-1)|1180-N-CSK-JTR-WDM10G-3-H-3500-01(N7-2)|1181-N-WJ-JTR-WDM10G-2-H-3500(N7-01)|1182-N-WJ-JTR-WDM10G-3-H-3500(M6-01)|1183-N-WJ-JTR-WDM10G-3-H-3500-01(M6-02)|1184-N-ZHZX-JTR-WDM10G-2-H-3500|1185-N-ZHZX-JTR-WDM10G-3-H-3500|1186-N-ZHZX-JTR-WDM10G-3-H-3500-01|1188-N-BJWJ-H-OSN9500-01(MN6)|1189-N-BJCSK-H-OSN9500-01(MN4-1)|1190-N-BJCSK-H-OSN9500-02(MN5-1)|1191-N-BJWJ-H-OSN9500-02(MN5)|1193-指挥中心扩3|1194-长话扩2IJ4-1|12-长话扩1EF4-2|1316-N-BRQ-JTR-WDM10G-4-H-OSN9500|1317-N-ZHZX-JTR-WDM10G-4-H-OSN9500|1327-N-BJWJ-H-OSN9500-03(MN10)(四期)|1328-N-BJWJ-H-OSN9500-04(MN11)（四期）|1329-N-CSK-JTR-WDM10G-4-H-OSN9500(OP3)|1330-N-WJ-JTR-WDM10G-4-H-OSN9500(MN12)|1350-N-WJ-JTR-WDM10G-4-H-OSN3500-01(N7-02)|1351-N-BRQ-JTR-WDM10G-4-H-OSN3500-01（四期）|1364-N-ZHZX-H-OSN3500-04|1365-N-BJWJ-H-TM2.5G(MN13-01)(6.1期TM)|1368-N-BJBRQ-H-OSN3500-05|1369-N-BJWJ-H-OSN3500-05|1370-N-BJCSK-OSN3500-04(M9-01)|1375-N-BJWJ-H-OSN9500-03-TM1|1393-N-BJCSK-H-OSN9500-04(YZ5-01)|1433-N-BJWJ-H-OSN3500-01(H6-1)|1434-N-BJCSK-H-OSN9500-JCSB-02(WX8-1)|1435-N-BJCSK-H-OSN3500-01(X7-1)|1436-N-BJDBL-H-OSN9500-01(IJ7-1)|1509-N-BJWJ-H-OSN9500-JCSB-03(IJ8-01)|1510-N-BJDBL-H-OSN9500-JCSB(IJ9-01)|1522-N-GJXXG2-H-OSN9500-01(AB3)|1523-N-GJXXG2-H-OSN3500-01(AA1)|1524-N-GJXXG2-H-OSN9500-02(AB4)|1525-N-GJXXG2-H-OSN3500-02(AB1)|1526-N-BJCSK-H-OSN3500-05(10楼B9)|1543-N-BJDBW-H-OSN3500-02|1544-N-BJDBW-H-OSN3500-05|1577-N-GJXXG2-H-OSN3500-03|1620-N-BJDBW-H-OSN3500-06|1637-N-GJXXG2-H-OSN3500-04|1638-N-ZHZX-H-OSN3500-05-新建告警不用处理|1639-N-BRQ-JTR-WDM10G-4-H-OSN9500-02|1640-N-BJBRQ-H-OSN3500-06|2-通信指挥中心|3-博瑞琪|4-长话大楼EF4-1|5-望京扩1|6-望京扩2|7-望京扩3|8-通信扩1|9-通信扩2");
		CONSTDEF[480] = convert(46, "alarm_source", 3, "LTE国际局");
		CONSTDEF[481] = convert(22, "province_id", 4, "9");
		CONSTDEF[482] = convert(509, "title_text", 3,
				"BFD会话DOWN|CPU业务宕机告警|DIAMETER动态链路建链不成功或链路断|DIAMETER协议栈会话资源耗尽|DIAMETER协议栈无法获取协议栈所需数据|DIAMETER建链不成功或链路断|DIAMETER静态链路建链不成功或链路断|Diameter链路断|GGSN PDP上下文局容量不足一级告警|License在线用户数负荷告警|M3UA局向不可达|MTP3局向不可达|PCC会话数超过许可容量限制一级告警|PCI设备异常|PCRF链路不可达|SCTP长时间拥塞|与主用单板控制面通讯异常|内存不足告警|内存容量异常|协议栈请求系统配置信息超时|单板离线|单板配置信息不兼容|和DHCP服务器之间链路宕|和LNS之间链路宕|和计费服务器之间链路宕|和鉴权服务器之间链路宕|数据区容量负荷告警|文件系统故障|电源不在线告警|电源交流掉电|电源断路器告警|电源模块开关机告警|电源模块故障告警|电源设备不在位|直流电源电压故障|直流电源第二分区断路器断开|直流电源第二分区电压故障|硬盘RAID异常|硬盘异常|硬盘离线|系统一级过负荷告警|系统启动失败|规则相关表加载失败");
		CONSTDEF[484] = convert(1200009, "group_id", 4, "161495949");
		CONSTDEF[485] = convert(46, "alarm_source", 3, "IP拨测");
		CONSTDEF[490] = convert(9, "object_class", 4, "201,8104");
		CONSTDEF[491] = convert(30, "sub_alarm_type", 4, "68");
		CONSTDEF[492] = convert(1200007, "network_type_top", 4, "1");
		CONSTDEF[493] = convert(51, "eqp_object_class", 4, "1026");
		CONSTDEF[494] = convert(509, "title_text", 3, "成功率");
		CONSTDEF[495] = convert(65, "standard_alarm_id", 8,
				"007-217-00-800078,007-217-00-800079,007-217-00-800080,007-217-00-800081,007-217-00-800083,007-217-00-800084,007-231-00-800105,007-231-00-800174,007-233-00-800020,007-233-00-800024,007-233-00-800025,007-233-00-800026,007-233-00-800027,007-233-00-800087");
		CONSTDEF[498] = convert(509, "title_text", 3, "GTPC路径|GTPU路径|gtpPathFailure|信令路径断|数据路径断");
		CONSTDEF[499] = convert(6, "redefine_severity", 4, "1,2,3");
		CONSTDEF[500] = convert(509, "title_text", 3, "丢包率|带宽利用率|时延");
		CONSTDEF[501] = convert(509, "title_text", 3, "BGP");
		CONSTDEF[504] = convert(46, "alarm_source", 3, "集团直采话务");
	};

	private void conditionDefine4() {
		CONSTDEF[483] = convert(65, "standard_alarm_id", 8,
				"108-030-00-150106,108-030-00-150107,108-030-00-150108,108-030-00-240301,108-030-00-250302,108-030-00-250304,108-030-00-300103,108-030-00-300801,108-030-00-300802,108-030-00-300805,108-030-00-300806,108-030-00-303204,108-030-00-303206,108-030-00-303207,108-030-00-303212,108-030-00-303213,108-030-00-303216,108-030-00-303217,108-030-00-303218,108-030-00-303219,108-030-00-303223,108-030-00-303304,108-030-00-303306,108-030-00-303307,108-030-00-303313,108-030-00-303316,108-030-00-303317,108-030-00-303318,108-030-00-303319,108-030-00-303323,108-030-00-303404,108-030-00-303406,108-030-00-303407,108-030-00-303413,108-030-00-303416,108-030-00-303417,108-030-00-303418,108-030-00-303419,108-030-00-303423,108-030-00-350202,108-030-00-350203,108-030-00-360105,108-030-00-400122,108-030-00-400123,108-030-00-400124,108-030-00-400125,108-030-00-400130,108-030-00-400131,108-030-00-400132,108-030-00-400133,108-030-00-400135,108-030-00-400136,108-030-00-400137,108-030-00-400139,108-030-00-400140,108-030-00-400141,108-030-00-400142,108-030-00-400143,108-030-00-400144,108-030-00-400145,108-030-00-400146,108-030-00-400147,108-030-00-400148,108-030-00-400149,108-030-00-400150,108-030-00-400151,108-030-00-400152,108-030-00-400162,108-030-00-400165,108-030-00-400166,108-030-00-400167,108-030-00-400184,108-030-00-400201,108-030-00-400202,108-030-00-400203,108-030-00-400204,108-030-00-400205,108-030-00-400206,108-030-00-400207,108-030-00-400301,108-030-00-400302,108-030-00-400303,108-030-00-400304,108-030-00-400305,108-030-00-400306,108-030-00-400307,108-030-00-400308,108-030-00-400309,108-030-00-400310,108-030-00-400311,108-030-00-400312,108-030-00-400313,108-030-00-400314,108-030-00-400315,108-030-00-400316,108-030-00-400317,108-030-00-400318,108-030-00-400319,108-030-00-400331,108-030-00-400332,108-030-00-400333,108-030-00-400334,108-030-00-400336,108-030-00-400337,108-030-00-400338,108-030-00-400339,108-030-00-400340,108-030-00-400341,108-030-00-400342,108-030-00-400343,108-030-00-400344,108-030-00-400345,108-030-00-400346,108-030-00-400510,108-030-00-400604,108-030-00-400606,108-030-00-400607,108-030-00-400608,108-030-00-400704,108-030-00-400801,108-030-00-400901,108-030-00-401501,108-030-00-850104,108-030-00-851002");
		CONSTDEF[486] = convert(65, "standard_alarm_id", 8,
				"007-002-00-000808,007-002-00-000809,007-002-00-000810,007-002-00-000811,007-002-00-000812,007-002-00-000813,007-002-00-000814,007-002-00-000815,007-002-00-000816,007-002-00-000817,007-002-00-000818,007-002-00-000819,007-002-00-000820,007-002-00-000821,007-002-00-000822,007-002-00-000823,007-002-00-000824,007-002-00-000825,007-002-00-000826,007-002-00-000827,007-002-00-000828,007-002-00-000829,007-002-00-000830,007-002-00-000831,007-002-00-000832,007-002-00-000833,007-002-00-000834,007-002-00-000835,007-002-00-000836,007-002-00-000837,007-002-00-000838,007-002-00-000839,007-002-00-000840,007-002-00-000841,007-002-00-000842,007-002-00-000843,007-002-00-000844,007-002-00-000845,007-002-00-000846,007-002-00-000847,007-002-00-000848,007-002-00-000849,007-002-00-000850,007-002-00-000851,007-002-00-000852,007-002-00-000853,007-002-00-000854,007-002-00-000855,007-002-00-000856,007-002-00-000857,007-002-00-000858,007-002-00-000859,007-002-00-000860,007-002-00-000861,007-002-00-000862,007-002-00-000863,007-002-00-000864,007-002-00-000865,007-002-00-000866,007-002-00-000867,007-002-00-000868,007-002-00-000869,007-002-00-000870,007-002-00-000871,007-002-00-000872,007-002-00-000873,007-002-00-000874,007-002-00-000875,007-002-00-000876,007-002-00-000877,007-002-00-000878,007-002-00-000879,007-002-00-000880,007-002-00-000881,007-002-00-000882,007-002-00-000883,007-002-00-000884,007-002-00-000885,007-002-00-000886,007-002-00-000887,007-002-00-000888,007-002-00-000889,007-002-00-000890,007-002-00-000891,007-002-00-000892,007-002-00-000893");
		CONSTDEF[487] = convert(65, "standard_alarm_id", 8,
				"008-002-00-003072,008-002-00-005645,008-002-00-005739,008-002-00-035122,008-002-00-800003,008-002-00-800009,008-002-00-800011,008-002-00-800019,008-002-00-800117,008-002-00-800118,008-002-00-800119,008-002-00-800120,008-002-00-800121,008-002-00-800122,008-002-00-800124,008-002-00-800126,008-002-00-800128,008-002-00-800147,008-002-00-800148,008-002-00-800149,008-002-00-800151,008-002-00-800152,008-002-00-800153,008-002-00-800155,008-002-00-800157,008-002-00-800163,008-002-00-800164,008-002-00-800165,008-002-00-800166,008-002-00-800167,008-002-00-800169,008-002-00-800170,008-002-00-800171,008-002-00-800172,008-002-00-800173,008-002-00-800174,008-002-00-800175,008-002-00-800176,008-002-00-800177,008-002-00-800178,008-002-00-800199,008-002-00-800200,008-002-00-800207,008-002-00-800211,008-002-00-800212,008-002-00-800213,008-002-00-800215,008-002-00-800219,008-002-00-800220,008-002-00-800224,008-002-00-800225,008-002-00-800226,008-002-00-800227,008-002-00-800228,008-002-00-800229,008-002-00-800230,008-002-00-800231,008-002-00-800232,008-002-00-800233,008-002-00-800234,008-002-00-800235,008-002-00-800236,008-002-00-800237,008-002-00-800239,008-002-00-800240,008-002-00-800241,008-002-00-800242,008-002-00-800243,008-002-00-800244,008-002-00-800245,008-002-00-800246,008-002-00-800247,008-002-00-800248,008-002-00-800249,008-002-00-800250,008-002-00-800251,008-002-00-800252,008-002-00-800253,008-002-00-800254,008-002-00-800255,008-002-00-800256,008-002-00-800257,008-002-00-800258,008-002-00-800259,008-002-00-800261,008-002-00-800262,008-002-00-800263,008-002-00-800264,008-002-00-800266,008-002-00-800267,008-002-00-800268,008-002-00-800270,008-002-00-800271,008-002-00-800293,008-002-00-800294,008-002-00-800295,008-002-00-800296,008-002-00-800297,008-002-00-800298,008-002-00-800299,008-002-00-800300,008-002-00-800301,008-002-00-800302,008-002-00-800303,008-002-00-800304,008-002-00-800305,008-002-00-800306,008-002-00-800307,008-002-00-800308,008-002-00-800309,008-002-00-800310,008-002-00-800311,008-002-00-800312,008-002-00-800313,008-002-00-800314,008-002-00-800315,008-002-00-800316,008-002-00-800318,008-002-00-800319,008-002-00-800320,008-002-00-800321,008-002-00-800322,008-002-00-800323,008-002-00-800324,008-002-00-800325,008-002-00-800326,008-002-00-800327,008-002-00-800329,008-002-00-800330,008-002-00-800331,008-002-00-800332,008-002-00-800333,008-002-00-800334,008-002-00-800335,008-002-00-800336,008-002-00-800337,008-002-00-800338,008-002-00-800339,008-002-00-800340,008-002-00-800341,008-002-00-800343,008-002-00-800344,008-002-00-800345,008-002-00-800347,008-002-00-800348,008-002-00-800349,008-002-00-800350,008-002-00-800351,008-002-00-800352,008-002-00-800353,008-002-00-800354,008-002-00-800355,008-002-00-800356,008-002-00-800357,008-002-00-800358,008-002-00-800359,008-002-00-800360,008-002-00-800361,008-002-00-800362,008-002-00-800363,008-002-00-800364,008-002-00-800365,008-002-00-800366,008-002-00-800367,008-002-00-800368,008-002-00-800369,008-002-00-800370,008-002-00-800376,008-002-00-800377,008-002-00-800378,008-002-00-800379,008-002-00-800380,008-002-00-800382,008-002-00-800383,008-002-00-800385,008-002-00-800386,008-002-00-800387,008-002-00-800388,008-002-00-800389,008-002-00-800390,008-002-00-800391,008-002-00-800392,008-002-00-800393,008-002-00-800394,008-002-00-800395,008-002-00-800396,008-002-00-800397,008-002-00-800398,008-002-00-800399,008-002-00-800401,008-002-00-800402,008-002-00-800403,008-002-00-800404,008-002-00-800405,008-002-00-800406,008-002-00-800407,008-002-00-800408,008-002-00-800410,008-002-00-800411,008-002-00-800412");
		CONSTDEF[488] = convert(65, "standard_alarm_id", 8,
				"007-002-00-000109,007-002-00-000160,007-002-00-000344,007-002-00-000345,007-002-00-000379,007-002-00-000380,007-002-00-000404,007-002-00-000405,007-002-00-000475,007-002-00-000486,007-002-00-000493,007-002-00-000494,007-002-00-000495,007-002-00-000496,007-002-00-000525,007-002-00-000538,007-002-00-000541,007-002-00-000542,007-002-00-000543,007-002-00-000544,007-002-00-000545,007-002-00-000546,007-002-00-000547,007-002-00-000549,007-002-00-000575,007-002-00-000576,007-002-00-000577,007-002-00-000578,007-002-00-000579,007-002-00-000580,007-002-00-000583,007-002-00-000584,007-002-00-000586,007-002-00-000587,007-002-00-000588,007-002-00-000589,007-002-00-000593,007-002-00-000594,007-002-00-000595,007-002-00-000596,007-002-00-000598,007-002-00-000639,007-002-00-000640,007-002-00-000719,007-002-00-000720,007-002-00-000721,007-002-00-000722,007-002-00-000723,007-002-00-000724,007-002-00-000725,007-002-00-000726,007-002-00-000727,007-002-00-000728,007-002-00-000729,007-002-00-000730,007-002-00-000731,007-002-00-000732,007-002-00-000733,007-002-00-000734,007-002-00-000735,007-002-00-000736,007-002-00-000737,007-002-00-000738,007-002-00-000739,007-002-00-000740,007-002-00-000744,007-002-00-000793,008-002-00-800413,008-002-00-800414,008-002-00-800418,008-002-00-800419,008-002-00-800427,008-002-00-800428,008-002-00-800435,008-002-00-800436,008-002-00-800439,008-002-00-800440,008-002-00-800442,008-002-00-800443,008-002-00-800444,008-002-00-800459,008-002-00-800461,008-002-00-800462,008-002-00-800463,008-002-00-800464,008-002-00-800465,008-002-00-800466,008-002-00-800467,008-002-00-800468,008-002-00-800469,008-002-00-800470,008-002-00-800471,008-002-00-800472,008-002-00-800473,008-002-00-800474,008-002-00-800475,008-002-00-800476,008-002-00-800477,008-002-00-800478,008-002-00-800479,008-002-00-800480,008-002-00-800481,008-002-00-800482,008-002-00-800483,008-002-00-800484,008-002-00-800485,008-002-00-800486,008-002-00-800487,008-002-00-800488,008-002-00-800489,008-002-00-800490,008-002-00-800491,008-002-00-800492,008-002-00-800493,008-002-00-800494,008-002-00-800495,008-002-00-800496,008-002-00-800497,008-002-00-800498,008-002-00-800499,008-002-00-800500,008-002-00-800501,008-002-00-800502,008-002-00-800503,008-002-00-800504,008-002-00-800505,008-002-00-800506,008-002-00-800507,008-002-00-800508,008-002-00-800509,008-002-00-800510,008-002-00-800511,008-002-00-800512,008-002-00-800513,008-002-00-800514,008-002-00-800515,008-002-00-800516,008-002-00-800517,008-002-00-800518,008-002-00-800519,008-002-00-800520,008-002-00-800521,008-002-00-800523,008-002-00-800524,008-002-00-800525,008-002-00-800526,008-002-00-800527,008-002-00-800528,008-002-00-800529,008-002-00-800530,008-002-00-800531,008-002-00-800532,008-002-00-800533,008-002-00-800534,008-002-00-800535,008-002-00-800536,008-002-00-800537,008-002-00-800538,008-002-00-800539,008-002-00-800540,008-002-00-800541,008-002-00-800542,008-002-00-800543,008-002-00-800544,008-002-00-800545,008-002-00-800546,008-002-00-800547,008-002-00-800548,008-002-00-800549,008-002-00-800550,008-002-00-800551,008-002-00-800552,008-002-00-800553,008-002-00-800554,008-002-00-800555,008-002-00-800556,008-002-00-800557,008-002-00-800558,008-002-00-800559,008-002-00-800560,008-002-00-800561,008-002-00-800562,008-002-00-800563,008-002-00-800564,008-002-00-800565,008-002-00-800566,008-002-00-800567,008-002-00-800568,008-002-00-800569,008-002-00-800570,008-002-00-800571,008-002-00-800572,008-002-00-800573,008-002-00-800574,008-002-00-800575,008-002-00-800576,008-002-00-800577,008-002-00-800578,008-002-00-800579,008-002-00-800580,008-002-00-800581,008-002-00-800582,008-002-00-800583,008-002-00-800584,008-002-00-800585,008-002-00-800586,008-002-00-800587,008-002-00-800588,008-002-00-800589,008-002-00-800590,008-002-00-800591,008-002-00-800592,008-002-00-800593,008-002-00-800594");
		CONSTDEF[489] = convert(65, "standard_alarm_id", 8,
				"007-002-00-000102,007-002-00-000123,007-002-00-000125,007-002-00-000126,007-002-00-000127,007-002-00-000135,007-002-00-000136,007-002-00-000138,007-002-00-000139,007-002-00-000150,007-002-00-000213,007-002-00-000214,007-002-00-000215,007-002-00-000216,007-002-00-000220,007-002-00-000359,007-002-00-000360,007-002-00-000361,007-002-00-000385,007-002-00-000400,007-002-00-000407,007-002-00-000408,007-002-00-000409,007-002-00-000410,007-002-00-000412,007-002-00-000413,007-002-00-000414,007-002-00-000415,007-002-00-000417,007-002-00-000418,007-002-00-000421,007-002-00-000422,007-002-00-000423,007-002-00-000424,007-002-00-000425,007-002-00-000426,007-002-00-000427,007-002-00-000428,007-002-00-000429,007-002-00-000430,007-002-00-000431,007-002-00-000433,007-002-00-000434,007-002-00-000435,007-002-00-000436,007-002-00-000437,007-002-00-000438,007-002-00-000441,007-002-00-000442,007-002-00-000443,007-002-00-000444,007-002-00-000445,007-002-00-000446,007-002-00-000447,007-002-00-000448,007-002-00-000449,007-002-00-000450,007-002-00-000451,007-002-00-000452,007-002-00-000453,007-002-00-000454,007-002-00-000455,007-002-00-000456,007-002-00-000457,007-002-00-000458,007-002-00-000459,007-002-00-000460,007-002-00-000461,007-002-00-000462,007-002-00-000463,007-002-00-000464,007-002-00-000465,007-002-00-000466,007-002-00-000467,007-002-00-000468,007-002-00-000469,007-002-00-000470,007-002-00-000478,007-002-00-000479,007-002-00-000480,007-002-00-000481,007-002-00-000485,007-002-00-000488,007-002-00-000489,007-002-00-000490,007-002-00-000491,007-002-00-000492,007-002-00-000498,007-002-00-000499,007-002-00-000500,007-002-00-000501,007-002-00-000503,007-002-00-000504,007-002-00-000505,007-002-00-000506,007-002-00-000507,007-002-00-000508,007-002-00-000509,007-002-00-000510,007-002-00-000511,007-002-00-000512,007-002-00-000513,007-002-00-000514,007-002-00-000515,007-002-00-000516,007-002-00-000517,007-002-00-000518,007-002-00-000523,007-002-00-000529,007-002-00-000530,007-002-00-000531,007-002-00-000532,007-002-00-000537,007-002-00-000550,007-002-00-000551,007-002-00-000552,007-002-00-000553,007-002-00-000554,007-002-00-000555,007-002-00-000556,007-002-00-000604,007-002-00-000627,007-002-00-000628,007-002-00-000629,007-002-00-000630,007-002-00-000631,007-002-00-000632,007-002-00-000633,007-002-00-000634,007-002-00-000635,007-002-00-000636,007-002-00-000637,007-002-00-000638,007-002-00-000700,007-002-00-000701,007-002-00-000702,007-002-00-000703,007-002-00-000704,007-002-00-000705,007-002-00-000706,007-002-00-000707,007-002-00-000708,007-002-00-000709,007-002-00-000710,007-002-00-000711,007-002-00-000712,007-002-00-000713,007-002-00-000714,007-002-00-000715,007-002-00-000716,007-002-00-000717,007-002-00-000741,007-002-00-000742,007-002-00-000743,007-002-00-000745,007-002-00-000746,007-002-00-000747,007-002-00-000748,007-002-00-000749,007-002-00-000750,007-002-00-000751,007-002-00-000752,007-002-00-000753,007-002-00-000754,007-002-00-000755,007-002-00-000756,007-002-00-000757,007-002-00-000758,007-002-00-000759,007-002-00-000760,007-002-00-000761,007-002-00-000762,007-002-00-000763,007-002-00-000764,007-002-00-000765,007-002-00-000766,007-002-00-000767,007-002-00-000768,007-002-00-000769,007-002-00-000770,007-002-00-000771,007-002-00-000772,007-002-00-000773,007-002-00-000774,007-002-00-000775,007-002-00-000776,007-002-00-000777,007-002-00-000778,007-002-00-000779,007-002-00-000780,007-002-00-000781,007-002-00-000782,007-002-00-000783,007-002-00-000784,007-002-00-000785,007-002-00-000786,007-002-00-000787,007-002-00-000788,007-002-00-000789,007-002-00-000790,007-002-00-000791,007-002-00-000792,007-002-00-000794,007-002-00-000795,007-002-00-000796,007-002-00-000797,007-002-00-000798,007-002-00-000799,007-002-00-000800,007-002-00-000801,007-002-00-000802,007-002-00-000803,007-002-00-000804,007-002-00-000805,007-002-00-000806,007-002-00-000807");
		CONSTDEF[496] = convert(509, "title_text", 3,
				"BIP8误码超过门限告警|Crc错误在设定时间内高于设定告警个数告警|DownNetwork interface告警超时|LDP虚拟隧道Down|LSP(行同步脉冲)DOWN|SDH错误在设定时间内高于设定告警个数|Sdh错误在设定时间内高于设定告警个数告警|Symbol错误在设定时间内高于设定告警个数告警|[衍生告警]Down Network interface告警超时|bgpBackwardTransition|hwEntityRemove|hwIfMonitorCrcErrorRising|hwIfMonitorSymbolErrorRising|hwMplsExtTunnelDown|hwMplsTunnelPrimaryDown|isisAuthenticationTypeFailure|isisLSPErrorDetected|jnxLdpSesDown|mplsLspInfoChange|mplsLspInfoDown|mplsTunnelDown|信令路径断|可变动单元模块被移出|可更换单元下线告警|可更换单元断电|可替换单元出现故障|底板的电力供应系统发生故障|底板的降温风扇发生故障|底板组件发生冗余切换告警|热启动:代理进程对自己重新初始化|物理实体发生复位|补丁包安装失败告警|远端故障告警");
		CONSTDEF[497] = convert(509, "title_text", 3,
				"BIP8误码超过门限告警|Crc错误在设定时间内高于设定告警个数告警|DownNetwork interface告警超时|LDP虚拟隧道Down|LSP(行同步脉冲)DOWN|SDH错误在设定时间内高于设定告警个数|Sdh错误在设定时间内高于设定告警个数告警|Symbol错误在设定时间内高于设定告警个数告警|[衍生告警]Down Network interface告警超时|bgpBackwardTransition|hwEntityRemove|hwIfMonitorCrcErrorRising|hwIfMonitorSymbolErrorRising|hwMplsExtTunnelDown|hwMplsTunnelPrimaryDown|jnxLdpSesDown|mplsLspInfoChange|mplsLspInfoDown|mplsTunnelDown|信令路径断|可变动单元模块被移出|可更换单元下线告警|可更换单元断电|可替换单元出现故障|底板的电力供应系统发生故障|底板的降温风扇发生故障|底板组件发生冗余切换告警|热启动:代理进程对自己重新初始化|物理实体发生复位|远端故障告警");
		CONSTDEF[502] = convert(509, "title_text", 3, "一干软交换:性能指标阈值告警(紧急)");
		CONSTDEF[503] = convert(65, "standard_alarm_id", 8, "007-007-00-800404");
		CONSTDEF[505] = convert(512, "alarm_unit", 3, "有限公司长长中继一期|有限公司长长中继三期|有限公司长长中继四期.*有限公司长长中继五期");
		CONSTDEF[506] = convert(1200006, "network_type", 4, "1003,2003");
		CONSTDEF[507] = convert(1200009, "group_id", 4, "1054461618");
		CONSTDEF[508] = convert(509, "title_text", 3, "CPW_OTU_TEL_PATHMIS");
		CONSTDEF[509] = convert(1200008, "ems_id", 8, "JT-U2000-39-P,JT-U2000-42-P");
		CONSTDEF[510] = convert(1200007, "network_type_top", 4, "5");
		CONSTDEF[511] = convert(65, "standard_alarm_id", 8,
				"800-011-04-000003,800-011-04-000004,800-103-04-000009,800-103-04-000010");
		CONSTDEF[512] = convert(13, "alarm_title", 5, "15133843,15133951,3660");
		CONSTDEF[513] = convert(509, "title_text", 3, "IS邻");
		CONSTDEF[514] = convert(46, "alarm_source", 3, "大比武|比武-数据网a");
		CONSTDEF[515] = convert(509, "title_text", 3, "ping无响");
		CONSTDEF[516] = convert(5, "alarm_text", 3, "05368_DST");
		CONSTDEF[517] = convert(22, "province_id", 4, "30");
		CONSTDEF[518] = convert(65, "standard_alarm_id", 8,
				"008,008-247-00-800005,008-247-00-800016,008-247-00-800019,008-247-00-800030,008-247-00-800033,008-247-00-800037,008-247-00-800040,008-247-00-800043,008-247-00-800046,008-247-00-800050,008-247-00-800051,008-247-00-800052,008-247-00-800053,008-247-00-800056,008-247-00-800058,008-247-00-800060,008-247-00-800062,008-247-00-800067,008-247-00-800072,008-247-00-800073,008-247-00-800080,008-249-00-800001,008-249-00-800002,008-249-00-800003,008-249-00-800009,008-249-00-800010,008-249-00-800012,008-249-00-800014,008-249-00-800016,008-249-00-800020,008-249-00-800022,008-249-00-800025,008-249-00-800029,008-249-00-800037,008-249-00-800038,008-249-00-800040,008-249-00-800046,008-249-00-800049,008-249-00-800053,008-249-00-800059,008-249-00-800063,008-249-00-800070,008-249-00-800081,008-249-00-800082,008-249-00-800085,008-249-00-800086,008-249-00-800092,008-249-00-800100,008-249-00-800110,008-249-00-800111,008-249-00-800112,008-249-00-800115,008-249-00-800116,008-249-00-800117,008-249-00-800118,008-249-00-800119,008-249-00-800120,008-249-00-800121,008-249-00-800122,008-249-00-800123,008-249-00-800124,008-249-00-800126,008-249-00-800130,008-249-00-800135,008-249-00-800151,008-249-00-800158,008-249-00-800163,008-249-00-800164,008-249-00-800165,008-249-00-800199,008-249-00-800201,008-249-00-800207,008-249-00-800226,008-249-00-800227,008-249-00-800228,008-249-00-800229,008-249-00-800230,008-249-00-800231,008-249-00-800232,008-249-00-800233,008-249-00-800234,008-249-00-800235,008-249-00-800236,008-249-00-800237,008-249-00-800238,008-249-00-800239,008-249-00-800240,008-249-00-800241,008-249-00-800243,008-249-00-800245,008-249-00-800247,008-249-00-800249,008-249-00-800250,008-249-00-800251,008-249-00-800252,008-249-00-800253,008-249-00-800261,008-249-00-800262,008-249-00-800263,008-249-00-800264,008-249-00-800265,008-249-00-800266,008-249-00-800267,008-249-00-800268,008-249-00-800270,008-249-00-800274,008-249-00-800275,008-249-00-800277,008-249-00-800278,008-249-00-800287,008-249-00-800300,008-249-00-800301,008-249-00-800302,008-249-00-800303,008-249-00-800310,008-249-00-800311,008-249-00-800312,008-249-00-800313,008-249-00-800320,008-249-00-800325,008-249-00-800330,008-249-00-800333,008-249-00-800334,008-249-00-800336,008-249-00-800339,008-249-00-800340,008-249-00-800341,008-249-00-800342,008-249-00-800343,008-249-00-800344,008-249-00-800347,008-249-00-800348,008-249-00-800349,008-249-00-800350,008-249-00-800351,008-249-00-800352,008-249-00-800356,008-249-00-800357,008-249-00-800359,008-252-00-800008,008-252-00-800009,008-252-00-800010,008-252-00-800011,008-252-00-800012,008-252-00-800013,008-252-00-800018,008-252-00-800020,008-252-00-800026,008-252-00-800043,008-252-00-800045,008-252-00-800047,008-252-00-800049,008-252-00-800055,008-252-00-800057,008-252-00-800059,008-252-00-800060,008-252-00-800069,008-252-00-800081,008-252-00-800082,008-252-00-800083,008-252-00-800089,008-252-00-800090,008-252-00-800091,008-252-00-800094,008-252-00-800095,008-252-00-800097,008-252-00-800098,008-252-00-800115,008-252-00-800116,008-252-00-800119,008-252-00-800122,008-252-00-800123,008-252-00-800126,008-252-00-800127,008-252-00-800128,008-252-00-800129,008-252-00-800130,008-252-00-800131,008-252-00-800132,008-252-00-800133,008-252-00-800134,008-252-00-800135,008-252-00-800136,008-252-00-800137,008-252-00-800138,008-252-00-800139,008-252-00-800140,008-252-00-800144,008-252-00-800145,008-252-00-800146,008-252-00-800157,008-252-00-800158,008-252-00-800171,008-252-00-800172,008-252-00-800181,008-252-00-800184,008-252-00-800188,008-252-00-800193,008-252-00-800195,008-252-00-800198,008-252-00-800199,008-252-00-800200,008-252-00-800201,008-252-00-800202,008-252-00-800203,008-252-00-800204,008-252-00-800206,008-252-00-800207,008-252-00-800210,008-252-00-800211,008-252-00-800212,008-252-00-800215,008-252-00-800218,008-252-00-800222,008-252-00-800228,008-252-00-800232,008-252-00-800236,008-252-00-800243,008-252-00-800256,008-252-00-800262,008-252-00-800267,008-252-00-800268");
		CONSTDEF[519] = convert(22, "province_id", 4, "4");
		CONSTDEF[520] = convert(101103, "gcss_client_level", 4, "1,2,3,4");
		CONSTDEF[521] = convert(1200009, "group_id", 4, "384362122");
		CONSTDEF[522] = convert(31, "city_id", 4, "-1865564153");
		CONSTDEF[523] = convert(1200007, "network_type_top", 4, "1,2,3,4,5");
		CONSTDEF[524] = convert(13, "alarm_title", 5, "15133133,15133178,15133184,15133259");
		CONSTDEF[525] = convert(509, "title_text", 3, "非法地址");
		CONSTDEF[526] = convert(509, "title_text", 3, "BD_STATUS|BIOS_STATUS|HDLC_FAIL");
		CONSTDEF[527] = convert(512, "alarm_unit", 3, "有限公司长长中继一期|有限公司长长中继三期|有限公司长长中继五期|有限公司长长中继四期");
		CONSTDEF[528] = convert(13, "alarm_title", 5, "1861,5016738,5016740,5016744,5016745,5016746,5016747");
		CONSTDEF[529] = convert(509, "title_text", 3, "OSPF Down|OSPF邻居状态改变");
		CONSTDEF[530] = convert(65, "standard_alarm_id", 8, "010-103-00-800541");
		CONSTDEF[531] = convert(22, "province_id", 4, "15");
		CONSTDEF[532] = convert(13, "alarm_title", 5,
				"1112,1378,1431,1818,1915,1967,2102,3124,41938,41952,41953,41959,41961,41964,41966,41972,41974,41975,41980,42005,42006,42008,42009,42010,42011,42013,42014,42015,42122,4903,4905,4911,4932");
		CONSTDEF[533] = convert(509, "title_text", 3, "收发消息不平衡");
		CONSTDEF[534] = convert(65, "standard_alarm_id", 8,
				"007-011-00-803084,007-103-00-029254,008-011-03-830656,008-024-00-800649,010-012-00-007603,010-012-00-007604,010-012-00-007604,010-103-00-800028,010-103-00-800276,010-103-00-800285,010-103-00-800615,026-103-00-1021000,026-103-00-1021001,026-103-00-1021002,026-103-00-1028000,026-103-00-1031000");
		CONSTDEF[535] = convert(65, "standard_alarm_id", 8,
				"008-247-00-800001,008-247-00-800002,008-247-00-800003,008-247-00-800004,008-247-00-800006,008-247-00-800007,008-247-00-800008,008-247-00-800012,008-247-00-800013,008-247-00-800017,008-247-00-800020,008-247-00-800021,008-247-00-800022,008-247-00-800023,008-247-00-800024,008-247-00-800028,008-247-00-800031,008-247-00-800035,008-247-00-800038,008-247-00-800065,008-247-00-800066,008-247-00-800084,008-247-00-800085,008-247-00-800096,008-247-00-800098,008-247-00-800120,008-247-00-800122,008-247-00-800123,008-247-00-800124,008-247-00-800129,008-247-00-800131,008-248-00-800019,008-248-00-800041,008-248-00-800050,008-248-00-800051,008-249-00-800011,008-249-00-800015,008-249-00-800027,008-249-00-800030,008-249-00-800032,008-249-00-800033,008-249-00-800034,008-249-00-800035,008-249-00-800036,008-249-00-800041,008-249-00-800044,008-249-00-800057,008-249-00-800061,008-249-00-800069,008-249-00-800072,008-249-00-800079,008-249-00-800084,008-249-00-800087,008-249-00-800088,008-249-00-800089,008-249-00-800090,008-249-00-800099,008-249-00-800101,008-249-00-800102,008-249-00-800105,008-249-00-800107,008-249-00-800108,008-249-00-800109,008-249-00-800113,008-249-00-800114,008-249-00-800125,008-249-00-800129,008-249-00-800136,008-249-00-800139,008-249-00-800149,008-249-00-800150,008-249-00-800154,008-249-00-800155,008-249-00-800156,008-249-00-800157,008-249-00-800160,008-249-00-800161,008-249-00-800279,008-249-00-800281,008-249-00-800290,008-249-00-800307,008-249-00-800315,008-251-00-800060,008-251-00-800062,008-251-00-800075,008-251-00-800108,008-251-00-800129,008-251-00-800134,008-251-00-800136,008-251-00-800138,008-251-00-800140,008-251-00-800142,008-251-00-800205,008-251-00-800209,008-251-00-800212,008-251-00-800216,008-251-00-800217,008-251-00-800220,008-251-00-800245,008-251-00-800246,008-251-00-800249,008-251-00-800250,008-251-00-800259,008-251-00-800261,008-251-00-800262,008-251-00-800275,008-251-00-800279,008-251-00-800283,008-251-00-800291,008-251-00-800294,008-251-00-800295,008-251-00-800297,008-252-00-800061,008-252-00-800063,008-252-00-800075,008-252-00-800112,008-252-00-800120,008-252-00-800142,008-252-00-800148,008-252-00-800150,008-252-00-800152,008-252-00-800154,008-252-00-800156,008-252-00-800213,008-252-00-800226,008-252-00-800230,008-252-00-800234,008-252-00-800242,008-252-00-800245,008-252-00-800247");
		CONSTDEF[536] = convert(1200007, "network_type_top", 4, "3,4");
		CONSTDEF[537] = convert(46, "alarm_source", 3, "省部接口上报|集团直采传输");
		CONSTDEF[538] = convert(1200007, "network_type_top", 4, "4,6");
		CONSTDEF[539] = convert(509, "title_text", 3, "退服");
		CONSTDEF[540] = convert(22, "province_id", 4,
				"1,10,11,12,13,14,15,16,17,18,19,2,20,21,22,23,24,25,26,27,28,29,3,30,34,4,5,6,7,8");
		CONSTDEF[541] = convert(65, "standard_alarm_id", 8,
				"007-008-00-800315,007-008-00-800316,007-008-00-800318,007-008-00-800319,007-008-00-800320,007-008-00-800321,007-008-00-800324,007-008-00-800329,007-008-00-800333,007-008-00-800334");
		CONSTDEF[542] = convert(22, "province_id", 4, "3,4,5,6,7");
		CONSTDEF[543] = convert(509, "title_text", 3, "\\\\[衍生告警\\\\]");
		CONSTDEF[544] = convert(101102, "gcss_client_name", 8, "\"\"");
		CONSTDEF[545] = convert(509, "title_text", 3,
				"因传输故障造成的路由不可达|因传输故障造成的链路不可用|因传输故障造成的链路组不可用|因软件模块故障造成的路由不可达|因软件模块故障造成的链路不可用|因软件模块故障造成的链路组不可用|服务器CPU负荷超门限|服务器上某个软件模块停止运行|服务器内存占用量超门限|服务器无法ssh登录|服务器硬盘占用超门限");
		CONSTDEF[546] = convert(509, "title_text", 3,
				"E1 on STU/ET16 card fault|M3UA destination entity is inaccessible|M3UA link failu|M3UA link failure|M3UA link fault|M3UA link set failu|M3UA link set failure|M3UA route is unavailable|M3UA route unavailable|Signaling link unavailable");
		CONSTDEF[547] = convert(65, "standard_alarm_id", 8,
				"001-109-00-800113,001-109-00-800615,004-109-00-110417,004-109-00-140507,004-109-00-171202,004-109-00-171203,004-109-00-181000,004-109-00-300806,007-109-00-001701,007-109-00-001817,007-109-00-002752,007-109-00-002758,007-109-00-013020,008-109-00-000148,008-109-00-000187,008-109-00-000377,008-109-01-000135,008-109-01-000259,008-109-01-000323,010-109-00-002064,010-109-00-002241,010-109-00-002703,010-109-00-003270,010-109-00-003295,010-109-00-003374");
		CONSTDEF[548] = convert(1200009, "group_id", 4, "-1149663814");
		CONSTDEF[549] = convert(1200009, "group_id", 4, "-1042387064");
		CONSTDEF[550] = convert(13, "alarm_title", 5, "42170,42171,42172,42173,42174,42175,42176,42177,42213,42216");
		CONSTDEF[551] = convert(46, "alarm_source", 3, "大比武|比武-传输网|比武-家宽|比武-数据网|比武-无线网|比武-突发事件|比武-集客");
		CONSTDEF[552] = convert(65, "standard_alarm_id", 8,
				"100-902-30-000001,100-902-30-000003,100-902-30-000004,100-902-30-000006,100-902-30-000009,100-902-30-000012,100-902-30-000013,100-902-30-000015,100-902-30-000018,100-902-30-000019,100-902-30-000020,100-902-30-000022,100-902-30-000023,100-902-30-000025,100-902-30-000028,100-902-30-000029,100-902-30-000031,100-902-30-000034,100-902-30-000035,100-902-30-000036,100-902-30-000038,100-902-30-000039,100-902-30-000041,100-902-30-000044,100-902-30-000045");
		CONSTDEF[553] = convert(509, "title_text", 3, "网元.*不可达");
		CONSTDEF[554] = convert(101105, "business_system", 8,
				"CMNET NETFLOW流量管理,MBBMS业务系统,PGM业务子系统,PIM,USSD,WEB网关业务系统-北京节点,WEB网关业务系统-广东节点,WLAN Radius/Portal业务,中央DSMP业务子系统,企业飞信系统,北京DM操作域系统,北京DM管理域系统,北京ENUM2重定向业务,北京ENUM重定向业务,北京Radius业务子系统,北京SharingX系统(TD),北京WAP主页推送平台系统,北京位置服务-AGPS((TD),北京国际彩信网关,北京国际短信网关,北京多媒体彩铃系统(TD),北京彩信内容适配业务,北京彩信网关1,北京彩信网关2,北京彩信网关3,北京彩信网关4,北京彩信网关5,北京彩信网关6,北京快讯系统(TD),北京手机邮箱系统,北京视频会议系统(TD),北京顶级DNS,北京飞信互通网关系统,北京骨干二华为彩信(TD),北京骨干华为彩信(TD),国漫综合业务平台系统,大众邮件代理网关,安徽省彩信业务系统,安徽省彩信业务系统,广东国际彩信网关,广东彩信网关1,广东彩信网关2,广东手机邮箱系统,广东顶级DNS,广州区域中兴彩信(TD),广州国际短信网关,彩信网关业务系统,彩信网关业务系统,数据网.业务承载网.彩信中心,数据网.业务承载网.彩信中心,春晚网关,视频共享AAA系统,集团客户行业网关A-M模块,集团客户行业网关A-彩信模块,集团客户行业网关A-短信模块,集团客户行业网关B-M模块,集团客户行业网关B-彩信模块,集团客户行业网关B-短信模块,集团彩信互通网关系统,集团网管自身系统");
		CONSTDEF[555] = convert(509, "title_text", 3, "衍生关联");
		CONSTDEF[556] = convert(6, "redefine_severity", 4, "1,2");
		CONSTDEF[557] = convert(65, "standard_alarm_id", 8,
				"008-244-00-800057,008-244-00-800060,008-244-00-800064,008-244-00-800067,008-244-00-800068,008-244-00-800113,008-244-00-800114,008-244-00-800115,008-244-00-800116,008-244-00-800117,008-244-00-800118,008-244-00-800119,008-244-00-800120,008-244-00-800121,008-244-00-800123,008-244-00-800124,008-244-00-800126,008-244-00-800130");
		CONSTDEF[558] = convert(65, "standard_alarm_id", 8,
				"800-103-01-000001,800-103-01-000002,800-103-04-000005,800-103-04-000006,800-103-04-000007,800-103-04-000008");
		CONSTDEF[559] = convert(46, "alarm_source", 3, "呼哈私有云|呼池私有云|哈池私有云");
		CONSTDEF[560] = convert(65, "standard_alarm_id", 8,
				"800-121-01-000003,800-121-01-000004,800-121-01-000005,800-121-01-000006");
		CONSTDEF[561] = convert(9, "object_class", 4, "2011");
	};

	private void functiondefine_0() {
		ff(0, 49, 0, true);
		ff(1, 81, 1, true);
		ff(2, 13, 2, true);
		ff(3, 516, 3, true);
		ff(4, 65, 4, true);
		ff(5, 509, 5, true);
		ff(6, 81, 6, true);
		ff(7, 1200008, 7, true);
		ff(8, 46, 8, true);
		ff(9, 516, 9, true);
		ff(10, 110701, 10, true);
		ff(11, 1200008, 11, true);
		ff(12, 11, 12, true);
		ff(13, 13, 13, true);
		ff(14, 51, 14, true);
		ff(15, 517, 15, true);
		ff(17, 13, 17, true);
		ff(16, 1200008, 16, true);
		ff(19, 65, 19, true);
		ff(18, 85, 18, true);
		ff(21, 11, 21, true);
		ff(20, 10, 20, true);
		ff(23, 510, 23, true);
		ff(22, 509, 22, false);
		ff(25, 1200009, 25, true);
		ff(24, 6, 24, true);
		ff(27, 509, 27, true);
		ff(26, 1200009, 26, true);
		ff(29, 11, 29, true);
		ff(28, 101104, 28, true);
		ff(31, 51, 31, true);
		ff(30, 85, 30, true);
		ff(34, 46, 34, true);
		ff(35, 1200006, 35, true);
		ff(32, 509, 32, true);
		ff(33, 65, 33, true);
		ff(38, 46, 38, true);
		ff(39, 1008, 39, true);
		ff(36, 10, 36, true);
		ff(37, 13, 37, true);
		ff(42, 101105, 42, true);
		ff(43, 509, 43, false);
		ff(40, 1200008, 40, true);
		ff(41, 509, 41, true);
		ff(46, 12, 46, true);
		ff(47, 509, 47, true);
		ff(44, 101105, 44, true);
		ff(45, 46, 45, true);
		ff(51, 22, 51, true);
		ff(50, 65, 50, true);
		ff(49, 12, 49, true);
		ff(48, 509, 48, false);
		ff(55, 89, 55, true);
		ff(54, 46, 54, true);
		ff(53, 11, 53, true);
		ff(52, 65, 52, true);
		ff(59, 51, 59, true);
		ff(58, 65, 58, true);
		ff(57, 46, 57, true);
		ff(56, 13, 56, true);
		ff(63, 46, 63, true);
		ff(62, 46, 62, true);
		ff(61, 9, 61, true);
		ff(60, 64, 60, false);
		ff(68, 22, 68, true);
		ff(69, 10, 69, true);
		ff(70, 13, 70, true);
		ff(71, 65, 71, true);
		ff(64, 10, 64, true);
		ff(65, 13, 65, true);
		ff(66, 89, 66, true);
		ff(67, 1200007, 67, true);
		ff(76, 10, 76, true);
		ff(77, 13, 77, true);
		ff(78, 46, 78, true);
		ff(79, 22, 79, true);
		ff(72, 65, 72, true);
		ff(73, 51, 73, true);
		ff(74, 517, 74, true);
		ff(75, 1200008, 75, true);
		ff(85, 516, 85, true);
		ff(84, 22, 84, true);
		ff(87, 11, 87, true);
		ff(86, 10, 86, true);
		ff(81, 512, 81, true);
		ff(80, 510, 80, true);
		ff(83, 13, 83, true);
		ff(82, 1200008, 82, true);
		ff(93, 22, 93, true);
		ff(92, 1200009, 92, true);
		ff(95, 51, 95, true);
		ff(94, 509, 94, true);
		ff(89, 46, 89, true);
		ff(88, 13, 88, true);
		ff(91, 46, 91, true);
		ff(90, 1008, 90, true);
		ff(102, 46, 102, true);
		ff(103, 11, 103, true);
		ff(100, 101106, 100, true);
		ff(101, 509, 101, true);
		ff(98, 1200007, 98, true);
		ff(99, 89, 99, true);
		ff(96, 9, 96, true);
		ff(97, 62, 97, true);
		ff(110, 1200009, 110, true);
		ff(111, 509, 111, true);
		ff(108, 22, 108, true);
		ff(109, 101104, 109, true);
		ff(106, 22, 106, true);
		ff(107, 85, 107, true);
		ff(104, 13, 104, true);
		ff(105, 81, 105, true);
		ff(119, 13, 119, true);
		ff(118, 51, 118, true);
		ff(117, 13, 117, true);
		ff(116, 13, 116, true);
		ff(115, 51, 115, true);
		ff(114, 13, 114, true);
		ff(113, 51, 113, true);
		ff(112, 65, 112, true);
		ff(127, 509, 127, true);
		ff(126, 509, 126, true);
		ff(125, 509, 125, true);
		ff(124, 509, 124, true);
		ff(123, 101105, 123, true);
		ff(122, 509, 122, true);
		ff(121, 13, 121, true);
		ff(120, 10, 120, true);
		ff(137, 13, 137, true);
		ff(136, 10, 136, true);
		ff(139, 10, 139, true);
		ff(138, 509, 138, true);
		ff(141, 1200006, 141, true);
		ff(140, 13, 140, true);
		ff(143, 1200008, 143, true);
		ff(142, 509, 142, true);
		ff(129, 22, 129, true);
		ff(128, 101105, 128, true);
		ff(131, 13, 131, true);
		ff(130, 509, 130, true);
		ff(133, 51, 133, true);
		ff(132, 13, 132, true);
		ff(135, 51, 135, true);
		ff(134, 101103, 134, true);
		ff(152, 86, 152, true);
		ff(153, 54, 153, true);
		ff(154, 9, 154, true);
		ff(155, 81, 155, true);
		ff(156, 1200007, 156, true);
		ff(157, 85, 157, true);
		ff(158, 51, 158, true);
		ff(159, 65, 159, true);
		ff(144, 46, 144, true);
		ff(145, 65, 145, true);
		ff(146, 51, 146, false);
		ff(147, 1200007, 147, true);
		ff(148, 65, 148, true);
		ff(149, 22, 149, true);
		ff(150, 30, 150, false);
		ff(151, 65, 151, true);
		ff(171, 51, 171, true);
		ff(170, 509, 170, true);
		ff(169, 509, 169, true);
		ff(168, 509, 168, true);
		ff(175, 13, 175, true);
		ff(174, 5, 174, false);
		ff(173, 509, 173, true);
		ff(172, 509, 172, true);
		ff(163, 509, 163, true);
		ff(162, 13, 162, true);
		ff(161, 509, 161, true);
		ff(160, 517, 160, false);
		ff(167, 509, 167, true);
		ff(166, 509, 166, true);
		ff(165, 5, 165, true);
		ff(164, 81, 164, true);
		ff(186, 13, 186, true);
		ff(187, 13, 187, true);
		ff(184, 65, 184, true);
		ff(185, 13, 185, true);
		ff(190, 5, 190, true);
		ff(191, 101105, 191, true);
		ff(188, 509, 188, true);
		ff(189, 509, 189, true);
		ff(178, 13, 178, true);
		ff(179, 46, 179, true);
		ff(176, 101105, 176, true);
		ff(177, 81, 177, true);
		ff(182, 65, 182, true);
		ff(183, 65, 183, true);
		ff(180, 509, 180, true);
		ff(181, 51, 181, true);
		ff(205, 5, 205, true);
		ff(204, 5, 204, true);
		ff(207, 5, 207, true);
		ff(206, 5, 206, true);
		ff(201, 5, 201, true);
		ff(200, 5, 200, true);
		ff(203, 5, 203, true);
		ff(202, 5, 202, true);
		ff(197, 5, 197, true);
		ff(196, 5, 196, true);
		ff(199, 5, 199, true);
		ff(198, 5, 198, true);
		ff(193, 5, 193, true);
		ff(192, 5, 192, true);
		ff(195, 5, 195, true);
		ff(194, 5, 194, true);
		ff(220, 5, 220, true);
		ff(221, 5, 221, true);
		ff(222, 5, 222, true);
		ff(223, 5, 223, true);
		ff(216, 5, 216, true);
		ff(217, 5, 217, true);
		ff(218, 5, 218, true);
		ff(219, 5, 219, true);
		ff(212, 5, 212, true);
		ff(213, 5, 213, true);
		ff(214, 5, 214, true);
		ff(215, 5, 215, true);
		ff(208, 5, 208, true);
		ff(209, 5, 209, true);
		ff(210, 5, 210, true);
		ff(211, 5, 211, true);
		ff(239, 5, 239, true);
		ff(238, 5, 238, true);
		ff(237, 5, 237, true);
		ff(236, 5, 236, true);
		ff(235, 5, 235, true);
		ff(234, 5, 234, true);
		ff(233, 5, 233, true);
		ff(232, 5, 232, true);
		ff(231, 5, 231, true);
		ff(230, 5, 230, true);
		ff(229, 5, 229, true);
		ff(228, 5, 228, true);
		ff(227, 5, 227, true);
		ff(226, 5, 226, true);
		ff(225, 5, 225, true);
		ff(224, 5, 224, true);
		ff(254, 509, 254, true);
		ff(255, 46, 255, true);
		ff(252, 5, 252, true);
		ff(253, 101104, 253, true);
		ff(250, 5, 250, true);
		ff(251, 5, 251, true);
		ff(248, 5, 248, true);
		ff(249, 5, 249, true);
		ff(246, 5, 246, true);
		ff(247, 5, 247, true);
		ff(244, 5, 244, true);
		ff(245, 5, 245, true);
		ff(242, 5, 242, true);
		ff(243, 5, 243, true);
		ff(240, 5, 240, true);
		ff(241, 5, 241, true);
		ff(275, 10, 275, true);
		ff(274, 13, 274, true);
		ff(273, 509, 273, true);
		ff(272, 65, 272, true);
		ff(279, 509, 279, true);
		ff(278, 51, 278, true);
		ff(277, 65, 277, true);
		ff(276, 13, 276, true);
		ff(283, 65, 283, true);
		ff(282, 65, 282, true);
		ff(281, 65, 281, true);
		ff(280, 509, 280, true);
		ff(287, 65, 287, true);
		ff(286, 46, 286, true);
		ff(285, 51, 285, true);
		ff(284, 13, 284, true);
		ff(258, 65, 258, true);
		ff(259, 509, 259, true);
		ff(256, 22, 256, true);
		ff(257, 65, 257, true);
		ff(262, 85, 262, true);
		ff(263, 46, 263, true);
		ff(260, 509, 260, true);
		ff(261, 1200007, 261, true);
		ff(266, 65, 266, true);
		ff(267, 101105, 267, true);
		ff(264, 51, 264, true);
		ff(265, 51, 265, true);
		ff(270, 5, 270, true);
		ff(271, 13, 271, true);
		ff(268, 13, 268, true);
		ff(269, 13, 269, true);
		ff(305, 65, 305, true);
		ff(304, 65, 304, true);
		ff(307, 5, 307, true);
		ff(306, 509, 306, true);
		ff(309, 5, 309, true);
		ff(308, 5, 308, true);
		ff(311, 5, 311, true);
		ff(310, 5, 310, true);
		ff(313, 5, 313, true);
		ff(312, 5, 312, true);
		ff(315, 5, 315, true);
		ff(314, 5, 314, true);
		ff(317, 5, 317, true);
		ff(316, 5, 316, true);
		ff(319, 5, 319, true);
		ff(318, 5, 318, true);
		ff(288, 65, 288, true);
		ff(289, 509, 289, true);
		ff(290, 101105, 290, true);
		ff(291, 65, 291, true);
		ff(292, 101105, 292, true);
		ff(293, 12, 293, true);
		ff(294, 65, 294, true);
		ff(295, 101105, 295, true);
		ff(296, 51, 296, true);
		ff(297, 65, 297, true);
		ff(298, 51, 298, true);
		ff(299, 65, 299, true);
		ff(300, 65, 300, true);
		ff(301, 65, 301, true);
		ff(302, 65, 302, true);
		ff(303, 46, 303, true);
		ff(343, 5, 343, true);
		ff(342, 5, 342, true);
		ff(341, 5, 341, true);
		ff(340, 5, 340, true);
		ff(339, 5, 339, true);
		ff(338, 5, 338, true);
		ff(337, 5, 337, true);
		ff(336, 5, 336, true);
		ff(351, 5, 351, true);
		ff(350, 5, 350, true);
		ff(349, 5, 349, true);
		ff(348, 5, 348, true);
		ff(347, 5, 347, true);
		ff(346, 5, 346, true);
		ff(345, 5, 345, true);
		ff(344, 5, 344, true);
		ff(326, 5, 326, true);
		ff(327, 5, 327, true);
		ff(324, 5, 324, true);
		ff(325, 5, 325, true);
		ff(322, 509, 322, true);
		ff(323, 5, 323, true);
		ff(320, 5, 320, true);
		ff(321, 5, 321, true);
		ff(334, 5, 334, true);
		ff(335, 5, 335, true);
		ff(332, 5, 332, true);
		ff(333, 5, 333, true);
		ff(330, 5, 330, true);
		ff(331, 5, 331, true);
		ff(328, 5, 328, true);
		ff(329, 5, 329, true);
		ff(373, 5, 373, true);
		ff(372, 509, 372, true);
		ff(375, 5, 375, true);
		ff(374, 5, 374, true);
		ff(369, 65, 369, true);
		ff(368, 65, 368, true);
		ff(371, 65, 371, true);
		ff(370, 1008, 370, true);
		ff(381, 101105, 381, true);
		ff(380, 51, 380, true);
		ff(383, 509, 383, true);
		ff(382, 1200006, 382, true);
		ff(377, 5, 377, true);
		ff(376, 5, 376, true);
		ff(379, 5, 379, true);
		ff(378, 5, 378, true);
		ff(356, 5, 356, true);
		ff(357, 5, 357, true);
		ff(358, 1200009, 358, true);
		ff(359, 13, 359, true);
		ff(352, 5, 352, true);
		ff(353, 5, 353, true);
		ff(354, 5, 354, true);
		ff(355, 5, 355, true);
		ff(364, 65, 364, true);
		ff(365, 509, 365, true);
		ff(366, 8, 366, true);
		ff(367, 101102, 367, true);
		ff(360, 65, 360, true);
		ff(361, 1200009, 361, true);
		ff(362, 22, 362, true);
		ff(363, 65, 363, true);
		ff(410, 51, 410, true);
		ff(411, 65, 411, true);
		ff(408, 1200007, 408, true);
		ff(409, 92, 409, false);
		ff(414, 81, 414, true);
		ff(415, 11, 415, true);
		ff(412, 509, 412, true);
		ff(413, 101105, 413, true);
		ff(402, 65, 402, true);
		ff(403, 46, 403, true);
		ff(400, 101105, 400, true);
		ff(401, 65, 401, true);
		ff(406, 65, 406, true);
		ff(407, 65, 407, true);
		ff(404, 10, 404, true);
		ff(405, 13, 405, true);
		ff(395, 46, 395, true);
		ff(394, 22, 394, true);
		ff(393, 1200008, 393, true);
		ff(392, 517, 392, true);
		ff(399, 65, 399, true);
		ff(398, 65, 398, true);
		ff(397, 514, 397, true);
		ff(396, 509, 396, true);
		ff(387, 89, 387, true);
		ff(386, 46, 386, true);
		ff(385, 1008, 385, true);
		ff(384, 1200008, 384, true);
		ff(391, 509, 391, true);
		ff(390, 49, 390, true);
		ff(389, 65, 389, true);
		ff(388, 13, 388, true);
		ff(440, 46, 440, true);
		ff(441, 509, 441, true);
		ff(442, 65, 442, true);
		ff(443, 22, 443, true);
		ff(444, 65, 444, true);
		ff(445, 22, 445, true);
		ff(446, 1200009, 446, true);
		ff(447, 509, 447, true);
		ff(432, 5, 432, true);
		ff(433, 5, 433, true);
		ff(434, 22, 434, true);
		ff(435, 5, 435, true);
		ff(436, 101105, 436, true);
		ff(437, 509, 437, true);
		ff(438, 101105, 438, true);
		ff(439, 13, 439, true);
		ff(425, 65, 425, true);
		ff(424, 110701, 424, true);
		ff(427, 65, 427, true);
		ff(426, 65, 426, true);
		ff(429, 5, 429, true);
		ff(428, 1200009, 428, true);
		ff(431, 5, 431, true);
		ff(430, 5, 430, true);
		ff(417, 65, 417, true);
		ff(416, 65, 416, true);
		ff(419, 9, 419, true);
		ff(418, 14, 418, true);
		ff(421, 13, 421, true);
		ff(420, 65, 420, true);
		ff(423, 1200009, 423, true);
		ff(422, 65, 422, true);
		ff(478, 46, 478, true);
		ff(479, 49, 479, true);
		ff(476, 6, 476, true);
		ff(477, 5, 477, false);
		ff(474, 101105, 474, true);
		ff(475, 81, 475, true);
		ff(472, 65, 472, true);
		ff(473, 509, 473, true);
		ff(470, 517, 470, true);
		ff(471, 1200008, 471, true);
		ff(468, 65, 468, true);
		ff(469, 65, 469, true);
		ff(466, 100401, 466, true);
		ff(467, 22, 467, true);
		ff(464, 51, 464, true);
		ff(465, 65, 465, true);
		ff(463, 1200009, 463, true);
		ff(462, 65, 462, true);
		ff(461, 13, 461, true);
		ff(460, 1200008, 460, true);
		ff(459, 517, 459, true);
		ff(458, 1200008, 458, true);
		ff(457, 517, 457, true);
		ff(456, 512, 456, true);
		ff(455, 1200008, 455, true);
		ff(454, 13, 454, true);
		ff(453, 1200008, 453, true);
		ff(452, 517, 452, true);
		ff(451, 1200008, 451, true);
		ff(450, 519, 450, true);
		ff(449, 509, 449, true);
		ff(448, 46, 448, true);
		ff(508, 509, 508, false);
		ff(509, 1200008, 509, true);
		ff(510, 1200007, 510, true);
		ff(511, 65, 511, true);
		ff(504, 46, 504, true);
		ff(505, 512, 505, true);
		ff(506, 1200006, 506, true);
		ff(507, 1200009, 507, true);
		ff(500, 509, 500, true);
		ff(501, 509, 501, true);
		ff(502, 509, 502, true);
		ff(503, 65, 503, true);
		ff(496, 509, 496, false);
		ff(497, 509, 497, false);
		ff(498, 509, 498, false);
		ff(499, 6, 499, true);
		ff(493, 51, 493, false);
		ff(492, 1200007, 492, true);
		ff(495, 65, 495, true);
		ff(494, 509, 494, true);
		ff(489, 65, 489, true);
		ff(488, 65, 488, true);
		ff(491, 30, 491, true);
		ff(490, 9, 490, true);
		ff(485, 46, 485, true);
		ff(484, 1200009, 484, true);
		ff(487, 65, 487, true);
		ff(486, 65, 486, true);
		ff(481, 22, 481, true);
		ff(480, 46, 480, true);
		ff(483, 65, 483, true);
		ff(482, 509, 482, true);
		ff(550, 13, 550, true);
		ff(551, 46, 551, true);
		ff(548, 1200009, 548, true);
		ff(549, 1200009, 549, true);
		ff(546, 509, 546, true);
		ff(547, 65, 547, true);
		ff(544, 101102, 544, true);
		ff(545, 509, 545, true);
		ff(558, 65, 558, true);
		ff(559, 46, 559, true);
		ff(556, 6, 556, true);
		ff(557, 65, 557, true);
		ff(554, 101105, 554, true);
		ff(555, 509, 555, true);
		ff(552, 65, 552, true);
		ff(553, 509, 553, true);
		ff(561, 9, 561, true);
		ff(560, 65, 560, true);
		ff(516, 5, 516, true);
		ff(517, 22, 517, true);
		ff(518, 65, 518, true);
		ff(519, 22, 519, true);
		ff(512, 13, 512, true);
		ff(513, 509, 513, true);
		ff(514, 46, 514, true);
		ff(515, 509, 515, true);
		ff(524, 13, 524, true);
		ff(525, 509, 525, true);
		ff(526, 509, 526, true);
		ff(527, 512, 527, true);
		ff(520, 101103, 520, true);
		ff(521, 1200009, 521, true);
		ff(522, 31, 522, true);
		ff(523, 1200007, 523, true);
		ff(533, 509, 533, true);
		ff(532, 13, 532, true);
		ff(535, 65, 535, true);
		ff(534, 65, 534, true);
		ff(529, 509, 529, true);
		ff(528, 13, 528, true);
		ff(531, 22, 531, true);
		ff(530, 65, 530, true);
		ff(541, 65, 541, true);
		ff(540, 22, 540, true);
		ff(543, 509, 543, false);
		ff(542, 22, 542, true);
		ff(537, 46, 537, true);
		ff(536, 1200007, 536, true);
		ff(539, 509, 539, true);
		ff(538, 1200007, 538, true);
	}

	public void prefilter2() {
		functiondefine_0();
		pre3();

	}

	public void doFilter() {
		// super.initcache();
		filterfuncount = 32;
		super.resultlistremoveAllElements();
		String alarmId = "";
		initvalue(alarmId, e);
		filter1(alarmId);
		filter2(alarmId);
	}

	public void doFilter(String alarmId) {
		// super.initcache();
		filterfuncount = 32;
		super.resultlistremoveAllElements();
		initvalue(alarmId, e);
		filter1(alarmId);
		filter2(alarmId);
	}

	public static void main(String args[]) {
		RuleSession_0_20180210230805709_1564779 rs = new RuleSession_0_20180210230805709_1564779();
		RuleAlgorithm_0_20180210230805709_1564779 ra = new RuleAlgorithm_0_20180210230805709_1564779();
		Map<String, String> e = new HashMap<String, String>();
		e.put("group_id", "-991297406");
		e.put("redefine_severity", "1");
		e.put("alarm_title", "gaojing");
		e.put("interrupt_circuit_state", "1");
		// e.put("", "");
		// e.put("", "");
		// e.put("", "");
		rs.setAlgorithm(ra);
		rs.prefilter();
		rs.init(e);
		rs.doFilter("11112123");
		rs.printresult();
	}

}
